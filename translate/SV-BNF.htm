    <div id="bnf" style="position:absolute; padding: 5px; top:80px; left:220px; bottom:30px; right:10px; background-color:#FFEEEE;overflow-y:scroll;overflow-x:auto">
      <h2>SystemVerilog IEEE 1800-2012 BNF
      </h2>
<a name="Source text">
  <h3>1 Source text
  </h3>
</a>
<a name="Library source text">
  <h3>1.1 Library source text
  </h3>
</a>
<pre><a name="library_text">library_text</a> ::=
      { <a href="#library_description">library_description</a> }

<a name="library_description">library_description</a> ::=
      <a href="#library_declaration">library_declaration</a> | <a href="#include_statement">include_statement</a> | <a href="#config_declaration">config_declaration</a> | <font color="red"><b>;</b></font>

<a name="library_declaration">library_declaration</a> ::=
      <font color="red"><b>library</b></font> <a href="#library_identifier">library_identifier</a> <a href="#file_path_spec">file_path_spec</a> { <font color="red"><b>,</b></font> <a href="#file_path_spec">file_path_spec</a> }
      [ <font color="red"><b>-incdir</b></font> <a href="#file_path_spec">file_path_spec</a> { <font color="red"><b>,</b></font> <a href="#file_path_spec">file_path_spec</a> } ] <font color="red"><b>;</b></font>

<a name="include_statement">include_statement</a> ::=
      <font color="red"><b>include</b></font> <a href="#file_path_spec">file_path_spec</a> <font color="red"><b>;</b></font></pre>
<a name="SystemVerilog source text">
  <h3>1.2 SystemVerilog source text
  </h3>
</a>
<pre><a name="source_text">source_text</a> ::=
      [ <a href="#timeunits_declaration">timeunits_declaration</a> ] { <a href="#description">description</a> }

<a name="description">description</a> ::=
      <a href="#module_declaration">module_declaration</a>
    | <a href="#udp_declaration">udp_declaration</a>
    | <a href="#interface_declaration">interface_declaration</a>
    | <a href="#program_declaration">program_declaration</a>
    | <a href="#package_declaration">package_declaration</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#package_item">package_item</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#bind_directive">bind_directive</a>
    | <a href="#config_declaration">config_declaration</a>

<a name="module_nonansi_header">module_nonansi_header</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <a href="#module_keyword">module_keyword</a> [ <a href="#lifetime">lifetime</a> ] <a href="#module_identifier">module_identifier</a>
      { <a href="#package_import_declaration">package_import_declaration</a> } [ <a href="#parameter_port_list">parameter_port_list</a> ] <a href="#list_of_ports">list_of_ports</a> <font color="red"><b>;</b></font>

<a name="module_ansi_header">module_ansi_header</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <a href="#module_keyword">module_keyword</a> [ <a href="#lifetime">lifetime</a> ] <a href="#module_identifier">module_identifier</a>
      { <a href="#package_import_declaration">package_import_declaration</a> } [ <a href="#parameter_port_list">parameter_port_list</a> ] [ <a href="#list_of_port_declarations">list_of_port_declarations</a> ] <font color="red"><b>;</b></font>

<a name="module_declaration">module_declaration</a> ::=
      <a href="#module_nonansi_header">module_nonansi_header</a> [ <a href="#timeunits_declaration">timeunits_declaration</a> ] { <a href="#module_item">module_item</a> } <font color="red"><b>endmodule</b></font>
      [ <font color="red"><b>:</b></font> <a href="#module_identifier">module_identifier</a> ]
    | <a href="#module_ansi_header">module_ansi_header</a> [ <a href="#timeunits_declaration">timeunits_declaration</a> ] { <a href="#non_port_module_item">non_port_module_item</a> } <font color="red"><b>endmodule</b></font>
      [ <font color="red"><b>:</b></font> <a href="#module_identifier">module_identifier</a> ]
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#module_keyword">module_keyword</a> [ <a href="#lifetime">lifetime</a> ] <a href="#module_identifier">module_identifier</a> <font color="red"><b>(</b></font> <font color="red"><b>.*</b></font> <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>
      [ <a href="#timeunits_declaration">timeunits_declaration</a> ] { <a href="#module_item">module_item</a> } <font color="red"><b>endmodule</b></font> [ <font color="red"><b>:</b></font> <a href="#module_identifier">module_identifier</a> ]
    | <font color="red"><b>extern</b></font> <a href="#module_nonansi_header">module_nonansi_header</a>
    | <font color="red"><b>extern</b></font> <a href="#module_ansi_header">module_ansi_header</a>

<a name="module_keyword">module_keyword</a> ::=
      <font color="red"><b>module</b></font> | <font color="red"><b>macromodule</b></font>

<a name="interface_declaration">interface_declaration</a> ::=
      <a href="#interface_nonansi_header">interface_nonansi_header</a> [ <a href="#timeunits_declaration">timeunits_declaration</a> ] { <a href="#interface_item">interface_item</a> } <font color="red"><b>endinterface</b></font>
      [ <font color="red"><b>:</b></font> <a href="#interface_identifier">interface_identifier</a> ]
    | <a href="#interface_ansi_header">interface_ansi_header</a> [ <a href="#timeunits_declaration">timeunits_declaration</a> ] { <a href="#non_port_interface_item">non_port_interface_item</a> } <font color="red"><b>endinterface</b></font>
      [ <font color="red"><b>:</b></font> <a href="#interface_identifier">interface_identifier</a> ]
    | { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>interface</b></font> <a href="#interface_identifier">interface_identifier</a> <font color="red"><b>(</b></font> <font color="red"><b>.*</b></font> <font color="red"><b>)</b></font> <font color="red"><b>;</b></font> [ <a href="#timeunits_declaration">timeunits_declaration</a> ]
      { <a href="#interface_item">interface_item</a> } <font color="red"><b>endinterface</b></font> [ <font color="red"><b>:</b></font> <a href="#interface_identifier">interface_identifier</a> ]
    | <font color="red"><b>extern</b></font> <a href="#interface_nonansi_header">interface_nonansi_header</a>
    | <font color="red"><b>extern</b></font> <a href="#interface_ansi_header">interface_ansi_header</a>

<a name="interface_nonansi_header">interface_nonansi_header</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>interface</b></font> [ <a href="#lifetime">lifetime</a> ] <a href="#interface_identifier">interface_identifier</a>
      { <a href="#package_import_declaration">package_import_declaration</a> } [ <a href="#parameter_port_list">parameter_port_list</a> ] <a href="#list_of_ports">list_of_ports</a> <font color="red"><b>;</b></font>

<a name="interface_ansi_header">interface_ansi_header</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>interface</b></font> [ <a href="#lifetime">lifetime</a> ] <a href="#interface_identifier">interface_identifier</a>
      { <a href="#package_import_declaration">package_import_declaration</a> } [ <a href="#parameter_port_list">parameter_port_list</a> ] [ <a href="#list_of_port_declarations">list_of_port_declarations</a> ] <font color="red"><b>;</b></font>

<a name="program_declaration">program_declaration</a> ::=
      <a href="#program_nonansi_header">program_nonansi_header</a> [ <a href="#timeunits_declaration">timeunits_declaration</a> ] { <a href="#program_item">program_item</a> } <font color="red"><b>endprogram</b></font>
      [ <font color="red"><b>:</b></font> <a href="#program_identifier">program_identifier</a> ]
    | <a href="#program_ansi_header">program_ansi_header</a> [ <a href="#timeunits_declaration">timeunits_declaration</a> ] { <a href="#non_port_program_item">non_port_program_item</a> } <font color="red"><b>endprogram</b></font>
      [ <font color="red"><b>:</b></font> <a href="#program_identifier">program_identifier</a> ]
    | { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>program</b></font> <a href="#program_identifier">program_identifier</a> <font color="red"><b>(</b></font> <font color="red"><b>.*</b></font> <font color="red"><b>)</b></font> <font color="red"><b>;</b></font> [ <a href="#timeunits_declaration">timeunits_declaration</a> ]
      { <a href="#program_item">program_item</a> } <font color="red"><b>endprogram</b></font> [ <font color="red"><b>:</b></font> <a href="#program_identifier">program_identifier</a> ]
    | <font color="red"><b>extern</b></font> <a href="#program_nonansi_header">program_nonansi_header</a>
    | <font color="red"><b>extern</b></font> <a href="#program_ansi_header">program_ansi_header</a>

<a name="program_nonansi_header">program_nonansi_header</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>program</b></font> [ <a href="#lifetime">lifetime</a> ] <a href="#program_identifier">program_identifier</a> { <a href="#package_import_declaration">package_import_declaration</a> }
      [ <a href="#parameter_port_list">parameter_port_list</a> ] <a href="#list_of_ports">list_of_ports</a> <font color="red"><b>;</b></font>

<a name="program_ansi_header">program_ansi_header</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>program</b></font> [ <a href="#lifetime">lifetime</a> ] <a href="#program_identifier">program_identifier</a> { <a href="#package_import_declaration">package_import_declaration</a> }
      [ <a href="#parameter_port_list">parameter_port_list</a> ] [ <a href="#list_of_port_declarations">list_of_port_declarations</a> ] <font color="red"><b>;</b></font>

<a name="checker_declaration">checker_declaration</a> ::=
      <font color="red"><b>checker</b></font> <a href="#checker_identifier">checker_identifier</a> [ <font color="red"><b>(</b></font> [ <a href="#checker_port_list">checker_port_list</a> ] <font color="red"><b>)</b></font> ] <font color="red"><b>;</b></font>
      { { <a href="#attribute_instance">attribute_instance</a> } <a href="#checker_or_generate_item">checker_or_generate_item</a> } <font color="red"><b>endchecker</b></font> [ <font color="red"><b>:</b></font> <a href="#checker_identifier">checker_identifier</a> ]

<a name="class_declaration">class_declaration</a> ::=
      [ <font color="red"><b>virtual</b></font> ] <font color="red"><b>class</b></font> [ <a href="#lifetime">lifetime</a> ] <a href="#class_identifier">class_identifier</a> [ <a href="#parameter_port_list">parameter_port_list</a> ]
      [ <font color="red"><b>extends</b></font> <a href="#class_type">class_type</a> [ <font color="red"><b>(</b></font> <a href="#list_of_arguments">list_of_arguments</a> <font color="red"><b>)</b></font> ] ]
      [ <font color="red"><b>implements</b></font> <a href="#interface_class_type">interface_class_type</a> { <font color="red"><b>,</b></font> <a href="#interface_class_type">interface_class_type</a> } ] <font color="red"><b>;</b></font> { <a href="#class_item">class_item</a> } <font color="red"><b>endclass</b></font>
      [ <font color="red"><b>:</b></font> <a href="#class_identifier">class_identifier</a> ]

<a name="interface_class_type">interface_class_type</a> ::=
      <a href="#ps_class_identifier">ps_class_identifier</a> [ <a href="#parameter_value_assignment">parameter_value_assignment</a> ]

<a name="interface_class_declaration">interface_class_declaration</a> ::=
      <font color="red"><b>interface</b></font> <font color="red"><b>class</b></font> <a href="#class_identifier">class_identifier</a> [ <a href="#parameter_port_list">parameter_port_list</a> ]
      [ <font color="red"><b>extends</b></font> <a href="#interface_class_type">interface_class_type</a> { <font color="red"><b>,</b></font> <a href="#interface_class_type">interface_class_type</a> } ] <font color="red"><b>;</b></font> { <a href="#interface_class_item">interface_class_item</a> }
      <font color="red"><b>endclass</b></font> [ <font color="red"><b>:</b></font> <a href="#class_identifier">class_identifier</a> ]

<a name="interface_class_item">interface_class_item</a> ::=
      <a href="#type_declaration">type_declaration</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#interface_class_method">interface_class_method</a>
    | <a href="#local_parameter_declaration">local_parameter_declaration</a> <font color="red"><b>;</b></font>
    | <a href="#parameter_declaration">parameter_declaration</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>;</b></font>

<a name="interface_class_method">interface_class_method</a> ::=
      <font color="red"><b>pure</b></font> <font color="red"><b>virtual</b></font> <a href="#method_prototype">method_prototype</a> <font color="red"><b>;</b></font>

<a name="package_declaration">package_declaration</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>package</b></font> [ <a href="#lifetime">lifetime</a> ] <a href="#package_identifier">package_identifier</a> <font color="red"><b>;</b></font> [ <a href="#timeunits_declaration">timeunits_declaration</a> ]
      { { <a href="#attribute_instance">attribute_instance</a> } <a href="#package_item">package_item</a> } <font color="red"><b>endpackage</b></font> [ <font color="red"><b>:</b></font> <a href="#package_identifier">package_identifier</a> ]

<a name="timeunits_declaration">timeunits_declaration</a> ::=
      <font color="red"><b>timeunit</b></font> <a href="#time_literal">time_literal</a> [ <font color="red"><b>/</b></font> <a href="#time_literal">time_literal</a> ] <font color="red"><b>;</b></font>
    | <font color="red"><b>timeprecision</b></font> <a href="#time_literal">time_literal</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>timeunit</b></font> <a href="#time_literal">time_literal</a> <font color="red"><b>;</b></font> <font color="red"><b>timeprecision</b></font> <a href="#time_literal">time_literal</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>timeprecision</b></font> <a href="#time_literal">time_literal</a> <font color="red"><b>;</b></font> <font color="red"><b>timeunit</b></font> <a href="#time_literal">time_literal</a> <font color="red"><b>;</b></font></pre>
<a name="Module ports">
  <h3>1.3 Module ports
  </h3>
</a>
<pre><a name="parameter_port_list">parameter_port_list</a> ::=
      <font color="red"><b>#</b></font> <font color="red"><b>(</b></font> <a href="#list_of_param_assignments">list_of_param_assignments</a> { <font color="red"><b>,</b></font> <a href="#parameter_port_declaration">parameter_port_declaration</a> } <font color="red"><b>)</b></font>
    | <font color="red"><b>#</b></font> <font color="red"><b>(</b></font> <a href="#parameter_port_declaration">parameter_port_declaration</a> { <font color="red"><b>,</b></font> <a href="#parameter_port_declaration">parameter_port_declaration</a> } <font color="red"><b>)</b></font>
    | <font color="red"><b>#</b></font> <font color="red"><b>(</b></font> <font color="red"><b>)</b></font>

<a name="parameter_port_declaration">parameter_port_declaration</a> ::=
      <a href="#parameter_declaration">parameter_declaration</a>
    | <a href="#local_parameter_declaration">local_parameter_declaration</a>
    | <a href="#data_type">data_type</a> <a href="#list_of_param_assignments">list_of_param_assignments</a>
    | <font color="red"><b>type</b></font> <a href="#list_of_type_assignments">list_of_type_assignments</a>

<a name="list_of_ports">list_of_ports</a> ::=
      <font color="red"><b>(</b></font> <a href="#port">port</a> { <font color="red"><b>,</b></font> <a href="#port">port</a> } <font color="red"><b>)</b></font>

<a name="list_of_port_declarations">list_of_port_declarations</a> ::=
      <font color="red"><b>(</b></font>
      [ { <a href="#attribute_instance">attribute_instance</a> } <a href="#ansi_port_declaration">ansi_port_declaration</a>
        { <font color="red"><b>,</b></font> { <a href="#attribute_instance">attribute_instance</a> } <a href="#ansi_port_declaration">ansi_port_declaration</a> } ]
      <font color="red"><b>)</b></font>

<a name="port_declaration">port_declaration</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <a href="#inout_declaration">inout_declaration</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#input_declaration">input_declaration</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#output_declaration">output_declaration</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#ref_declaration">ref_declaration</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#interface_port_declaration">interface_port_declaration</a>

<a name="port">port</a> ::=
      [ <a href="#port_expression">port_expression</a> ] | <font color="red"><b>.</b></font> <a href="#port_identifier">port_identifier</a> <font color="red"><b>(</b></font> [ <a href="#port_expression">port_expression</a> ] <font color="red"><b>)</b></font>

<a name="port_expression">port_expression</a> ::=
      <a href="#port_reference">port_reference</a> | { <a href="#port_reference">port_reference</a> { <font color="red"><b>,</b></font> <a href="#port_reference">port_reference</a> } }

<a name="port_reference">port_reference</a> ::=
      <a href="#port_identifier">port_identifier</a> <a href="#constant_select">constant_select</a>

<a name="port_direction">port_direction</a> ::=
      <font color="red"><b>input</b></font> | <font color="red"><b>output</b></font> | <font color="red"><b>inout</b></font> | <font color="red"><b>ref</b></font>

<a name="net_port_header">net_port_header</a> ::=
      [ <a href="#port_direction">port_direction</a> ] <a href="#net_port_type">net_port_type</a>

<a name="variable_port_header">variable_port_header</a> ::=
      [ <a href="#port_direction">port_direction</a> ] <a href="#variable_port_type">variable_port_type</a>

<a name="interface_port_header">interface_port_header</a> ::=
      <a href="#interface_identifier">interface_identifier</a> [ <font color="red"><b>.</b></font> <a href="#modport_identifier">modport_identifier</a> ] | <font color="red"><b>interface</b></font> [ <font color="red"><b>.</b></font> <a href="#modport_identifier">modport_identifier</a> ]

<a name="ansi_port_declaration">ansi_port_declaration</a> ::=
      [ <a href="#net_port_header">net_port_header</a> | <a href="#interface_port_header">interface_port_header</a> ] <a href="#port_identifier">port_identifier</a> { <a href="#unpacked_dimension">unpacked_dimension</a> }
      [ <font color="red"><b>=</b></font> <a href="#constant_expression">constant_expression</a> ]
    | [ <a href="#variable_port_header">variable_port_header</a> ] <a href="#port_identifier">port_identifier</a> { <a href="#variable_dimension">variable_dimension</a> } [ <font color="red"><b>=</b></font> <a href="#constant_expression">constant_expression</a> ]
    | [ <a href="#port_direction">port_direction</a> ] <font color="red"><b>.</b></font> <a href="#port_identifier">port_identifier</a> <font color="red"><b>(</b></font> [ <a href="#expression">expression</a> ] <font color="red"><b>)</b></font></pre>
<a name="Module items">
  <h3>1.4 Module items
  </h3>
</a>
<pre><a name="elaboration_system_task">elaboration_system_task</a> ::=
      <font color="red"><b>$fatal</b></font> [ <font color="red"><b>(</b></font> <a href="#finish_number">finish_number</a> [ <font color="red"><b>,</b></font> <a href="#list_of_arguments">list_of_arguments</a> ] <font color="red"><b>)</b></font> ] <font color="red"><b>;</b></font>
    | <font color="red"><b>$error</b></font> [ <font color="red"><b>(</b></font> [ <a href="#list_of_arguments">list_of_arguments</a> ] <font color="red"><b>)</b></font> ] <font color="red"><b>;</b></font>
    | <font color="red"><b>$warning</b></font> [ <font color="red"><b>(</b></font> [ <a href="#list_of_arguments">list_of_arguments</a> ] <font color="red"><b>)</b></font> ] <font color="red"><b>;</b></font>
    | <font color="red"><b>$info</b></font> [ <font color="red"><b>(</b></font> [ <a href="#list_of_arguments">list_of_arguments</a> ] <font color="red"><b>)</b></font> ] <font color="red"><b>;</b></font>

<a name="finish_number">finish_number</a> ::=
      <font color="red"><b>0</b></font> | <font color="red"><b>1</b></font> | <font color="red"><b>2</b></font>

<a name="module_common_item">module_common_item</a> ::=
      <a href="#module_or_generate_item_declaration">module_or_generate_item_declaration</a>
    | <a href="#interface_instantiation">interface_instantiation</a>
    | <a href="#program_instantiation">program_instantiation</a>
    | <a href="#assertion_item">assertion_item</a>
    | <a href="#bind_directive">bind_directive</a>
    | <a href="#continuous_assign">continuous_assign</a>
    | <a href="#net_alias">net_alias</a>
    | <a href="#initial_construct">initial_construct</a>
    | <a href="#final_construct">final_construct</a>
    | <a href="#always_construct">always_construct</a>
    | <a href="#loop_generate_construct">loop_generate_construct</a>
    | <a href="#conditional_generate_construct">conditional_generate_construct</a>
    | <a href="#elaboration_system_task">elaboration_system_task</a>

<a name="module_item">module_item</a> ::=
      <a href="#port_declaration">port_declaration</a> <font color="red"><b>;</b></font> | <a href="#non_port_module_item">non_port_module_item</a>

<a name="module_or_generate_item">module_or_generate_item</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <a href="#parameter_override">parameter_override</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#gate_instantiation">gate_instantiation</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#udp_instantiation">udp_instantiation</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#module_instantiation">module_instantiation</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#module_common_item">module_common_item</a>

<a name="module_or_generate_item_declaration">module_or_generate_item_declaration</a> ::=
      <a href="#package_or_generate_item_declaration">package_or_generate_item_declaration</a>
    | <a href="#genvar_declaration">genvar_declaration</a>
    | <a href="#clocking_declaration">clocking_declaration</a>
    | <font color="red"><b>default</b></font> <font color="red"><b>clocking</b></font> <a href="#clocking_identifier">clocking_identifier</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>default</b></font> <font color="red"><b>disable</b></font> <font color="red"><b>iff</b></font> <a href="#expression_or_dist">expression_or_dist</a> <font color="red"><b>;</b></font>

<a name="non_port_module_item">non_port_module_item</a> ::=
      <a href="#generate_region">generate_region</a>
    | <a href="#module_or_generate_item">module_or_generate_item</a>
    | <a href="#specify_block">specify_block</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#specparam_declaration">specparam_declaration</a>
    | <a href="#program_declaration">program_declaration</a>
    | <a href="#module_declaration">module_declaration</a>
    | <a href="#interface_declaration">interface_declaration</a>
    | <a href="#timeunits_declaration">timeunits_declaration</a>

<a name="parameter_override">parameter_override</a> ::=
      <font color="red"><b>defparam</b></font> <a href="#list_of_defparam_assignments">list_of_defparam_assignments</a> <font color="red"><b>;</b></font>

<a name="bind_directive">bind_directive</a> ::=
      <font color="red"><b>bind</b></font> <a href="#bind_target_scope">bind_target_scope</a> [ <font color="red"><b>:</b></font> <a href="#bind_target_instance_list">bind_target_instance_list</a> ] <a href="#bind_instantiation">bind_instantiation</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>bind</b></font> <a href="#bind_target_instance">bind_target_instance</a> <a href="#bind_instantiation">bind_instantiation</a> <font color="red"><b>;</b></font>

<a name="bind_target_scope">bind_target_scope</a> ::=
      <a href="#module_identifier">module_identifier</a> | <a href="#interface_identifier">interface_identifier</a>

<a name="bind_target_instance">bind_target_instance</a> ::=
      <a href="#hierarchical_identifier">hierarchical_identifier</a> <a href="#constant_bit_select">constant_bit_select</a>

<a name="bind_target_instance_list">bind_target_instance_list</a> ::=
      <a href="#bind_target_instance">bind_target_instance</a> { <font color="red"><b>,</b></font> <a href="#bind_target_instance">bind_target_instance</a> }

<a name="bind_instantiation">bind_instantiation</a> ::=
      <a href="#program_instantiation">program_instantiation</a> | <a href="#module_instantiation">module_instantiation</a> | <a href="#interface_instantiation">interface_instantiation</a> | <a href="#checker_instantiation">checker_instantiation</a></pre>
<a name="Configuration">
  <h3>1.5 Configuration
  </h3>
</a>
<pre><a name="config_declaration">config_declaration</a> ::=
      <font color="red"><b>config</b></font> <a href="#config_identifier">config_identifier</a> <font color="red"><b>;</b></font> { <a href="#local_parameter_declaration">local_parameter_declaration</a> <font color="red"><b>;</b></font> } <a href="#design_statement">design_statement</a>
      { <a href="#config_rule_statement">config_rule_statement</a> } <font color="red"><b>endconfig</b></font> [ <font color="red"><b>:</b></font> <a href="#config_identifier">config_identifier</a> ]

<a name="design_statement">design_statement</a> ::=
      <font color="red"><b>design</b></font> { [ <a href="#library_identifier">library_identifier</a> <font color="red"><b>.</b></font> ] <a href="#cell_identifier">cell_identifier</a> } <font color="red"><b>;</b></font>

<a name="config_rule_statement">config_rule_statement</a> ::=
      <a href="#default_clause">default_clause</a> <a href="#liblist_clause">liblist_clause</a> <font color="red"><b>;</b></font>
    | <a href="#inst_clause">inst_clause</a> <a href="#liblist_clause">liblist_clause</a> <font color="red"><b>;</b></font>
    | <a href="#inst_clause">inst_clause</a> <a href="#use_clause">use_clause</a> <font color="red"><b>;</b></font>
    | <a href="#cell_clause">cell_clause</a> <a href="#liblist_clause">liblist_clause</a> <font color="red"><b>;</b></font>
    | <a href="#cell_clause">cell_clause</a> <a href="#use_clause">use_clause</a> <font color="red"><b>;</b></font>

<a name="default_clause">default_clause</a> ::=
      <font color="red"><b>default</b></font>

<a name="inst_clause">inst_clause</a> ::=
      <font color="red"><b>instance</b></font> <a href="#inst_name">inst_name</a>

<a name="inst_name">inst_name</a> ::=
      <a href="#topmodule_identifier">topmodule_identifier</a> { <font color="red"><b>.</b></font> <a href="#instance_identifier">instance_identifier</a> }

<a name="cell_clause">cell_clause</a> ::=
      <font color="red"><b>cell</b></font> [ <a href="#library_identifier">library_identifier</a> <font color="red"><b>.</b></font> ] <a href="#cell_identifier">cell_identifier</a>

<a name="liblist_clause">liblist_clause</a> ::=
      <font color="red"><b>liblist</b></font> { <a href="#library_identifier">library_identifier</a> }

<a name="use_clause">use_clause</a> ::=
      <font color="red"><b>use</b></font> [ <a href="#library_identifier">library_identifier</a> <font color="red"><b>.</b></font> ] <a href="#cell_identifier">cell_identifier</a> [ <font color="red"><b>:</b></font> <font color="red"><b>config</b></font> ]
    | <font color="red"><b>use</b></font> <a href="#named_parameter_assignment">named_parameter_assignment</a> { <font color="red"><b>,</b></font> <a href="#named_parameter_assignment">named_parameter_assignment</a> } [ <font color="red"><b>:</b></font> <font color="red"><b>config</b></font> ]
    | <font color="red"><b>use</b></font> [ <a href="#library_identifier">library_identifier</a> <font color="red"><b>.</b></font> ] <a href="#cell_identifier">cell_identifier</a> <a href="#named_parameter_assignment">named_parameter_assignment</a>
      { <font color="red"><b>,</b></font> <a href="#named_parameter_assignment">named_parameter_assignment</a> } [ <font color="red"><b>:</b></font> <font color="red"><b>config</b></font> ]</pre>
<a name="Interface items">
  <h3>1.6 Interface items
  </h3>
</a>
<pre><a name="interface_or_generate_item">interface_or_generate_item</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <a href="#module_common_item">module_common_item</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#modport_declaration">modport_declaration</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#extern_tf_declaration">extern_tf_declaration</a>

<a name="extern_tf_declaration">extern_tf_declaration</a> ::=
      <font color="red"><b>extern</b></font> <a href="#method_prototype">method_prototype</a> <font color="red"><b>;</b></font> | <font color="red"><b>extern</b></font> <font color="red"><b>forkjoin</b></font> <a href="#task_prototype">task_prototype</a> <font color="red"><b>;</b></font>

<a name="interface_item">interface_item</a> ::=
      <a href="#port_declaration">port_declaration</a> <font color="red"><b>;</b></font> | <a href="#non_port_interface_item">non_port_interface_item</a>

<a name="non_port_interface_item">non_port_interface_item</a> ::=
      <a href="#generate_region">generate_region</a>
    | <a href="#interface_or_generate_item">interface_or_generate_item</a>
    | <a href="#program_declaration">program_declaration</a>
    | <a href="#interface_declaration">interface_declaration</a>
    | <a href="#timeunits_declaration">timeunits_declaration</a></pre>
<a name="Program items">
  <h3>1.7 Program items
  </h3>
</a>
<pre><a name="program_item">program_item</a> ::=
      <a href="#port_declaration">port_declaration</a> <font color="red"><b>;</b></font> | <a href="#non_port_program_item">non_port_program_item</a>

<a name="non_port_program_item">non_port_program_item</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <a href="#continuous_assign">continuous_assign</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#module_or_generate_item_declaration">module_or_generate_item_declaration</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#initial_construct">initial_construct</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#final_construct">final_construct</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#concurrent_assertion_item">concurrent_assertion_item</a>
    | <a href="#timeunits_declaration">timeunits_declaration</a>
    | <a href="#program_generate_item">program_generate_item</a>

<a name="program_generate_item">program_generate_item</a> ::=
      <a href="#loop_generate_construct">loop_generate_construct</a>
    | <a href="#conditional_generate_construct">conditional_generate_construct</a>
    | <a href="#generate_region">generate_region</a>
    | <a href="#elaboration_system_task">elaboration_system_task</a></pre>
<a name="Checker items">
  <h3>1.8 Checker items
  </h3>
</a>
<pre><a name="checker_port_list">checker_port_list</a> ::=
      <a href="#checker_port_item">checker_port_item</a> { <font color="red"><b>,</b></font> <a href="#checker_port_item">checker_port_item</a> }

<a name="checker_port_item">checker_port_item</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } [ <a href="#checker_port_direction">checker_port_direction</a> ] <a href="#property_formal_type">property_formal_type</a> <a href="#formal_port_identifier">formal_port_identifier</a>
      { <a href="#variable_dimension">variable_dimension</a> } [ <font color="red"><b>=</b></font> <a href="#property_actual_arg">property_actual_arg</a> ]

<a name="checker_port_direction">checker_port_direction</a> ::=
      <font color="red"><b>input</b></font> | <font color="red"><b>output</b></font>

<a name="checker_or_generate_item">checker_or_generate_item</a> ::=
      <a href="#checker_or_generate_item_declaration">checker_or_generate_item_declaration</a>
    | <a href="#initial_construct">initial_construct</a>
    | <a href="#always_construct">always_construct</a>
    | <a href="#final_construct">final_construct</a>
    | <a href="#assertion_item">assertion_item</a>
    | <a href="#continuous_assign">continuous_assign</a>
    | <a href="#checker_generate_item">checker_generate_item</a>

<a name="checker_or_generate_item_declaration">checker_or_generate_item_declaration</a> ::=
      [ <font color="red"><b>rand</b></font> ] <a href="#data_declaration">data_declaration</a>
    | <a href="#function_declaration">function_declaration</a>
    | <a href="#checker_declaration">checker_declaration</a>
    | <a href="#assertion_item_declaration">assertion_item_declaration</a>
    | <a href="#covergroup_declaration">covergroup_declaration</a>
    | <a href="#overload_declaration">overload_declaration</a>
    | <a href="#genvar_declaration">genvar_declaration</a>
    | <a href="#clocking_declaration">clocking_declaration</a>
    | <font color="red"><b>default</b></font> <font color="red"><b>clocking</b></font> <a href="#clocking_identifier">clocking_identifier</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>default</b></font> <font color="red"><b>disable</b></font> <font color="red"><b>iff</b></font> <a href="#expression_or_dist">expression_or_dist</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>;</b></font>

<a name="checker_generate_item">checker_generate_item</a> ::=
      <a href="#loop_generate_construct">loop_generate_construct</a>
    | <a href="#conditional_generate_construct">conditional_generate_construct</a>
    | <a href="#generate_region">generate_region</a>
    | <a href="#elaboration_system_task">elaboration_system_task</a></pre>
<a name="Class items">
  <h3>1.9 Class items
  </h3>
</a>
<pre><a name="class_item">class_item</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <a href="#class_property">class_property</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#class_method">class_method</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#class_constraint">class_constraint</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#class_declaration">class_declaration</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#covergroup_declaration">covergroup_declaration</a>
    | <a href="#local_parameter_declaration">local_parameter_declaration</a> <font color="red"><b>;</b></font>
    | <a href="#parameter_declaration">parameter_declaration</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>;</b></font>

<a name="class_property">class_property</a> ::=
      { <a href="#property_qualifier">property_qualifier</a> } <a href="#data_declaration">data_declaration</a>
    | <font color="red"><b>const</b></font> { <a href="#class_item_qualifier">class_item_qualifier</a> } <a href="#data_type">data_type</a> <a href="#const_identifier">const_identifier</a> [ <font color="red"><b>=</b></font> <a href="#constant_expression">constant_expression</a> ] <font color="red"><b>;</b></font>

<a name="class_method">class_method</a> ::=
      { <a href="#method_qualifier">method_qualifier</a> } <a href="#task_declaration">task_declaration</a>
    | { <a href="#method_qualifier">method_qualifier</a> } <a href="#function_declaration">function_declaration</a>
    | <font color="red"><b>pure</b></font> <font color="red"><b>virtual</b></font> { <a href="#class_item_qualifier">class_item_qualifier</a> } <a href="#method_prototype">method_prototype</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>extern</b></font> { <a href="#method_qualifier">method_qualifier</a> } <a href="#method_prototype">method_prototype</a> <font color="red"><b>;</b></font>
    | { <a href="#method_qualifier">method_qualifier</a> } <a href="#class_constructor_declaration">class_constructor_declaration</a>
    | <font color="red"><b>extern</b></font> { <a href="#method_qualifier">method_qualifier</a> } <a href="#class_constructor_prototype">class_constructor_prototype</a>

<a name="class_constructor_prototype">class_constructor_prototype</a> ::=
      <font color="red"><b>function</b></font> <font color="red"><b>new</b></font> [ <font color="red"><b>(</b></font> [ <a href="#tf_port_list">tf_port_list</a> ] <font color="red"><b>)</b></font> ] <font color="red"><b>;</b></font>

<a name="class_constraint">class_constraint</a> ::=
      <a href="#constraint_prototype">constraint_prototype</a> | <a href="#constraint_declaration">constraint_declaration</a>

<a name="class_item_qualifier">class_item_qualifier</a> ::=
      <font color="red"><b>static</b></font> | <font color="red"><b>protected</b></font> | <font color="red"><b>local</b></font>

<a name="property_qualifier">property_qualifier</a> ::=
      <a href="#random_qualifier">random_qualifier</a> | <a href="#class_item_qualifier">class_item_qualifier</a>

<a name="random_qualifier">random_qualifier</a> ::=
      <font color="red"><b>rand</b></font> | <font color="red"><b>randc</b></font>

<a name="method_qualifier">method_qualifier</a> ::=
      [ <font color="red"><b>pure</b></font> ] <font color="red"><b>virtual</b></font> | <a href="#class_item_qualifier">class_item_qualifier</a>

<a name="method_prototype">method_prototype</a> ::=
      <a href="#task_prototype">task_prototype</a> | <a href="#function_prototype">function_prototype</a>

<a name="class_constructor_declaration">class_constructor_declaration</a> ::=
      <font color="red"><b>function</b></font> [ <a href="#class_scope">class_scope</a> ] <font color="red"><b>new</b></font> [ <font color="red"><b>(</b></font> [ <a href="#tf_port_list">tf_port_list</a> ] <font color="red"><b>)</b></font> ] <font color="red"><b>;</b></font> { <a href="#block_item_declaration">block_item_declaration</a> }
      [ <font color="red"><b>super</b></font> <font color="red"><b>.</b></font> <font color="red"><b>new</b></font> [ <font color="red"><b>(</b></font> <a href="#list_of_arguments">list_of_arguments</a> <font color="red"><b>)</b></font> ] <font color="red"><b>;</b></font> ] { <a href="#function_statement_or_null">function_statement_or_null</a> } <font color="red"><b>endfunction</b></font>
      [ <font color="red"><b>:</b></font> <font color="red"><b>new</b></font> ]</pre>
<a name="Constraints">
  <h3>1.10 Constraints
  </h3>
</a>
<pre><a name="constraint_declaration">constraint_declaration</a> ::=
      [ <font color="red"><b>static</b></font> ] <font color="red"><b>constraint</b></font> <a href="#constraint_identifier">constraint_identifier</a> <a href="#constraint_block">constraint_block</a>

<a name="constraint_block">constraint_block</a> ::=
      <font color="red"><b>{</b></font> { <a href="#constraint_block_item">constraint_block_item</a> } <font color="red"><b>}</b></font>

<a name="constraint_block_item">constraint_block_item</a> ::=
      <font color="red"><b>solve</b></font> <a href="#solve_before_list">solve_before_list</a> <font color="red"><b>before</b></font> <a href="#solve_before_list">solve_before_list</a> <font color="red"><b>;</b></font> | <a href="#constraint_expression">constraint_expression</a>

<a name="solve_before_list">solve_before_list</a> ::=
      <a href="#constraint_primary">constraint_primary</a> { <font color="red"><b>,</b></font> <a href="#constraint_primary">constraint_primary</a> }

<a name="constraint_primary">constraint_primary</a> ::=
      [ <a href="#implicit_class_handle">implicit_class_handle</a> <font color="red"><b>.</b></font> | <a href="#class_scope">class_scope</a> ] <a href="#hierarchical_identifier">hierarchical_identifier</a> <a href="#select">select</a>

<a name="constraint_expression">constraint_expression</a> ::=
      [ <font color="red"><b>soft</b></font> ] <a href="#expression_or_dist">expression_or_dist</a> <font color="red"><b>;</b></font>
    | <a href="#uniqueness_constraint">uniqueness_constraint</a> <font color="red"><b>;</b></font>
    | <a href="#expression">expression</a> <font color="red"><b>-&gt;</b></font> <a href="#constraint_set">constraint_set</a>
    | <font color="red"><b>if</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> <a href="#constraint_set">constraint_set</a> [ <font color="red"><b>else</b></font> <a href="#constraint_set">constraint_set</a> ]
    | <font color="red"><b>foreach</b></font> <font color="red"><b>(</b></font> <a href="#ps_or_hierarchical_array_identifier">ps_or_hierarchical_array_identifier</a> <font color="red"><b>[</b></font> <a href="#loop_variables">loop_variables</a> <font color="red"><b>]</b></font> <font color="red"><b>)</b></font> <a href="#constraint_set">constraint_set</a>
    | <font color="red"><b>disable</b></font> <font color="red"><b>soft</b></font> <a href="#constraint_primary">constraint_primary</a> <font color="red"><b>;</b></font>

<a name="uniqueness_constraint">uniqueness_constraint</a> ::=
      <font color="red"><b>unique</b></font> <font color="red"><b>{</b></font> <a href="#open_range_list">open_range_list</a> <font color="red"><b>}</b></font>

<a name="constraint_set">constraint_set</a> ::=
      <a href="#constraint_expression">constraint_expression</a> | <font color="red"><b>{</b></font> { <a href="#constraint_expression">constraint_expression</a> } <font color="red"><b>}</b></font>

<a name="dist_list">dist_list</a> ::=
      <a href="#dist_item">dist_item</a> { <font color="red"><b>,</b></font> <a href="#dist_item">dist_item</a> }

<a name="dist_item">dist_item</a> ::=
      <a href="#value_range">value_range</a> [ <a href="#dist_weight">dist_weight</a> ]

<a name="dist_weight">dist_weight</a> ::=
      <font color="red"><b>:=</b></font> <a href="#expression">expression</a> | <font color="red"><b>:/</b></font> <a href="#expression">expression</a>

<a name="constraint_prototype">constraint_prototype</a> ::=
      [ <a href="#constraint_prototype_qualifier">constraint_prototype_qualifier</a> ] [ <font color="red"><b>static</b></font> ] <font color="red"><b>constraint</b></font> <a href="#constraint_identifier">constraint_identifier</a> <font color="red"><b>;</b></font>

<a name="constraint_prototype_qualifier">constraint_prototype_qualifier</a> ::=
      <font color="red"><b>extern</b></font> | <font color="red"><b>pure</b></font>

<a name="extern_constraint_declaration">extern_constraint_declaration</a> ::=
      [ <font color="red"><b>static</b></font> ] <font color="red"><b>constraint</b></font> <a href="#class_scope">class_scope</a> <a href="#constraint_identifier">constraint_identifier</a> <a href="#constraint_block">constraint_block</a>

<a name="identifier_list">identifier_list</a> ::=
      <a href="#identifier">identifier</a> { <font color="red"><b>,</b></font> <a href="#identifier">identifier</a> }</pre>
<a name="Package items">
  <h3>1.11 Package items
  </h3>
</a>
<pre><a name="package_item">package_item</a> ::=
      <a href="#package_or_generate_item_declaration">package_or_generate_item_declaration</a>
    | <a href="#anonymous_program">anonymous_program</a>
    | <a href="#package_export_declaration">package_export_declaration</a>
    | <a href="#timeunits_declaration">timeunits_declaration</a>

<a name="package_or_generate_item_declaration">package_or_generate_item_declaration</a> ::=
      <a href="#net_declaration">net_declaration</a>
    | <a href="#data_declaration">data_declaration</a>
    | <a href="#task_declaration">task_declaration</a>
    | <a href="#function_declaration">function_declaration</a>
    | <a href="#checker_declaration">checker_declaration</a>
    | <a href="#dpi_import_export">dpi_import_export</a>
    | <a href="#extern_constraint_declaration">extern_constraint_declaration</a>
    | <a href="#class_declaration">class_declaration</a>
    | <a href="#class_constructor_declaration">class_constructor_declaration</a>
    | <a href="#local_parameter_declaration">local_parameter_declaration</a> <font color="red"><b>;</b></font>
    | <a href="#parameter_declaration">parameter_declaration</a> <font color="red"><b>;</b></font>
    | <a href="#covergroup_declaration">covergroup_declaration</a>
    | <a href="#overload_declaration">overload_declaration</a>
    | <a href="#assertion_item_declaration">assertion_item_declaration</a>
    | <font color="red"><b>;</b></font>

<a name="anonymous_program">anonymous_program</a> ::=
      <font color="red"><b>program</b></font> <font color="red"><b>;</b></font> { <a href="#anonymous_program_item">anonymous_program_item</a> } <font color="red"><b>endprogram</b></font>

<a name="anonymous_program_item">anonymous_program_item</a> ::=
      <a href="#task_declaration">task_declaration</a>
    | <a href="#function_declaration">function_declaration</a>
    | <a href="#class_declaration">class_declaration</a>
    | <a href="#covergroup_declaration">covergroup_declaration</a>
    | <a href="#class_constructor_declaration">class_constructor_declaration</a>
    | <font color="red"><b>;</b></font></pre>
<a name="Declarations">
  <h3>2 Declarations
  </h3>
</a>
<a name="Declaration types">
  <h3>2.1 Declaration types
  </h3>
</a>
<a name="Module parameter declarations">
  <h3>2.1.1 Module parameter declarations
  </h3>
</a>
<pre><a name="local_parameter_declaration">local_parameter_declaration</a> ::=
      <font color="red"><b>localparam</b></font> <a href="#data_type_or_implicit">data_type_or_implicit</a> <a href="#list_of_param_assignments">list_of_param_assignments</a>
    | <font color="red"><b>localparam</b></font> <font color="red"><b>type</b></font> <a href="#list_of_type_assignments">list_of_type_assignments</a>

<a name="parameter_declaration">parameter_declaration</a> ::=
      <font color="red"><b>parameter</b></font> <a href="#data_type_or_implicit">data_type_or_implicit</a> <a href="#list_of_param_assignments">list_of_param_assignments</a>
    | <font color="red"><b>parameter</b></font> <font color="red"><b>type</b></font> <a href="#list_of_type_assignments">list_of_type_assignments</a>

<a name="specparam_declaration">specparam_declaration</a> ::=
      <font color="red"><b>specparam</b></font> [ <a href="#packed_dimension">packed_dimension</a> ] <a href="#list_of_specparam_assignments">list_of_specparam_assignments</a> <font color="red"><b>;</b></font></pre>
<a name="Port declarations">
  <h3>2.1.2 Port declarations
  </h3>
</a>
<pre><a name="inout_declaration">inout_declaration</a> ::=
      <font color="red"><b>inout</b></font> <a href="#net_port_type">net_port_type</a> <a href="#list_of_port_identifiers">list_of_port_identifiers</a>

<a name="input_declaration">input_declaration</a> ::=
      <font color="red"><b>input</b></font> <a href="#net_port_type">net_port_type</a> <a href="#list_of_port_identifiers">list_of_port_identifiers</a>
    | <font color="red"><b>input</b></font> <a href="#variable_port_type">variable_port_type</a> <a href="#list_of_variable_identifiers">list_of_variable_identifiers</a>

<a name="output_declaration">output_declaration</a> ::=
      <font color="red"><b>output</b></font> <a href="#net_port_type">net_port_type</a> <a href="#list_of_port_identifiers">list_of_port_identifiers</a>
    | <font color="red"><b>output</b></font> <a href="#variable_port_type">variable_port_type</a> <a href="#list_of_variable_port_identifiers">list_of_variable_port_identifiers</a>

<a name="interface_port_declaration">interface_port_declaration</a> ::=
      <a href="#interface_identifier">interface_identifier</a> <a href="#list_of_interface_identifiers">list_of_interface_identifiers</a>
    | <a href="#interface_identifier">interface_identifier</a> <font color="red"><b>.</b></font> <a href="#modport_identifier">modport_identifier</a> <a href="#list_of_interface_identifiers">list_of_interface_identifiers</a>

<a name="ref_declaration">ref_declaration</a> ::=
      <font color="red"><b>ref</b></font> <a href="#variable_port_type">variable_port_type</a> <a href="#list_of_variable_identifiers">list_of_variable_identifiers</a></pre>
<a name="Type declarations">
  <h3>2.1.3 Type declarations
  </h3>
</a>
<pre><a name="data_declaration">data_declaration</a> ::=
      [ <font color="red"><b>const</b></font> ] [ <font color="red"><b>var</b></font> ] [ <a href="#lifetime">lifetime</a> ] <a href="#data_type_or_implicit">data_type_or_implicit</a> <a href="#list_of_variable_decl_assignments">list_of_variable_decl_assignments</a> <font color="red"><b>;</b></font>
    | <a href="#type_declaration">type_declaration</a>
    | <a href="#package_import_declaration">package_import_declaration</a> <a href="#net_type_declaration">net_type_declaration</a>

<a name="package_import_declaration">package_import_declaration</a> ::=
      <font color="red"><b>import</b></font> <a href="#package_import_item">package_import_item</a> { <font color="red"><b>,</b></font> <a href="#package_import_item">package_import_item</a> } <font color="red"><b>;</b></font>

<a name="package_import_item">package_import_item</a> ::=
      <a href="#package_identifier">package_identifier</a> <font color="red"><b>::</b></font> <a href="#identifier">identifier</a> | <a href="#package_identifier">package_identifier</a> <font color="red"><b>::</b></font> <font color="red"><b>*</b></font>

<a name="package_export_declaration">package_export_declaration</a> ::=
      <font color="red"><b>export</b></font> <font color="red"><b>*::*</b></font> <font color="red"><b>;</b></font> | <font color="red"><b>export</b></font> <a href="#package_import_item">package_import_item</a> { <font color="red"><b>,</b></font> <a href="#package_import_item">package_import_item</a> } <font color="red"><b>;</b></font>

<a name="genvar_declaration">genvar_declaration</a> ::=
      <font color="red"><b>genvar</b></font> <a href="#list_of_genvar_identifiers">list_of_genvar_identifiers</a> <font color="red"><b>;</b></font>

<a name="net_declaration">net_declaration</a> ::=
      <a href="#net_type">net_type</a> [ <a href="#drive_strength">drive_strength</a> | <a href="#charge_strength">charge_strength</a> ] [ <font color="red"><b>vectored</b></font> | <a href="#scalared">scalared</a> ] <a href="#data_type_or_implicit">data_type_or_implicit</a>
      [ <a href="#delay3">delay3</a> ] <a href="#list_of_net_decl_assignments">list_of_net_decl_assignments</a> <font color="red"><b>;</b></font>
    | <a href="#net_type_identifier">net_type_identifier</a> [ <a href="#delay_control">delay_control</a> ] <a href="#list_of_net_decl_assignments">list_of_net_decl_assignments</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>interconnect</b></font> <a href="#implicit_data_type">implicit_data_type</a> [ <font color="red"><b>#</b></font> <a href="#delay_value">delay_value</a> ] <a href="#net_identifier">net_identifier</a> { <a href="#unpacked_dimension">unpacked_dimension</a> }
      [ <font color="red"><b>,</b></font> <a href="#net_identifier">net_identifier</a> { <a href="#unpacked_dimension">unpacked_dimension</a> } ] <font color="red"><b>;</b></font>

<a name="type_declaration">type_declaration</a> ::=
      <font color="red"><b>typedef</b></font> <a href="#data_type">data_type</a> <a href="#type_identifier">type_identifier</a> { <a href="#variable_dimension">variable_dimension</a> } <font color="red"><b>;</b></font>
    | <font color="red"><b>typedef</b></font> <a href="#interface_instance_identifier">interface_instance_identifier</a> <a href="#constant_bit_select">constant_bit_select</a> <font color="red"><b>.</b></font> <a href="#type_identifier">type_identifier</a> <a href="#type_identifier">type_identifier</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>typedef</b></font> [ <font color="red"><b>enum</b></font> | <font color="red"><b>struct</b></font> | <font color="red"><b>union</b></font> | <font color="red"><b>class</b></font> | <font color="red"><b>interface</b></font> <font color="red"><b>class</b></font> ] <a href="#type_identifier">type_identifier</a> <font color="red"><b>;</b></font>

<a name="net_type_declaration">net_type_declaration</a> ::=
      <font color="red"><b>nettype</b></font> <a href="#data_type">data_type</a> <a href="#net_type_identifier">net_type_identifier</a> [ <font color="red"><b>with</b></font> [ <a href="#package_scope">package_scope</a> | <a href="#class_scope">class_scope</a> ] <a href="#tf_identifier">tf_identifier</a> ]
      <font color="red"><b>;</b></font>
    | <font color="red"><b>nettype</b></font> [ <a href="#package_scope">package_scope</a> | <a href="#class_scope">class_scope</a> ] <a href="#net_type_identifier">net_type_identifier</a> <a href="#net_type_identifier">net_type_identifier</a> <font color="red"><b>;</b></font>

<a name="lifetime">lifetime</a> ::=
      <font color="red"><b>static</b></font> | <font color="red"><b>automatic</b></font></pre>
<a name="Declaration data types">
  <h3>2.2 Declaration data types
  </h3>
</a>
<a name="Net and variable types">
  <h3>2.2.1 Net and variable types
  </h3>
</a>
<pre><a name="casting_type">casting_type</a> ::=
      <a href="#simple_type">simple_type</a> | <a href="#constant_primary">constant_primary</a> | <a href="#signing">signing</a> | <font color="red"><b>string</b></font> | <font color="red"><b>const</b></font>

<a name="data_type">data_type</a> ::=
      <a href="#integer_vector_type">integer_vector_type</a> [ <a href="#signing">signing</a> ] { <a href="#packed_dimension">packed_dimension</a> }
    | <a href="#integer_atom_type">integer_atom_type</a> [ <a href="#signing">signing</a> ]
    | <a href="#non_integer_type">non_integer_type</a>
    | <a href="#struct_union">struct_union</a> [ <font color="red"><b>packed</b></font> [ <a href="#signing">signing</a> ] ] <font color="red"><b>{</b></font> <a href="#struct_union_member">struct_union_member</a> { <a href="#struct_union_member">struct_union_member</a> } <font color="red"><b>}</b></font>
      { <a href="#packed_dimension">packed_dimension</a> }
    | <font color="red"><b>enum</b></font> [ <a href="#enum_base_type">enum_base_type</a> ] <font color="red"><b>{</b></font> <a href="#enum_name_declaration">enum_name_declaration</a> { <font color="red"><b>,</b></font> <a href="#enum_name_declaration">enum_name_declaration</a> } <font color="red"><b>}</b></font>
      { <a href="#packed_dimension">packed_dimension</a> }
    | <font color="red"><b>string</b></font>
    | <font color="red"><b>chandle</b></font>
    | <font color="red"><b>virtual</b></font> [ <font color="red"><b>interface</b></font> ] <a href="#interface_identifier">interface_identifier</a> [ <a href="#parameter_value_assignment">parameter_value_assignment</a> ]
      [ <font color="red"><b>.</b></font> <a href="#modport_identifier">modport_identifier</a> ]
    | [ <a href="#class_scope">class_scope</a> | <a href="#package_scope">package_scope</a> ] <a href="#type_identifier">type_identifier</a> { <a href="#packed_dimension">packed_dimension</a> }
    | <a href="#class_type">class_type</a>
    | <font color="red"><b>event</b></font>
    | <a href="#ps_covergroup_identifier">ps_covergroup_identifier</a>
    | <a href="#type_reference">type_reference</a>

<a name="data_type_or_implicit">data_type_or_implicit</a> ::=
      <a href="#data_type">data_type</a> | <a href="#implicit_data_type">implicit_data_type</a>

<a name="implicit_data_type">implicit_data_type</a> ::=
      [ <a href="#signing">signing</a> ] { <a href="#packed_dimension">packed_dimension</a> }

<a name="enum_base_type">enum_base_type</a> ::=
      <a href="#integer_atom_type">integer_atom_type</a> [ <a href="#signing">signing</a> ]
    | <a href="#integer_vector_type">integer_vector_type</a> [ <a href="#signing">signing</a> ] [ <a href="#packed_dimension">packed_dimension</a> ]
    | <a href="#type_identifier">type_identifier</a> [ <a href="#packed_dimension">packed_dimension</a> ]

<a name="enum_name_declaration">enum_name_declaration</a> ::=
      <a href="#enum_identifier">enum_identifier</a> [ <font color="red"><b>[</b></font> <a href="#integral_number">integral_number</a> [ <font color="red"><b>:</b></font> <a href="#integral_number">integral_number</a> ] <font color="red"><b>]</b></font> ] [ <font color="red"><b>=</b></font> <a href="#constant_expression">constant_expression</a> ]

<a name="class_scope">class_scope</a> ::=
      <a href="#class_type">class_type</a> <font color="red"><b>::</b></font>

<a name="class_type">class_type</a> ::=
      <a href="#ps_class_identifier">ps_class_identifier</a> [ <a href="#parameter_value_assignment">parameter_value_assignment</a> ]
      { <font color="red"><b>::</b></font> <a href="#class_identifier">class_identifier</a> [ <a href="#parameter_value_assignment">parameter_value_assignment</a> ] }

<a name="integer_type">integer_type</a> ::=
      <a href="#integer_vector_type">integer_vector_type</a> | <a href="#integer_atom_type">integer_atom_type</a>

<a name="integer_atom_type">integer_atom_type</a> ::=
      <font color="red"><b>byte</b></font> | <font color="red"><b>shortint</b></font> | <font color="red"><b>int</b></font> | <font color="red"><b>longint</b></font> | <font color="red"><b>integer</b></font> | <font color="red"><b>time</b></font>

<a name="integer_vector_type">integer_vector_type</a> ::=
      <font color="red"><b>bit</b></font> | <font color="red"><b>logic</b></font> | <font color="red"><b>reg</b></font>

<a name="non_integer_type">non_integer_type</a> ::=
      <font color="red"><b>shortreal</b></font> | <font color="red"><b>real</b></font> | <font color="red"><b>realtime</b></font>

<a name="net_type">net_type</a> ::=
      <font color="red"><b>supply0</b></font> | <font color="red"><b>supply1</b></font> | <font color="red"><b>tri</b></font> | <font color="red"><b>triand</b></font> | <font color="red"><b>trior</b></font> | <font color="red"><b>trireg</b></font> | <font color="red"><b>tri0</b></font> | <font color="red"><b>tri1</b></font> | <font color="red"><b>uwire|</b></font> <font color="red"><b>wire</b></font> | <font color="red"><b>wand</b></font> | <font color="red"><b>wor</b></font>

<a name="net_port_type">net_port_type</a> ::=
      [ <a href="#net_type">net_type</a> ] <a href="#data_type_or_implicit">data_type_or_implicit</a> | <a href="#net_type_identifier">net_type_identifier</a> | <font color="red"><b>interconnect</b></font> <a href="#implicit_data_type">implicit_data_type</a>

<a name="variable_port_type">variable_port_type</a> ::=
      <a href="#var_data_type">var_data_type</a>

<a name="var_data_type">var_data_type</a> ::=
      <a href="#data_type">data_type</a> | <font color="red"><b>var</b></font> <a href="#data_type_or_implicit">data_type_or_implicit</a>

<a name="signing">signing</a> ::=
      <font color="red"><b>signed</b></font> | <font color="red"><b>unsigned</b></font>

<a name="simple_type">simple_type</a> ::=
      <a href="#integer_type">integer_type</a> | <a href="#non_integer_type">non_integer_type</a> | <a href="#ps_type_identifier">ps_type_identifier</a> | <a href="#ps_parameter_identifier">ps_parameter_identifier</a>

<a name="struct_union_member">struct_union_member</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } [ <a href="#random_qualifier">random_qualifier</a> ] <a href="#data_type_or_void">data_type_or_void</a>
      <a href="#list_of_variable_decl_assignments">list_of_variable_decl_assignments</a> <font color="red"><b>;</b></font>

<a name="data_type_or_void">data_type_or_void</a> ::=
      <a href="#data_type">data_type</a> | <font color="red"><b>void</b></font>

<a name="struct_union">struct_union</a> ::=
      <font color="red"><b>struct</b></font> | <font color="red"><b>union</b></font> [ <font color="red"><b>tagged</b></font> ]

<a name="type_reference">type_reference</a> ::=
      <font color="red"><b>type</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> | <font color="red"><b>type</b></font> <font color="red"><b>(</b></font> <a href="#data_type">data_type</a> <font color="red"><b>)</b></font></pre>
<a name="Strengths">
  <h3>2.2.2 Strengths
  </h3>
</a>
<pre><a name="drive_strength">drive_strength</a> ::=
      <font color="red"><b>(</b></font> <a href="#strength0">strength0</a> <font color="red"><b>,</b></font> <a href="#strength1">strength1</a> <font color="red"><b>)</b></font>
    | <font color="red"><b>(</b></font> <a href="#strength1">strength1</a> <font color="red"><b>,</b></font> <a href="#strength0">strength0</a> <font color="red"><b>)</b></font>
    | <font color="red"><b>(</b></font> <a href="#strength0">strength0</a> <font color="red"><b>,</b></font> <font color="red"><b>highz1</b></font> <font color="red"><b>)</b></font>
    | <font color="red"><b>(</b></font> <a href="#strength1">strength1</a> <font color="red"><b>,</b></font> <font color="red"><b>highz0</b></font> <font color="red"><b>)</b></font>
    | <font color="red"><b>(</b></font> <font color="red"><b>highz0</b></font> <font color="red"><b>,</b></font> <a href="#strength1">strength1</a> <font color="red"><b>)</b></font>
    | <font color="red"><b>(</b></font> <font color="red"><b>highz1</b></font> <font color="red"><b>,</b></font> <a href="#strength0">strength0</a> <font color="red"><b>)</b></font>

<a name="strength0">strength0</a> ::=
      <font color="red"><b>supply0</b></font> | <font color="red"><b>strong0</b></font> | <font color="red"><b>pull0</b></font> | <font color="red"><b>weak0</b></font>

<a name="strength1">strength1</a> ::=
      <font color="red"><b>supply1</b></font> | <font color="red"><b>strong1</b></font> | <font color="red"><b>pull1</b></font> | <font color="red"><b>weak1</b></font>

<a name="charge_strength">charge_strength</a> ::=
      <font color="red"><b>(</b></font> <font color="red"><b>small</b></font> <font color="red"><b>)</b></font> | <font color="red"><b>(</b></font> <font color="red"><b>medium</b></font> <font color="red"><b>)</b></font> | <font color="red"><b>(</b></font> <font color="red"><b>large</b></font> <font color="red"><b>)</b></font></pre>
<a name="Delays">
  <h3>2.2.3 Delays
  </h3>
</a>
<pre><a name="delay3">delay3</a> ::=
      <font color="red"><b>#</b></font> <a href="#delay_value">delay_value</a>
    | <font color="red"><b>#</b></font> <font color="red"><b>(</b></font> <a href="#mintypmax_expression">mintypmax_expression</a> [ <font color="red"><b>,</b></font> <a href="#mintypmax_expression">mintypmax_expression</a> [ <font color="red"><b>,</b></font> <a href="#mintypmax_expression">mintypmax_expression</a> ] ] <font color="red"><b>)</b></font>

<a name="delay2">delay2</a> ::=
      <font color="red"><b>#</b></font> <a href="#delay_value">delay_value</a> | <font color="red"><b>#</b></font> <font color="red"><b>(</b></font> <a href="#mintypmax_expression">mintypmax_expression</a> [ <font color="red"><b>,</b></font> <a href="#mintypmax_expression">mintypmax_expression</a> ] <font color="red"><b>)</b></font>

<a name="delay_value">delay_value</a> ::=
      <a href="#unsigned_number">unsigned_number</a> | <a href="#real_number">real_number</a> | <a href="#ps_identifier">ps_identifier</a> | <a href="#time_literal">time_literal</a> | <font color="red"><b>1step</b></font></pre>
<a name="Declaration lists">
  <h3>2.3 Declaration lists
  </h3>
</a>
<pre><a name="list_of_defparam_assignments">list_of_defparam_assignments</a> ::=
      <a href="#defparam_assignment">defparam_assignment</a> { <font color="red"><b>,</b></font> <a href="#defparam_assignment">defparam_assignment</a> }

<a name="list_of_genvar_identifiers">list_of_genvar_identifiers</a> ::=
      <a href="#genvar_identifier">genvar_identifier</a> { <font color="red"><b>,</b></font> <a href="#genvar_identifier">genvar_identifier</a> }

<a name="list_of_interface_identifiers">list_of_interface_identifiers</a> ::=
      <a href="#interface_identifier">interface_identifier</a> { <a href="#unpacked_dimension">unpacked_dimension</a> } { <font color="red"><b>,</b></font> <a href="#interface_identifier">interface_identifier</a> { <a href="#unpacked_dimension">unpacked_dimension</a> } }

<a name="list_of_net_decl_assignments">list_of_net_decl_assignments</a> ::=
      <a href="#net_decl_assignment">net_decl_assignment</a> { <font color="red"><b>,</b></font> <a href="#net_decl_assignment">net_decl_assignment</a> }

<a name="list_of_param_assignments">list_of_param_assignments</a> ::=
      <a href="#param_assignment">param_assignment</a> { <font color="red"><b>,</b></font> <a href="#param_assignment">param_assignment</a> }

<a name="list_of_port_identifiers">list_of_port_identifiers</a> ::=
      <a href="#port_identifier">port_identifier</a> { <a href="#unpacked_dimension">unpacked_dimension</a> } { <font color="red"><b>,</b></font> <a href="#port_identifier">port_identifier</a> { <a href="#unpacked_dimension">unpacked_dimension</a> } }

<a name="list_of_udp_port_identifiers">list_of_udp_port_identifiers</a> ::=
      <a href="#port_identifier">port_identifier</a> { <font color="red"><b>,</b></font> <a href="#port_identifier">port_identifier</a> }

<a name="list_of_specparam_assignments">list_of_specparam_assignments</a> ::=
      <a href="#specparam_assignment">specparam_assignment</a> { <font color="red"><b>,</b></font> <a href="#specparam_assignment">specparam_assignment</a> }

<a name="list_of_tf_variable_identifiers">list_of_tf_variable_identifiers</a> ::=
      <a href="#port_identifier">port_identifier</a> { <a href="#variable_dimension">variable_dimension</a> } [ <font color="red"><b>=</b></font> <a href="#expression">expression</a> ]
      { <font color="red"><b>,</b></font> <a href="#port_identifier">port_identifier</a> { <a href="#variable_dimension">variable_dimension</a> } [ <font color="red"><b>=</b></font> <a href="#expression">expression</a> ] }

<a name="list_of_type_assignments">list_of_type_assignments</a> ::=
      <a href="#type_assignment">type_assignment</a> { <font color="red"><b>,</b></font> <a href="#type_assignment">type_assignment</a> }

<a name="list_of_variable_decl_assignments">list_of_variable_decl_assignments</a> ::=
      <a href="#variable_decl_assignment">variable_decl_assignment</a> { <font color="red"><b>,</b></font> <a href="#variable_decl_assignment">variable_decl_assignment</a> }

<a name="list_of_variable_identifiers">list_of_variable_identifiers</a> ::=
      <a href="#variable_identifier">variable_identifier</a> { <a href="#variable_dimension">variable_dimension</a> } { <font color="red"><b>,</b></font> <a href="#variable_identifier">variable_identifier</a> { <a href="#variable_dimension">variable_dimension</a> } }

<a name="list_of_variable_port_identifiers">list_of_variable_port_identifiers</a> ::=
      <a href="#port_identifier">port_identifier</a> { <a href="#variable_dimension">variable_dimension</a> } [ <font color="red"><b>=</b></font> <a href="#constant_expression">constant_expression</a> ]
      { <font color="red"><b>,</b></font> <a href="#port_identifier">port_identifier</a> { <a href="#variable_dimension">variable_dimension</a> } [ <font color="red"><b>=</b></font> <a href="#constant_expression">constant_expression</a> ] }</pre>
<a name="Declaration assignments">
  <h3>2.4 Declaration assignments
  </h3>
</a>
<pre><a name="defparam_assignment">defparam_assignment</a> ::=
      <a href="#hierarchical_parameter_identifier">hierarchical_parameter_identifier</a> <font color="red"><b>=</b></font> <a href="#constant_mintypmax_expression">constant_mintypmax_expression</a>

<a name="net_decl_assignment">net_decl_assignment</a> ::=
      <a href="#net_identifier">net_identifier</a> { <a href="#unpacked_dimension">unpacked_dimension</a> } [ <font color="red"><b>=</b></font> <a href="#expression">expression</a> ]

<a name="param_assignment">param_assignment</a> ::=
      <a href="#parameter_identifier">parameter_identifier</a> { <a href="#unpacked_dimension">unpacked_dimension</a> } [ <font color="red"><b>=</b></font> <a href="#constant_param_expression">constant_param_expression</a> ]

<a name="specparam_assignment">specparam_assignment</a> ::=
      <a href="#specparam_identifier">specparam_identifier</a> <font color="red"><b>=</b></font> <a href="#constant_mintypmax_expression">constant_mintypmax_expression</a> | <a href="#pulse_control_specparam">pulse_control_specparam</a>

<a name="type_assignment">type_assignment</a> ::=
      <a href="#type_identifier">type_identifier</a> [ <font color="red"><b>=</b></font> <a href="#data_type">data_type</a> ]

<a name="pulse_control_specparam">pulse_control_specparam</a> ::=
      <font color="red"><b>PATHPULSE$</b></font> <font color="red"><b>=</b></font> <font color="red"><b>(</b></font> <a href="#reject_limit_value">reject_limit_value</a> [ <font color="red"><b>,</b></font> <a href="#error_limit_value">error_limit_value</a> ] <font color="red"><b>)</b></font>
    | <font color="red"><b>PATHPULSE$</b></font> <a href="#specify_input_terminal_descriptor">specify_input_terminal_descriptor</a> <font color="red"><b>$</b></font> <a href="#specify_output_terminal_descriptor">specify_output_terminal_descriptor</a> <font color="red"><b>=</b></font> <font color="red"><b>(</b></font>
      <a href="#reject_limit_value">reject_limit_value</a> [ <font color="red"><b>,</b></font> <a href="#error_limit_value">error_limit_value</a> ] <font color="red"><b>)</b></font>

<a name="error_limit_value">error_limit_value</a> ::=
      <a href="#limit_value">limit_value</a>

<a name="reject_limit_value">reject_limit_value</a> ::=
      <a href="#limit_value">limit_value</a>

<a name="limit_value">limit_value</a> ::=
      <a href="#constant_mintypmax_expression">constant_mintypmax_expression</a>

<a name="variable_decl_assignment">variable_decl_assignment</a> ::=
      <a href="#variable_identifier">variable_identifier</a> { <a href="#variable_dimension">variable_dimension</a> } [ <font color="red"><b>=</b></font> <a href="#expression">expression</a> ]
    | <a href="#dynamic_array_variable_identifier">dynamic_array_variable_identifier</a> <a href="#unsized_dimension">unsized_dimension</a> { <a href="#variable_dimension">variable_dimension</a> }
      [ <font color="red"><b>=</b></font> <a href="#dynamic_array_new">dynamic_array_new</a> ]
    | <a href="#class_variable_identifier">class_variable_identifier</a> [ <font color="red"><b>=</b></font> <a href="#class_new">class_new</a> ]

<a name="class_new">class_new</a> ::=
      [ <a href="#class_scope">class_scope</a> ] <font color="red"><b>new</b></font> [ <font color="red"><b>(</b></font> <a href="#list_of_arguments">list_of_arguments</a> <font color="red"><b>)</b></font> ] | <font color="red"><b>new</b></font> <a href="#expression">expression</a>

<a name="dynamic_array_new">dynamic_array_new</a> ::=
      <font color="red"><b>new</b></font> <font color="red"><b>[</b></font> <a href="#expression">expression</a> <font color="red"><b>]</b></font> [ <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> ]</pre>
<a name="Declaration ranges">
  <h3>2.5 Declaration ranges
  </h3>
</a>
<pre><a name="unpacked_dimension">unpacked_dimension</a> ::=
      <font color="red"><b>[</b></font> <a href="#constant_range">constant_range</a> <font color="red"><b>]</b></font> | <font color="red"><b>[</b></font> <a href="#constant_expression">constant_expression</a> <font color="red"><b>]</b></font>

<a name="packed_dimension">packed_dimension</a> ::=
      <font color="red"><b>[</b></font> <a href="#constant_range">constant_range</a> <font color="red"><b>]</b></font> | <a href="#unsized_dimension">unsized_dimension</a>

<a name="associative_dimension">associative_dimension</a> ::=
      <font color="red"><b>[</b></font> <a href="#data_type">data_type</a> <font color="red"><b>]</b></font> | <font color="red"><b>[</b></font> <font color="red"><b>*</b></font> <font color="red"><b>]</b></font>

<a name="variable_dimension">variable_dimension</a> ::=
      <a href="#unsized_dimension">unsized_dimension</a> | <a href="#unpacked_dimension">unpacked_dimension</a> | <a href="#associative_dimension">associative_dimension</a> | <a href="#queue_dimension">queue_dimension</a>

<a name="queue_dimension">queue_dimension</a> ::=
      <font color="red"><b>[</b></font> <font color="red"><b>$</b></font> [ <font color="red"><b>:</b></font> <a href="#constant_expression">constant_expression</a> ] <font color="red"><b>]</b></font>

<a name="unsized_dimension">unsized_dimension</a> ::=
      <font color="red"><b>[</b></font> <font color="red"><b>]</b></font></pre>
<a name="Function declarations">
  <h3>2.6 Function declarations
  </h3>
</a>
<pre><a name="function_data_type_or_implicit">function_data_type_or_implicit</a> ::=
      <a href="#data_type_or_void">data_type_or_void</a> | <a href="#implicit_data_type">implicit_data_type</a>

<a name="function_declaration">function_declaration</a> ::=
      <font color="red"><b>function</b></font> [ <a href="#lifetime">lifetime</a> ] <a href="#function_body_declaration">function_body_declaration</a>

<a name="function_body_declaration">function_body_declaration</a> ::=
      <a href="#function_data_type_or_implicit">function_data_type_or_implicit</a> [ <a href="#interface_identifier">interface_identifier</a> <font color="red"><b>.</b></font> | <a href="#class_scope">class_scope</a> ] <a href="#function_identifier">function_identifier</a> <font color="red"><b>;</b></font>
      { <a href="#tf_item_declaration">tf_item_declaration</a> } { <a href="#function_statement_or_null">function_statement_or_null</a> } <font color="red"><b>endfunction</b></font> [ <font color="red"><b>:</b></font> <a href="#function_identifier">function_identifier</a> ]
    | <a href="#function_data_type_or_implicit">function_data_type_or_implicit</a> [ <a href="#interface_identifier">interface_identifier</a> <font color="red"><b>.</b></font> | <a href="#class_scope">class_scope</a> ] <a href="#function_identifier">function_identifier</a> <font color="red"><b>(</b></font>
      [ <a href="#tf_port_list">tf_port_list</a> ] <font color="red"><b>)</b></font> <font color="red"><b>;</b></font> { <a href="#block_item_declaration">block_item_declaration</a> } { <a href="#function_statement_or_null">function_statement_or_null</a> } <font color="red"><b>endfunction</b></font>
      [ <font color="red"><b>:</b></font> <a href="#function_identifier">function_identifier</a> ]

<a name="function_prototype">function_prototype</a> ::=
      <font color="red"><b>function</b></font> <a href="#data_type_or_void">data_type_or_void</a> <a href="#function_identifier">function_identifier</a> [ <font color="red"><b>(</b></font> [ <a href="#tf_port_list">tf_port_list</a> ] <font color="red"><b>)</b></font> ]

<a name="dpi_import_export">dpi_import_export</a> ::=
      <font color="red"><b>import</b></font> <a href="#dpi_spec_string">dpi_spec_string</a> [ <a href="#dpi_function_import_property">dpi_function_import_property</a> ] [ <a href="#c_identifier">c_identifier</a> <font color="red"><b>=</b></font> ] <a href="#dpi_function_proto">dpi_function_proto</a>
      <font color="red"><b>;</b></font>
    | <font color="red"><b>import</b></font> <a href="#dpi_spec_string">dpi_spec_string</a> [ <a href="#dpi_task_import_property">dpi_task_import_property</a> ] [ <a href="#c_identifier">c_identifier</a> <font color="red"><b>=</b></font> ] <a href="#dpi_task_proto">dpi_task_proto</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>export</b></font> <a href="#dpi_spec_string">dpi_spec_string</a> [ <a href="#c_identifier">c_identifier</a> <font color="red"><b>=</b></font> ] <font color="red"><b>function</b></font> <a href="#function_identifier">function_identifier</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>export</b></font> <a href="#dpi_spec_string">dpi_spec_string</a> [ <a href="#c_identifier">c_identifier</a> <font color="red"><b>=</b></font> ] <font color="red"><b>task</b></font> <a href="#task_identifier">task_identifier</a> <font color="red"><b>;</b></font>

<a name="dpi_spec_string">dpi_spec_string</a> ::=
      <font color="red"><b>"DPI-C"</b></font> | <font color="red"><b>"DPI"</b></font>

<a name="dpi_function_import_property">dpi_function_import_property</a> ::=
      <font color="red"><b>context</b></font> | <font color="red"><b>pure</b></font>

<a name="dpi_task_import_property">dpi_task_import_property</a> ::=
      <font color="red"><b>context</b></font>

<a name="dpi_function_proto">dpi_function_proto</a> ::=
      <a href="#function_prototype">function_prototype</a>

<a name="dpi_task_proto">dpi_task_proto</a> ::=
      <a href="#task_prototype">task_prototype</a></pre>
<a name="Task declarations">
  <h3>2.7 Task declarations
  </h3>
</a>
<pre><a name="task_declaration">task_declaration</a> ::=
      <font color="red"><b>task</b></font> [ <a href="#lifetime">lifetime</a> ] <a href="#task_body_declaration">task_body_declaration</a>

<a name="task_body_declaration">task_body_declaration</a> ::=
      [ <a href="#interface_identifier">interface_identifier</a> <font color="red"><b>.</b></font> | <a href="#class_scope">class_scope</a> ] <a href="#task_identifier">task_identifier</a> <font color="red"><b>;</b></font> { <a href="#tf_item_declaration">tf_item_declaration</a> }
      { <a href="#statement_or_null">statement_or_null</a> } <font color="red"><b>endtask</b></font> [ <font color="red"><b>:</b></font> <a href="#task_identifier">task_identifier</a> ]
    | [ <a href="#interface_identifier">interface_identifier</a> <font color="red"><b>.</b></font> | <a href="#class_scope">class_scope</a> ] <a href="#task_identifier">task_identifier</a> <font color="red"><b>(</b></font> [ <a href="#tf_port_list">tf_port_list</a> ] <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>
      { <a href="#block_item_declaration">block_item_declaration</a> } { <a href="#statement_or_null">statement_or_null</a> } <font color="red"><b>endtask</b></font> [ <font color="red"><b>:</b></font> <a href="#task_identifier">task_identifier</a> ]

<a name="tf_item_declaration">tf_item_declaration</a> ::=
      <a href="#block_item_declaration">block_item_declaration</a> | <a href="#tf_port_declaration">tf_port_declaration</a>

<a name="tf_port_list">tf_port_list</a> ::=
      <a href="#tf_port_item">tf_port_item</a> { <font color="red"><b>,</b></font> <a href="#tf_port_item">tf_port_item</a> }

<a name="tf_port_item">tf_port_item</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } [ <a href="#tf_port_direction">tf_port_direction</a> ] [ <font color="red"><b>var</b></font> ] <a href="#data_type_or_implicit">data_type_or_implicit</a>
      [ <a href="#port_identifier">port_identifier</a> { <a href="#variable_dimension">variable_dimension</a> } [ <font color="red"><b>=</b></font> <a href="#expression">expression</a> ] ]

<a name="tf_port_direction">tf_port_direction</a> ::=
      <a href="#port_direction">port_direction</a> | <a href="#const">const</a> <a href="#ref">ref</a>

<a name="tf_port_declaration">tf_port_declaration</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <a href="#tf_port_direction">tf_port_direction</a> [ <a href="#var">var</a> ] <a href="#data_type_or_implicit">data_type_or_implicit</a>
      <a href="#list_of_tf_variable_identifiers">list_of_tf_variable_identifiers</a> <font color="red"><b>;</b></font>

<a name="task_prototype">task_prototype</a> ::=
      <a href="#task">task</a> <a href="#task_identifier">task_identifier</a> [ <font color="red"><b>(</b></font> [ <a href="#tf_port_list">tf_port_list</a> ] <font color="red"><b>)</b></font> ]</pre>
<a name="Block item declarations">
  <h3>2.8 Block item declarations
  </h3>
</a>
<pre><a name="block_item_declaration">block_item_declaration</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <a href="#data_declaration">data_declaration</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#local_parameter_declaration">local_parameter_declaration</a> <font color="red"><b>;</b></font>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#parameter_declaration">parameter_declaration</a> <font color="red"><b>;</b></font>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#overload_declaration">overload_declaration</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#let_declaration">let_declaration</a>

<a name="overload_declaration">overload_declaration</a> ::=
      <font color="red"><b>bind</b></font> <a href="#overload_operator">overload_operator</a> <font color="red"><b>function</b></font> <a href="#data_type">data_type</a> <a href="#function_identifier">function_identifier</a> <font color="red"><b>(</b></font> <a href="#overload_proto_formals">overload_proto_formals</a> <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>

<a name="overload_operator">overload_operator</a> ::=
      <font color="red"><b>+</b></font> | <font color="red"><b>++</b></font> | <font color="red"><b>-</b></font> | <font color="red"><b>--</b></font> | <font color="red"><b>*</b></font> | <font color="red"><b>**</b></font> | <font color="red"><b>/</b></font> | <font color="red"><b>%</b></font> | <font color="red"><b>==</b></font> | <font color="red"><b>!=</b></font> | <font color="red"><b>&lt;</b></font> | <font color="red"><b>&lt;=</b></font> | <font color="red"><b>&gt;</b></font> | <font color="red"><b>&gt;=</b></font> | <font color="red"><b>=</b></font>

<a name="overload_proto_formals">overload_proto_formals</a> ::=
      <a href="#data_type">data_type</a> { <font color="red"><b>,</b></font> <a href="#data_type">data_type</a> }</pre>
<a name="Interface declarations">
  <h3>2.9 Interface declarations
  </h3>
</a>
<pre><a name="modport_declaration">modport_declaration</a> ::=
      <font color="red"><b>modport</b></font> <a href="#modport_item">modport_item</a> { <font color="red"><b>,</b></font> <a href="#modport_item">modport_item</a> } <font color="red"><b>;</b></font>

<a name="modport_item">modport_item</a> ::=
      <a href="#modport_identifier">modport_identifier</a> <font color="red"><b>(</b></font> <a href="#modport_ports_declaration">modport_ports_declaration</a> { <font color="red"><b>,</b></font> <a href="#modport_ports_declaration">modport_ports_declaration</a> } <font color="red"><b>)</b></font>

<a name="modport_ports_declaration">modport_ports_declaration</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <a href="#modport_simple_ports_declaration">modport_simple_ports_declaration</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#modport_tf_ports_declaration">modport_tf_ports_declaration</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#modport_clocking_declaration">modport_clocking_declaration</a>

<a name="modport_clocking_declaration">modport_clocking_declaration</a> ::=
      <font color="red"><b>clocking</b></font> <a href="#clocking_identifier">clocking_identifier</a>

<a name="modport_simple_ports_declaration">modport_simple_ports_declaration</a> ::=
      <a href="#port_direction">port_direction</a> <a href="#modport_simple_port">modport_simple_port</a> { <font color="red"><b>,</b></font> <a href="#modport_simple_port">modport_simple_port</a> }

<a name="modport_simple_port">modport_simple_port</a> ::=
      <a href="#port_identifier">port_identifier</a> | <font color="red"><b>.</b></font> <a href="#port_identifier">port_identifier</a> <font color="red"><b>(</b></font> [ <a href="#expression">expression</a> ] <font color="red"><b>)</b></font>

<a name="modport_tf_ports_declaration">modport_tf_ports_declaration</a> ::=
      <a href="#import_export">import_export</a> <a href="#modport_tf_port">modport_tf_port</a> { <font color="red"><b>,</b></font> <a href="#modport_tf_port">modport_tf_port</a> }

<a name="modport_tf_port">modport_tf_port</a> ::=
      <a href="#method_prototype">method_prototype</a> | <a href="#tf_identifier">tf_identifier</a>

<a name="import_export">import_export</a> ::=
      <font color="red"><b>import</b></font> | <font color="red"><b>export</b></font></pre>
<a name="Assertion declarations">
  <h3>2.10 Assertion declarations
  </h3>
</a>
<pre><a name="concurrent_assertion_item">concurrent_assertion_item</a> ::=
      [ <a href="#block_identifier">block_identifier</a> <font color="red"><b>:</b></font> ] <a href="#concurrent_assertion_statement">concurrent_assertion_statement</a> | <a href="#checker_instantiation">checker_instantiation</a>

<a name="concurrent_assertion_statement">concurrent_assertion_statement</a> ::=
      <a href="#assert_property_statement">assert_property_statement</a>
    | <a href="#assume_property_statement">assume_property_statement</a>
    | <a href="#cover_property_statement">cover_property_statement</a>
    | <a href="#cover_sequence_statement">cover_sequence_statement</a>
    | <a href="#restrict_property_statement">restrict_property_statement</a>

<a name="assert_property_statement">assert_property_statement</a> ::=
      <font color="red"><b>assert</b></font> <font color="red"><b>property</b></font> <font color="red"><b>(</b></font> <a href="#property_spec">property_spec</a> <font color="red"><b>)</b></font> <a href="#action_block">action_block</a>

<a name="assume_property_statement">assume_property_statement</a> ::=
      <font color="red"><b>assume</b></font> <font color="red"><b>property</b></font> <font color="red"><b>(</b></font> <a href="#property_spec">property_spec</a> <font color="red"><b>)</b></font> <a href="#action_block">action_block</a>

<a name="cover_property_statement">cover_property_statement</a> ::=
      <font color="red"><b>cover</b></font> <font color="red"><b>property</b></font> <font color="red"><b>(</b></font> <a href="#property_spec">property_spec</a> <font color="red"><b>)</b></font> <a href="#statement_or_null">statement_or_null</a>

<a name="expect_property_statement">expect_property_statement</a> ::=
      <font color="red"><b>expect</b></font> <font color="red"><b>(</b></font> <a href="#property_spec">property_spec</a> <font color="red"><b>)</b></font> <a href="#action_block">action_block</a>

<a name="cover_sequence_statement">cover_sequence_statement</a> ::=
      <font color="red"><b>cover</b></font> <font color="red"><b>sequence</b></font> <font color="red"><b>(</b></font> [ <a href="#clocking_event">clocking_event</a> ] [ <font color="red"><b>disable</b></font> <font color="red"><b>iff</b></font> <font color="red"><b>(</b></font> <a href="#expression_or_dist">expression_or_dist</a> <font color="red"><b>)</b></font> ] <a href="#sequence_expr">sequence_expr</a> <font color="red"><b>)</b></font>
      <a href="#statement_or_null">statement_or_null</a>

<a name="restrict_property_statement">restrict_property_statement</a> ::=
      <font color="red"><b>restrict</b></font> <font color="red"><b>property</b></font> <font color="red"><b>(</b></font> <a href="#property_spec">property_spec</a> <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>

<a name="property_instance">property_instance</a> ::=
      <a href="#ps_or_hierarchical_property_identifier">ps_or_hierarchical_property_identifier</a> [ <font color="red"><b>(</b></font> [ <a href="#property_list_of_arguments">property_list_of_arguments</a> ] <font color="red"><b>)</b></font> ]

<a name="property_list_of_arguments">property_list_of_arguments</a> ::=
      [ <a href="#property_actual_arg">property_actual_arg</a> ] { <font color="red"><b>,</b></font> [ <a href="#property_actual_arg">property_actual_arg</a> ] }
      { <font color="red"><b>,</b></font> <font color="red"><b>.</b></font> <a href="#identifier">identifier</a> <font color="red"><b>(</b></font> [ <a href="#property_actual_arg">property_actual_arg</a> ] <font color="red"><b>)</b></font> }
    | <font color="red"><b>.</b></font> <a href="#identifier">identifier</a> <font color="red"><b>(</b></font> [ <a href="#property_actual_arg">property_actual_arg</a> ] <font color="red"><b>)</b></font> { <font color="red"><b>,</b></font> <font color="red"><b>.</b></font> <a href="#identifier">identifier</a> <font color="red"><b>(</b></font> [ <a href="#property_actual_arg">property_actual_arg</a> ] <font color="red"><b>)</b></font> }

<a name="property_actual_arg">property_actual_arg</a> ::=
      <a href="#property_expr">property_expr</a> | <a href="#sequence_actual_arg">sequence_actual_arg</a>

<a name="assertion_item_declaration">assertion_item_declaration</a> ::=
      <a href="#property_declaration">property_declaration</a> | <a href="#sequence_declaration">sequence_declaration</a> | <a href="#let_declaration">let_declaration</a>

<a name="property_declaration">property_declaration</a> ::=
      <font color="red"><b>property</b></font> <a href="#property_identifier">property_identifier</a> [ <font color="red"><b>(</b></font> [ <a href="#property_port_list">property_port_list</a> ] <font color="red"><b>)</b></font> ] <font color="red"><b>;</b></font>
      { <a href="#assertion_variable_declaration">assertion_variable_declaration</a> } <a href="#property_spec">property_spec</a> [ <font color="red"><b>;</b></font> ] <font color="red"><b>endproperty</b></font> [ <font color="red"><b>:</b></font> <a href="#property_identifier">property_identifier</a> ]

<a name="property_port_list">property_port_list</a> ::=
      <a href="#property_port_item">property_port_item</a> { <font color="red"><b>,</b></font> <a href="#property_port_item">property_port_item</a> }

<a name="property_port_item">property_port_item</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } [ <font color="red"><b>local</b></font> [ <a href="#property_lvar_port_direction">property_lvar_port_direction</a> ] ] <a href="#property_formal_type">property_formal_type</a>
      <a href="#formal_port_identifier">formal_port_identifier</a> { <a href="#variable_dimension">variable_dimension</a> } [ <font color="red"><b>=</b></font> <a href="#property_actual_arg">property_actual_arg</a> ]

<a name="property_lvar_port_direction">property_lvar_port_direction</a> ::=
      <font color="red"><b>input</b></font>

<a name="property_formal_type">property_formal_type</a> ::=
      <a href="#sequence_formal_type">sequence_formal_type</a> | <font color="red"><b>property</b></font>

<a name="property_spec">property_spec</a> ::=
      [ <a href="#clocking_event">clocking_event</a> ] [ <font color="red"><b>disable</b></font> <font color="red"><b>iff</b></font> <font color="red"><b>(</b></font> <a href="#expression_or_dist">expression_or_dist</a> <font color="red"><b>)</b></font> ] <a href="#property_expr">property_expr</a>

<a name="property_expr">property_expr</a> ::=
      <a href="#sequence_expr">sequence_expr</a>
    | <font color="red"><b>strong</b></font> <font color="red"><b>(</b></font> <a href="#sequence_expr">sequence_expr</a> <font color="red"><b>)</b></font>
    | <font color="red"><b>weak</b></font> <font color="red"><b>(</b></font> <a href="#sequence_expr">sequence_expr</a> <font color="red"><b>)</b></font>
    | <font color="red"><b>(</b></font> <a href="#property_expr">property_expr</a> <font color="red"><b>)</b></font>
    | <font color="red"><b>not</b></font> <a href="#property_expr">property_expr</a>
    | <a href="#property_expr">property_expr</a> <font color="red"><b>or</b></font> <a href="#property_expr">property_expr</a>
    | <a href="#property_expr">property_expr</a> <font color="red"><b>and</b></font> <a href="#property_expr">property_expr</a>
    | <a href="#sequence_expr">sequence_expr</a> <font color="red"><b>|-&gt;</b></font> <a href="#property_expr">property_expr</a>
    | <a href="#sequence_expr">sequence_expr</a> <font color="red"><b>|=&gt;</b></font> <a href="#property_expr">property_expr</a>
    | <font color="red"><b>if</b></font> <font color="red"><b>(</b></font> <a href="#expression_or_dist">expression_or_dist</a> <font color="red"><b>)</b></font> <a href="#property_expr">property_expr</a> [ <font color="red"><b>else</b></font> <a href="#property_expr">property_expr</a> ]
    | <font color="red"><b>case</b></font> <font color="red"><b>(</b></font> <a href="#expression_or_dist">expression_or_dist</a> <font color="red"><b>)</b></font> <a href="#property_case_item">property_case_item</a> { <a href="#property_case_item">property_case_item</a> } <font color="red"><b>endcase</b></font>
    | <a href="#sequence_expr">sequence_expr</a> <font color="red"><b>#-#</b></font> <a href="#property_expr">property_expr</a>
    | <a href="#sequence_expr">sequence_expr</a> <font color="red"><b>#=#</b></font> <a href="#property_expr">property_expr</a>
    | <font color="red"><b>nexttime</b></font> <a href="#property_expr">property_expr</a>
    | <font color="red"><b>nexttime</b></font> <font color="red"><b>[</b></font> <a href="#constant">constant</a> <a href="#_expression">_expression</a> <font color="red"><b>]</b></font> <a href="#property_expr">property_expr</a>
    | <font color="red"><b>s_nexttime</b></font> <a href="#property_expr">property_expr</a>
    | <font color="red"><b>s_nexttime</b></font> <font color="red"><b>[</b></font> <a href="#constant_expression">constant_expression</a> <font color="red"><b>]</b></font> <a href="#property_expr">property_expr</a>
    | <font color="red"><b>always</b></font> <a href="#property_expr">property_expr</a>
    | <font color="red"><b>always</b></font> <font color="red"><b>[</b></font> <a href="#cycle_delay_const_range_expression">cycle_delay_const_range_expression</a> <font color="red"><b>]</b></font> <a href="#property_expr">property_expr</a>
    | <font color="red"><b>s_always</b></font> <font color="red"><b>[</b></font> <a href="#constant_range">constant_range</a> <font color="red"><b>]</b></font> <a href="#property_expr">property_expr</a>
    | <font color="red"><b>s_eventually</b></font> <a href="#property_expr">property_expr</a>
    | <font color="red"><b>eventually</b></font> <font color="red"><b>[</b></font> <a href="#constant_range">constant_range</a> <font color="red"><b>]</b></font> <a href="#property_expr">property_expr</a>
    | <font color="red"><b>s_eventually</b></font> <font color="red"><b>[</b></font> <a href="#cycle_delay_const_range_expression">cycle_delay_const_range_expression</a> <font color="red"><b>]</b></font> <a href="#property_expr">property_expr</a>
    | <a href="#property_expr">property_expr</a> <font color="red"><b>until</b></font> <a href="#property_expr">property_expr</a>
    | <a href="#property_expr">property_expr</a> <font color="red"><b>s_until</b></font> <a href="#property_expr">property_expr</a>
    | <a href="#property_expr">property_expr</a> <font color="red"><b>until_with</b></font> <a href="#property_expr">property_expr</a>
    | <a href="#property_expr">property_expr</a> <font color="red"><b>s_until_with</b></font> <a href="#property_expr">property_expr</a>
    | <a href="#property_expr">property_expr</a> <font color="red"><b>implies</b></font> <a href="#property_expr">property_expr</a>
    | <a href="#property_expr">property_expr</a> <font color="red"><b>iff</b></font> <a href="#property_expr">property_expr</a>
    | <font color="red"><b>accept_on</b></font> <font color="red"><b>(</b></font> <a href="#expression_or_dist">expression_or_dist</a> <font color="red"><b>)</b></font> <a href="#property_expr">property_expr</a>
    | <font color="red"><b>reject_on</b></font> <font color="red"><b>(</b></font> <a href="#expression_or_dist">expression_or_dist</a> <font color="red"><b>)</b></font> <a href="#property_expr">property_expr</a>
    | <font color="red"><b>sync_accept_on</b></font> <font color="red"><b>(</b></font> <a href="#expression_or_dist">expression_or_dist</a> <font color="red"><b>)</b></font> <a href="#property_expr">property_expr</a>
    | <font color="red"><b>sync_reject_on</b></font> <font color="red"><b>(</b></font> <a href="#expression_or_dist">expression_or_dist</a> <font color="red"><b>)</b></font> <a href="#property_expr">property_expr</a>
    | <a href="#property_instance">property_instance</a>
    | <a href="#clocking_event">clocking_event</a> <a href="#property_expr">property_expr</a>

<a name="property_case_item">property_case_item</a> ::=
      <a href="#expression_or_dist">expression_or_dist</a> { <font color="red"><b>,</b></font> <a href="#expression_or_dist">expression_or_dist</a> } <font color="red"><b>:</b></font> <a href="#property_expr">property_expr</a> [ <font color="red"><b>;</b></font> ]
    | <font color="red"><b>default</b></font> [ <font color="red"><b>:</b></font> ] <a href="#property_expr">property_expr</a> [ <font color="red"><b>;</b></font> ]

<a name="sequence_declaration">sequence_declaration</a> ::=
      <font color="red"><b>sequence</b></font> <a href="#sequence_identifier">sequence_identifier</a> [ <font color="red"><b>(</b></font> [ <a href="#sequence_port_list">sequence_port_list</a> ] <font color="red"><b>)</b></font> ] <font color="red"><b>;</b></font>
      { <a href="#assertion_variable_declaration">assertion_variable_declaration</a> } <a href="#sequence_expr">sequence_expr</a> [ <font color="red"><b>;</b></font> ] <font color="red"><b>endsequence</b></font> [ <font color="red"><b>:</b></font> <a href="#sequence_identifier">sequence_identifier</a> ]

<a name="sequence_port_list">sequence_port_list</a> ::=
      <a href="#sequence_port_item">sequence_port_item</a> { <font color="red"><b>,</b></font> <a href="#sequence_port_item">sequence_port_item</a> }

<a name="sequence_port_item">sequence_port_item</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } [ <font color="red"><b>local</b></font> [ <a href="#sequence_lvar_port_direction">sequence_lvar_port_direction</a> ] ] <a href="#sequence_formal_type">sequence_formal_type</a>
      <a href="#formal_port_identifier">formal_port_identifier</a> { <a href="#variable_dimension">variable_dimension</a> } [ <font color="red"><b>=</b></font> <a href="#sequence_actual_arg">sequence_actual_arg</a> ]

<a name="sequence_lvar_port_direction">sequence_lvar_port_direction</a> ::=
      <font color="red"><b>input</b></font> | <font color="red"><b>inout</b></font> | <font color="red"><b>output</b></font>

<a name="sequence_formal_type">sequence_formal_type</a> ::=
      <a href="#data_type_or_implicit">data_type_or_implicit</a> | <font color="red"><b>sequence</b></font> | <font color="red"><b>untyped</b></font>

<a name="sequence_expr">sequence_expr</a> ::=
      <a href="#cycle_delay_range">cycle_delay_range</a> <a href="#sequence_expr">sequence_expr</a> { <a href="#cycle_delay_range">cycle_delay_range</a> <a href="#sequence_expr">sequence_expr</a> }
    | <a href="#sequence_expr">sequence_expr</a> <a href="#cycle_delay_range">cycle_delay_range</a> <a href="#sequence_expr">sequence_expr</a> { <a href="#cycle_delay_range">cycle_delay_range</a> <a href="#sequence_expr">sequence_expr</a> }
    | <a href="#expression_or_dist">expression_or_dist</a> [ <a href="#boolean_abbrev">boolean_abbrev</a> ]
    | <a href="#sequence_instance">sequence_instance</a> [ <a href="#sequence_abbrev">sequence_abbrev</a> ]
    | <font color="red"><b>(</b></font> <a href="#sequence_expr">sequence_expr</a> { <font color="red"><b>,</b></font> <a href="#sequence_match_item">sequence_match_item</a> } <font color="red"><b>)</b></font> [ <a href="#sequence_abbrev">sequence_abbrev</a> ]
    | <a href="#sequence_expr">sequence_expr</a> <font color="red"><b>and</b></font> <a href="#sequence_expr">sequence_expr</a>
    | <a href="#sequence_expr">sequence_expr</a> <font color="red"><b>intersect</b></font> <a href="#sequence_expr">sequence_expr</a>
    | <a href="#sequence_expr">sequence_expr</a> <font color="red"><b>or</b></font> <a href="#sequence_expr">sequence_expr</a>
    | <a href="#first_match">first_match</a> <font color="red"><b>(</b></font> <a href="#sequence_expr">sequence_expr</a> { <font color="red"><b>,</b></font> <a href="#sequence_match_item">sequence_match_item</a> } <font color="red"><b>)</b></font>
    | <a href="#expression_or_dist">expression_or_dist</a> <font color="red"><b>throughout</b></font> <a href="#sequence_expr">sequence_expr</a>
    | <a href="#sequence_expr">sequence_expr</a> <font color="red"><b>within</b></font> <a href="#sequence_expr">sequence_expr</a>
    | <a href="#clocking_event">clocking_event</a> <a href="#sequence_expr">sequence_expr</a>

<a name="cycle_delay_range">cycle_delay_range</a> ::=
      <font color="red"><b>##</b></font> <a href="#constant_primary">constant_primary</a> | <font color="red"><b>##</b></font> <font color="red"><b>[</b></font> <a href="#cycle_delay_const_range_expression">cycle_delay_const_range_expression</a> <font color="red"><b>]</b></font> | <font color="red"><b>##[*]</b></font> | <font color="red"><b>##[+]</b></font>

<a name="sequence_method_call">sequence_method_call</a> ::=
      <a href="#sequence_instance">sequence_instance</a> <font color="red"><b>.</b></font> <a href="#method_identifier">method_identifier</a>

<a name="sequence_match_item">sequence_match_item</a> ::=
      <a href="#operator_assignment">operator_assignment</a> | <a href="#inc_or_dec_expression">inc_or_dec_expression</a> | <a href="#subroutine_call">subroutine_call</a>

<a name="sequence_instance">sequence_instance</a> ::=
      <a href="#ps_or_hierarchical_sequence_identifier">ps_or_hierarchical_sequence_identifier</a> [ <font color="red"><b>(</b></font> [ <a href="#sequence_list_of_arguments">sequence_list_of_arguments</a> ] <font color="red"><b>)</b></font> ]

<a name="sequence_list_of_arguments">sequence_list_of_arguments</a> ::=
      [ <a href="#sequence_actual_arg">sequence_actual_arg</a> ] { <font color="red"><b>,</b></font> [ <a href="#sequence_actual_arg">sequence_actual_arg</a> ] }
      { <font color="red"><b>,</b></font> <font color="red"><b>.</b></font> <a href="#identifier">identifier</a> <font color="red"><b>(</b></font> [ <a href="#sequence_actual_arg">sequence_actual_arg</a> ] <font color="red"><b>)</b></font> }
    | <font color="red"><b>.</b></font> <a href="#identifier">identifier</a> <font color="red"><b>(</b></font> [ <a href="#sequence_actual_arg">sequence_actual_arg</a> ] <font color="red"><b>)</b></font> { <font color="red"><b>,</b></font> <font color="red"><b>.</b></font> <a href="#identifier">identifier</a> <font color="red"><b>(</b></font> [ <a href="#sequence_actual_arg">sequence_actual_arg</a> ] <font color="red"><b>)</b></font> }

<a name="sequence_actual_arg">sequence_actual_arg</a> ::=
      <a href="#event_expression">event_expression</a> | <a href="#sequence_expr">sequence_expr</a>

<a name="boolean_abbrev">boolean_abbrev</a> ::=
      <a href="#consecutive_repetition">consecutive_repetition</a> | <a href="#non_consecutive_repetition">non_consecutive_repetition</a> | <a href="#goto_repetition">goto_repetition</a>

<a name="sequence_abbrev">sequence_abbrev</a> ::=
      <a href="#consecutive_repetition">consecutive_repetition</a>

<a name="consecutive_repetition">consecutive_repetition</a> ::=
      <font color="red"><b>[*</b></font> <a href="#const_or_range_expression">const_or_range_expression</a> <font color="red"><b>]</b></font> | <font color="red"><b>[*]</b></font> | <font color="red"><b>[+]</b></font>

<a name="non_consecutive_repetition">non_consecutive_repetition</a> ::=
      <font color="red"><b>[=</b></font> <a href="#const_or_range_expression">const_or_range_expression</a> <font color="red"><b>]</b></font>

<a name="goto_repetition">goto_repetition</a> ::=
      <font color="red"><b>[-&gt;</b></font> <a href="#const_or_range_expression">const_or_range_expression</a> <font color="red"><b>]</b></font>

<a name="const_or_range_expression">const_or_range_expression</a> ::=
      <a href="#constant_expression">constant_expression</a> | <a href="#cycle_delay_const_range_expression">cycle_delay_const_range_expression</a>

<a name="cycle_delay_const_range_expression">cycle_delay_const_range_expression</a> ::=
      <a href="#constant_expression">constant_expression</a> <font color="red"><b>:</b></font> <a href="#constant_expression">constant_expression</a> | <a href="#constant_expression">constant_expression</a> <font color="red"><b>:</b></font> <font color="red"><b>$</b></font>

<a name="expression_or_dist">expression_or_dist</a> ::=
      <a href="#expression">expression</a> [ <font color="red"><b>dist</b></font> <font color="red"><b>{</b></font> <a href="#dist_list">dist_list</a> <font color="red"><b>}</b></font> ]

<a name="assertion_variable_declaration">assertion_variable_declaration</a> ::=
      <a href="#var_data_type">var_data_type</a> <a href="#list_of_variable_decl_assignments">list_of_variable_decl_assignments</a> <font color="red"><b>;</b></font>

<a name="let_declaration">let_declaration</a> ::=
      <font color="red"><b>let</b></font> <a href="#let_identifier">let_identifier</a> [ <font color="red"><b>(</b></font> [ <a href="#let_port_list">let_port_list</a> ] <font color="red"><b>)</b></font> ] <font color="red"><b>=</b></font> <a href="#expression">expression</a> <font color="red"><b>;</b></font>

<a name="let_identifier">let_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="let_port_list">let_port_list</a> ::=
      <a href="#let_port_item">let_port_item</a> { <font color="red"><b>,</b></font> <a href="#let_port_item">let_port_item</a> }

<a name="let_port_item">let_port_item</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <a href="#let_formal_type">let_formal_type</a> <a href="#formal_port_identifier">formal_port_identifier</a> { <a href="#variable_dimension">variable_dimension</a> }
      [ <font color="red"><b>=</b></font> <a href="#expression">expression</a> ]

<a name="let_formal_type">let_formal_type</a> ::=
      <a href="#data_type_or_implicit">data_type_or_implicit</a> | <font color="red"><b>untyped</b></font>

<a name="let_expression">let_expression</a> ::=
      [ <a href="#package_scope">package_scope</a> ] <a href="#let_identifier">let_identifier</a> [ <font color="red"><b>(</b></font> [ <a href="#let_list_of_arguments">let_list_of_arguments</a> ] <font color="red"><b>)</b></font> ]

<a name="let_list_of_arguments">let_list_of_arguments</a> ::=
      [ <a href="#let_actual_arg">let_actual_arg</a> ] { <font color="red"><b>,</b></font> [ <a href="#let_actual_arg">let_actual_arg</a> ] } { <font color="red"><b>,</b></font> <font color="red"><b>.</b></font> <a href="#identifier">identifier</a> <font color="red"><b>(</b></font> [ <a href="#let_actual_arg">let_actual_arg</a> ] <font color="red"><b>)</b></font> }
    | <font color="red"><b>.</b></font> <a href="#identifier">identifier</a> <font color="red"><b>(</b></font> [ <a href="#let_actual_arg">let_actual_arg</a> ] <font color="red"><b>)</b></font> { <font color="red"><b>,</b></font> <font color="red"><b>.</b></font> <a href="#identifier">identifier</a> <font color="red"><b>(</b></font> [ <a href="#let_actual_arg">let_actual_arg</a> ] <font color="red"><b>)</b></font> }

<a name="let_actual_arg">let_actual_arg</a> ::=
      <a href="#expression">expression</a></pre>
<a name="Covergroup declarations">
  <h3>2.11 Covergroup declarations
  </h3>
</a>
<pre><a name="covergroup_declaration">covergroup_declaration</a> ::=
      <font color="red"><b>covergroup</b></font> <a href="#covergroup_identifier">covergroup_identifier</a> [ <font color="red"><b>(</b></font> [ <a href="#tf_port_list">tf_port_list</a> ] <font color="red"><b>)</b></font> ] [ <a href="#coverage_event">coverage_event</a> ] <font color="red"><b>;</b></font>
      { <a href="#coverage_spec_or_option">coverage_spec_or_option</a> } <font color="red"><b>endgroup</b></font> [ <font color="red"><b>:</b></font> <a href="#covergroup_identifier">covergroup_identifier</a> ]

<a name="coverage_spec_or_option">coverage_spec_or_option</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <a href="#coverage_spec">coverage_spec</a> | { <a href="#attribute_instance">attribute_instance</a> } <a href="#coverage_option">coverage_option</a> <font color="red"><b>;</b></font>

<a name="coverage_option">coverage_option</a> ::=
      <font color="red"><b>option</b></font> <font color="red"><b>.</b></font> <a href="#member_identifier">member_identifier</a> <font color="red"><b>=</b></font> <a href="#expression">expression</a>
    | <font color="red"><b>type_option</b></font> <font color="red"><b>.</b></font> <a href="#member_identifier">member_identifier</a> <font color="red"><b>=</b></font> <a href="#constant_expression">constant_expression</a>

<a name="coverage_spec">coverage_spec</a> ::=
      <a href="#cover_point">cover_point</a> | <a href="#cover_cross">cover_cross</a>

<a name="coverage_event">coverage_event</a> ::=
      <a href="#clocking_event">clocking_event</a> | <font color="red"><b>with</b></font> <font color="red"><b>function</b></font> <font color="red"><b>sample</b></font> <font color="red"><b>(</b></font> [ <a href="#tf_port_list">tf_port_list</a> ] <font color="red"><b>)</b></font> | <font color="red"><b>@@</b></font> <font color="red"><b>(</b></font> <a href="#block_event_expression">block_event_expression</a> <font color="red"><b>)</b></font>

<a name="block_event_expression">block_event_expression</a> ::=
      <a href="#block_event_expression">block_event_expression</a> <font color="red"><b>or</b></font> <a href="#block_event_expression">block_event_expression</a>
    | <font color="red"><b>begin</b></font> <a href="#hierarchical_btf_identifier">hierarchical_btf_identifier</a>
    | <font color="red"><b>end</b></font> <a href="#hierarchical_btf_identifier">hierarchical_btf_identifier</a>

<a name="hierarchical_btf_identifier">hierarchical_btf_identifier</a> ::=
      <a href="#hierarchical_tf_identifier">hierarchical_tf_identifier</a>
    | <a href="#hierarchical_block_identifier">hierarchical_block_identifier</a>
    | [ <a href="#hierarchical_identifier">hierarchical_identifier</a> <font color="red"><b>.</b></font> | <a href="#class_scope">class_scope</a> ] <a href="#method_identifier">method_identifier</a>

<a name="cover_point">cover_point</a> ::=
      [ [ <a href="#data_type_or_implicit">data_type_or_implicit</a> ] <a href="#cover_point_identifier">cover_point_identifier</a> <font color="red"><b>:</b></font> ] <font color="red"><b>coverpoint</b></font> <a href="#expression">expression</a>
      [ <font color="red"><b>iff</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> ] <a href="#bins_or_empty">bins_or_empty</a>

<a name="bins_or_empty">bins_or_empty</a> ::=
      <font color="red"><b>{</b></font> { <a href="#attribute_instance">attribute_instance</a> } { <a href="#bins_or_options">bins_or_options</a> <font color="red"><b>;</b></font> } <font color="red"><b>}</b></font> | <font color="red"><b>;</b></font>

<a name="bins_or_options">bins_or_options</a> ::=
      <a href="#coverage_option">coverage_option</a>
    | [ <font color="red"><b>wildcard</b></font> ] <a href="#bins_keyword">bins_keyword</a> <a href="#bin_identifier">bin_identifier</a> [ <font color="red"><b>[</b></font> [ <a href="#covergroup_expression">covergroup_expression</a> ] <font color="red"><b>]</b></font> ] <font color="red"><b>=</b></font> <font color="red"><b>{</b></font>
      <a href="#covergroup_range_list">covergroup_range_list</a> <font color="red"><b>}</b></font> [ <font color="red"><b>with</b></font> <font color="red"><b>(</b></font> <a href="#with_covergroup_expression">with_covergroup_expression</a> <font color="red"><b>)</b></font> ] [ <font color="red"><b>iff</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> ]
    | [ <font color="red"><b>wildcard</b></font> ] <a href="#bins_keyword">bins_keyword</a> <a href="#bin_identifier">bin_identifier</a> [ <font color="red"><b>[</b></font> [ <a href="#covergroup_expression">covergroup_expression</a> ] <font color="red"><b>]</b></font> ] <font color="red"><b>=</b></font>
      <a href="#cover_point_identifier">cover_point_identifier</a> [ <font color="red"><b>with</b></font> <font color="red"><b>(</b></font> <a href="#with_covergroup_expression">with_covergroup_expression</a> <font color="red"><b>)</b></font> ] [ <font color="red"><b>iff</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> ]
    | [ <font color="red"><b>wildcard</b></font> ] <a href="#bins_keyword">bins_keyword</a> <a href="#bin_identifier">bin_identifier</a> [ <font color="red"><b>[</b></font> [ <a href="#covergroup_expression">covergroup_expression</a> ] <font color="red"><b>]</b></font> ] <font color="red"><b>=</b></font>
      <a href="#set_covergroup_expression">set_covergroup_expression</a> [ <font color="red"><b>iff</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> ]
    | [ <font color="red"><b>wildcard</b></font> ] <a href="#bins_keyword">bins_keyword</a> <a href="#bin_identifier">bin_identifier</a> [ <font color="red"><b>[</b></font> <font color="red"><b>]</b></font> ] <font color="red"><b>=</b></font> <a href="#trans_list">trans_list</a> [ <font color="red"><b>iff</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> ]
    | <a href="#bins_keyword">bins_keyword</a> <a href="#bin_identifier">bin_identifier</a> [ <font color="red"><b>[</b></font> [ <a href="#covergroup_expression">covergroup_expression</a> ] <font color="red"><b>]</b></font> ] <font color="red"><b>=</b></font> <font color="red"><b>default</b></font>
      [ <font color="red"><b>iff</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> ]
    | <a href="#bins_keyword">bins_keyword</a> <a href="#bin_identifier">bin_identifier</a> <font color="red"><b>=</b></font> <font color="red"><b>default</b></font> <font color="red"><b>sequence</b></font> [ <font color="red"><b>iff</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> ]

<a name="bins_keyword">bins_keyword</a> ::=
      <font color="red"><b>bins</b></font> | <font color="red"><b>illegal_bins</b></font> | <font color="red"><b>ignore_bins</b></font>

<a name="trans_list">trans_list</a> ::=
      <font color="red"><b>(</b></font> <a href="#trans_set">trans_set</a> <font color="red"><b>)</b></font> { <font color="red"><b>,</b></font> <font color="red"><b>(</b></font> <a href="#trans_set">trans_set</a> <font color="red"><b>)</b></font> }

<a name="trans_set">trans_set</a> ::=
      <a href="#trans_range_list">trans_range_list</a> { <font color="red"><b>=&gt;</b></font> <a href="#trans_range_list">trans_range_list</a> }

<a name="trans_range_list">trans_range_list</a> ::=
      <a href="#trans_item">trans_item</a>
    | <a href="#trans_item">trans_item</a> <font color="red"><b>[*</b></font> <a href="#repeat_range">repeat_range</a> <font color="red"><b>]</b></font>
    | <a href="#trans_item">trans_item</a> <font color="red"><b>[-&gt;</b></font> <a href="#repeat_range">repeat_range</a> <font color="red"><b>]</b></font>
    | <a href="#trans_item">trans_item</a> <font color="red"><b>[=</b></font> <a href="#repeat_range">repeat_range</a> <font color="red"><b>]</b></font>

<a name="trans_item">trans_item</a> ::=
      <a href="#covergroup_range_list">covergroup_range_list</a>

<a name="repeat_range">repeat_range</a> ::=
      <a href="#covergroup_expression">covergroup_expression</a> | <a href="#covergroup_expression">covergroup_expression</a> <font color="red"><b>:</b></font> <a href="#covergroup_expression">covergroup_expression</a>

<a name="cover_cross">cover_cross</a> ::=
      [ <a href="#cross_identifier">cross_identifier</a> <font color="red"><b>:</b></font> ] <font color="red"><b>cross</b></font> <a href="#list_of_cross_items">list_of_cross_items</a> [ <font color="red"><b>iff</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> ] <a href="#cross_body">cross_body</a>

<a name="list_of_cross_items">list_of_cross_items</a> ::=
      <a href="#cross_item">cross_item</a> <font color="red"><b>,</b></font> <a href="#cross_item">cross_item</a> { <font color="red"><b>,</b></font> <a href="#cross_item">cross_item</a> }

<a name="cross_item">cross_item</a> ::=
      <a href="#cover_point_identifier">cover_point_identifier</a> | <a href="#variable_identifier">variable_identifier</a>

<a name="cross_body">cross_body</a> ::=
      <font color="red"><b>{</b></font> { <a href="#cross_body_item">cross_body_item</a> <font color="red"><b>;</b></font> } <font color="red"><b>}</b></font> | <font color="red"><b>;</b></font>

<a name="cross_body_item">cross_body_item</a> ::=
      <a href="#function_declaraton">function_declaraton</a> | <a href="#bins_selection_or_option">bins_selection_or_option</a> <font color="red"><b>;</b></font>

<a name="bins_selection_or_option">bins_selection_or_option</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <a href="#coverage_option">coverage_option</a> | { <a href="#attribute_instance">attribute_instance</a> } <a href="#bins_selection">bins_selection</a>

<a name="bins_selection">bins_selection</a> ::=
      <a href="#bins_keyword">bins_keyword</a> <a href="#bin_identifier">bin_identifier</a> <font color="red"><b>=</b></font> <a href="#select_expression">select_expression</a> [ <font color="red"><b>iff</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> ]

<a name="select_expression">select_expression</a> ::=
      <a href="#select_condition">select_condition</a>
    | <font color="red"><b>!</b></font> <a href="#select_condition">select_condition</a>
    | <a href="#select_expression">select_expression</a> <font color="red"><b>&amp;&amp;</b></font> <a href="#select_expression">select_expression</a>
    | <a href="#select_expression">select_expression</a> <font color="red"><b>||</b></font> <a href="#select_expression">select_expression</a>
    | <font color="red"><b>(</b></font> <a href="#select_expression">select_expression</a> <font color="red"><b>)</b></font>
    | <a href="#select_expression">select_expression</a> <font color="red"><b>with</b></font> <font color="red"><b>(</b></font> <a href="#with_covergroup_expression">with_covergroup_expression</a> <font color="red"><b>)</b></font>
      [ <font color="red"><b>matches</b></font> <a href="#integer_covergroup_expression">integer_covergroup_expression</a> ]
    | <a href="#cross_identifier">cross_identifier</a>
    | <a href="#cross_set_expression">cross_set_expression</a> [ <font color="red"><b>matches</b></font> <a href="#integer_covergroup_expression">integer_covergroup_expression</a> ]

<a name="select_condition">select_condition</a> ::=
      <font color="red"><b>binsof</b></font> <font color="red"><b>(</b></font> <a href="#bins_expression">bins_expression</a> <font color="red"><b>)</b></font> [ <font color="red"><b>intersect</b></font> <font color="red"><b>{</b></font> <a href="#covergroup_range_list">covergroup_range_list</a> <font color="red"><b>}</b></font> ]

<a name="bins_expression">bins_expression</a> ::=
      <a href="#variable_identifier">variable_identifier</a> | <a href="#cover_point_identifier">cover_point_identifier</a> [ <font color="red"><b>.</b></font> <a href="#bin_identifier">bin_identifier</a> ]

<a name="covergroup_range_list">covergroup_range_list</a> ::=
      <a href="#covergroup_value_range">covergroup_value_range</a> { <font color="red"><b>,</b></font> <a href="#covergroup_value_range">covergroup_value_range</a> }

<a name="covergroup_value_range">covergroup_value_range</a> ::=
      <a href="#covergroup_expression">covergroup_expression</a> | <font color="red"><b>[</b></font> <a href="#covergroup_expression">covergroup_expression</a> <font color="red"><b>:</b></font> <a href="#covergroup_expression">covergroup_expression</a> <font color="red"><b>]</b></font>

<a name="with_covergroup_expression">with_covergroup_expression</a> ::=
      <a href="#covergroup_expression">covergroup_expression</a>

<a name="set_covergroup_expression">set_covergroup_expression</a> ::=
      <a href="#covergroup_expression">covergroup_expression</a>

<a name="integer_covergroup_expression">integer_covergroup_expression</a> ::=
      <a href="#covergroup_expression">covergroup_expression</a>

<a name="cross_set_expression">cross_set_expression</a> ::=
      <a href="#covergroup_expression">covergroup_expression</a>

<a name="covergroup_expression">covergroup_expression</a> ::=
      <a href="#expression">expression</a></pre>
<a name="Primitive instances">
  <h3>3 Primitive instances
  </h3>
</a>
<a name="Primitive instantiation and instances">
  <h3>3.1 Primitive instantiation and instances
  </h3>
</a>
<pre><a name="gate_instantiation">gate_instantiation</a> ::=
      <a href="#cmos_switchtype">cmos_switchtype</a> [ <a href="#delay3">delay3</a> ] <a href="#cmos_switch_instance">cmos_switch_instance</a> { <font color="red"><b>,</b></font> <a href="#cmos_switch_instance">cmos_switch_instance</a> } <font color="red"><b>;</b></font>
    | <a href="#enable_gatetype">enable_gatetype</a> [ <a href="#drive_strength">drive_strength</a> ] [ <a href="#delay3">delay3</a> ] <a href="#enable_gate_instance">enable_gate_instance</a> { <font color="red"><b>,</b></font> <a href="#enable_gate_instance">enable_gate_instance</a> }
      <font color="red"><b>;</b></font>
    | <a href="#mos_switchtype">mos_switchtype</a> [ <a href="#delay3">delay3</a> ] <a href="#mos_switch_instance">mos_switch_instance</a> { <font color="red"><b>,</b></font> <a href="#mos_switch_instance">mos_switch_instance</a> } <font color="red"><b>;</b></font>
    | <a href="#n_input_gatetype">n_input_gatetype</a> [ <a href="#drive_strength">drive_strength</a> ] [ <a href="#delay2">delay2</a> ] <a href="#n_input_gate_instance">n_input_gate_instance</a>
      { <font color="red"><b>,</b></font> <a href="#n_input_gate_instance">n_input_gate_instance</a> } <font color="red"><b>;</b></font>
    | <a href="#n_output_gatetype">n_output_gatetype</a> [ <a href="#drive_strength">drive_strength</a> ] [ <a href="#delay2">delay2</a> ] <a href="#n_output_gate_instance">n_output_gate_instance</a>
      { <font color="red"><b>,</b></font> <a href="#n_output_gate_instance">n_output_gate_instance</a> } <font color="red"><b>;</b></font>
    | <a href="#pass_en_switchtype">pass_en_switchtype</a> [ <a href="#delay2">delay2</a> ] <a href="#pass_enable_switch_instance">pass_enable_switch_instance</a> { <font color="red"><b>,</b></font> <a href="#pass_enable_switch_instance">pass_enable_switch_instance</a> } <font color="red"><b>;</b></font>
    | <a href="#pass_switchtype">pass_switchtype</a> <a href="#pass_switch_instance">pass_switch_instance</a> { <font color="red"><b>,</b></font> <a href="#pass_switch_instance">pass_switch_instance</a> } <font color="red"><b>;</b></font>
    | <font color="red"><b>pulldown</b></font> [ <a href="#pulldown_strength">pulldown_strength</a> ] <a href="#pull_gate_instance">pull_gate_instance</a> { <font color="red"><b>,</b></font> <a href="#pull_gate_instance">pull_gate_instance</a> } <font color="red"><b>;</b></font>
    | <font color="red"><b>pullup</b></font> [ <a href="#pullup_strength">pullup_strength</a> ] <a href="#pull_gate_instance">pull_gate_instance</a> { <font color="red"><b>,</b></font> <a href="#pull_gate_instance">pull_gate_instance</a> } <font color="red"><b>;</b></font>

<a name="cmos_switch_instance">cmos_switch_instance</a> ::=
      [ <a href="#name_of_instance">name_of_instance</a> ] <font color="red"><b>(</b></font> <a href="#output_terminal">output_terminal</a> <font color="red"><b>,</b></font> <a href="#input_terminal">input_terminal</a> <font color="red"><b>,</b></font> <a href="#ncontrol_terminal">ncontrol_terminal</a> <font color="red"><b>,</b></font>
      <a href="#pcontrol_terminal">pcontrol_terminal</a> <font color="red"><b>)</b></font>

<a name="enable_gate_instance">enable_gate_instance</a> ::=
      [ <a href="#name_of_instance">name_of_instance</a> ] <font color="red"><b>(</b></font> <a href="#output_terminal">output_terminal</a> <font color="red"><b>,</b></font> <a href="#input_terminal">input_terminal</a> <font color="red"><b>,</b></font> <a href="#enable_terminal">enable_terminal</a> <font color="red"><b>)</b></font>

<a name="mos_switch_instance">mos_switch_instance</a> ::=
      [ <a href="#name_of_instance">name_of_instance</a> ] <font color="red"><b>(</b></font> <a href="#output_terminal">output_terminal</a> <font color="red"><b>,</b></font> <a href="#input_terminal">input_terminal</a> <font color="red"><b>,</b></font> <a href="#enable_terminal">enable_terminal</a> <font color="red"><b>)</b></font>

<a name="n_input_gate_instance">n_input_gate_instance</a> ::=
      [ <a href="#name_of_instance">name_of_instance</a> ] <font color="red"><b>(</b></font> <a href="#output_terminal">output_terminal</a> <font color="red"><b>,</b></font> <a href="#input_terminal">input_terminal</a> { <font color="red"><b>,</b></font> <a href="#input_terminal">input_terminal</a> } <font color="red"><b>)</b></font>

<a name="n_output_gate_instance">n_output_gate_instance</a> ::=
      [ <a href="#name_of_instance">name_of_instance</a> ] <font color="red"><b>(</b></font> <a href="#output_terminal">output_terminal</a> { <font color="red"><b>,</b></font> <a href="#output_terminal">output_terminal</a> } <font color="red"><b>,</b></font> <a href="#input_terminal">input_terminal</a> <font color="red"><b>)</b></font>

<a name="pass_switch_instance">pass_switch_instance</a> ::=
      [ <a href="#name_of_instance">name_of_instance</a> ] <font color="red"><b>(</b></font> <a href="#inout_terminal">inout_terminal</a> <font color="red"><b>,</b></font> <a href="#inout_terminal">inout_terminal</a> <font color="red"><b>)</b></font>

<a name="pass_enable_switch_instance">pass_enable_switch_instance</a> ::=
      [ <a href="#name_of_instance">name_of_instance</a> ] <font color="red"><b>(</b></font> <a href="#inout_terminal">inout_terminal</a> <font color="red"><b>,</b></font> <a href="#inout_terminal">inout_terminal</a> <font color="red"><b>,</b></font> <a href="#enable_terminal">enable_terminal</a> <font color="red"><b>)</b></font>

<a name="pull_gate_instance">pull_gate_instance</a> ::=
      [ <a href="#name_of_instance">name_of_instance</a> ] <font color="red"><b>(</b></font> <a href="#output_terminal">output_terminal</a> <font color="red"><b>)</b></font></pre>
<a name="Primitive strengths">
  <h3>3.2 Primitive strengths
  </h3>
</a>
<pre><a name="pulldown_strength">pulldown_strength</a> ::=
      <font color="red"><b>(</b></font> <a href="#strength0">strength0</a> <font color="red"><b>,</b></font> <a href="#strength1">strength1</a> <font color="red"><b>)</b></font> | <font color="red"><b>(</b></font> <a href="#strength1">strength1</a> <font color="red"><b>,</b></font> <a href="#strength0">strength0</a> <font color="red"><b>)</b></font> | <font color="red"><b>(</b></font> <a href="#strength0">strength0</a> <font color="red"><b>)</b></font>

<a name="pullup_strength">pullup_strength</a> ::=
      <font color="red"><b>(</b></font> <a href="#strength0">strength0</a> <font color="red"><b>,</b></font> <a href="#strength1">strength1</a> <font color="red"><b>)</b></font> | <font color="red"><b>(</b></font> <a href="#strength1">strength1</a> <font color="red"><b>,</b></font> <a href="#strength0">strength0</a> <font color="red"><b>)</b></font> | <font color="red"><b>(</b></font> <a href="#strength1">strength1</a> <font color="red"><b>)</b></font></pre>
<a name="Primitive terminals">
  <h3>3.3 Primitive terminals
  </h3>
</a>
<pre><a name="enable_terminal">enable_terminal</a> ::=
      <a href="#expression">expression</a>

<a name="inout_terminal">inout_terminal</a> ::=
      <a href="#net_lvalue">net_lvalue</a>

<a name="input_terminal">input_terminal</a> ::=
      <a href="#expression">expression</a>

<a name="ncontrol_terminal">ncontrol_terminal</a> ::=
      <a href="#expression">expression</a>

<a name="output_terminal">output_terminal</a> ::=
      <a href="#net_lvalue">net_lvalue</a>

<a name="pcontrol_terminal">pcontrol_terminal</a> ::=
      <a href="#expression">expression</a></pre>
<a name="Primitive gate and switch types">
  <h3>3.4 Primitive gate and switch types
  </h3>
</a>
<pre><a name="cmos_switchtype">cmos_switchtype</a> ::=
      <font color="red"><b>cmos</b></font> | <font color="red"><b>rcmos</b></font>

<a name="enable_gatetype">enable_gatetype</a> ::=
      <font color="red"><b>bufif0</b></font> | <font color="red"><b>bufif1</b></font> | <font color="red"><b>notif0</b></font> | <font color="red"><b>notif1</b></font>

<a name="mos_switchtype">mos_switchtype</a> ::=
      <font color="red"><b>nmos</b></font> | <font color="red"><b>pmos</b></font> | <font color="red"><b>rnmos</b></font> | <font color="red"><b>rpmos</b></font>

<a name="n_input_gatetype">n_input_gatetype</a> ::=
      <font color="red"><b>and</b></font> | <font color="red"><b>nand</b></font> | <font color="red"><b>or</b></font> | <font color="red"><b>nor</b></font> | <font color="red"><b>xor</b></font> | <font color="red"><b>xnor</b></font>

<a name="n_output_gatetype">n_output_gatetype</a> ::=
      <font color="red"><b>buf</b></font> | <font color="red"><b>not</b></font>

<a name="pass_en_switchtype">pass_en_switchtype</a> ::=
      <font color="red"><b>tranif0</b></font> | <font color="red"><b>tranif1</b></font> | <font color="red"><b>rtranif1</b></font> | <font color="red"><b>rtranif0</b></font>

<a name="pass_switchtype">pass_switchtype</a> ::=
      <font color="red"><b>tran</b></font> | <font color="red"><b>rtran</b></font></pre>
<a name="Instantiations">
  <h3>4 Instantiations
  </h3>
</a>
<a name="Instantation">
  <h3>4.1 Instantation
  </h3>
</a>
<a name="Module instantation">
  <h3>4.1.1 Module instantation
  </h3>
</a>
<pre><a name="module_instantiation">module_instantiation</a> ::=
      <a href="#module_identifier">module_identifier</a> [ <a href="#parameter_value_assignment">parameter_value_assignment</a> ] <a href="#hierarchical_instance">hierarchical_instance</a>
      { <font color="red"><b>,</b></font> <a href="#hierarchical_instance">hierarchical_instance</a> } <font color="red"><b>;</b></font>

<a name="parameter_value_assignment">parameter_value_assignment</a> ::=
      <font color="red"><b>#</b></font> <font color="red"><b>(</b></font> [ <a href="#list_of_parameter_assignments">list_of_parameter_assignments</a> ] <font color="red"><b>)</b></font>

<a name="list_of_parameter_assignments">list_of_parameter_assignments</a> ::=
      <a href="#ordered_parameter_assignment">ordered_parameter_assignment</a> { <font color="red"><b>,</b></font> <a href="#ordered_parameter_assignment">ordered_parameter_assignment</a> }
    | <a href="#named_parameter_assignment">named_parameter_assignment</a> { <font color="red"><b>,</b></font> <a href="#named_parameter_assignment">named_parameter_assignment</a> }

<a name="ordered_parameter_assignment">ordered_parameter_assignment</a> ::=
      <a href="#param_expression">param_expression</a>

<a name="named_parameter_assignment">named_parameter_assignment</a> ::=
      <font color="red"><b>.</b></font> <a href="#parameter_identifier">parameter_identifier</a> <font color="red"><b>(</b></font> [ <a href="#param_expression">param_expression</a> ] <font color="red"><b>)</b></font>

<a name="hierarchical_instance">hierarchical_instance</a> ::=
      <a href="#name_of_instance">name_of_instance</a> <font color="red"><b>(</b></font> [ <a href="#list_of_port_connections">list_of_port_connections</a> ] <font color="red"><b>)</b></font>

<a name="name_of_instance">name_of_instance</a> ::=
      <a href="#instance_identifier">instance_identifier</a> { <a href="#unpacked_dimension">unpacked_dimension</a> }

<a name="list_of_port_connections">list_of_port_connections</a> ::=
      <a href="#ordered_port_connection">ordered_port_connection</a> { <font color="red"><b>,</b></font> <a href="#ordered_port_connection">ordered_port_connection</a> }
    | <a href="#named_port_connection">named_port_connection</a> { <font color="red"><b>,</b></font> <a href="#named_port_connection">named_port_connection</a> }

<a name="ordered_port_connection">ordered_port_connection</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } [ <a href="#expression">expression</a> ]

<a name="named_port_connection">named_port_connection</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>.</b></font> <a href="#port_identifier">port_identifier</a> [ <font color="red"><b>(</b></font> [ <a href="#expression">expression</a> ] <font color="red"><b>)</b></font> ] | { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>.*</b></font></pre>
<a name="Interface instantiation">
  <h3>4.1.2 Interface instantiation
  </h3>
</a>
<pre><a name="interface_instantiation">interface_instantiation</a> ::=
      <a href="#interface_identifier">interface_identifier</a> [ <a href="#parameter_value_assignment">parameter_value_assignment</a> ] <a href="#hierarchical_instance">hierarchical_instance</a>
      { <font color="red"><b>,</b></font> <a href="#hierarchical_instance">hierarchical_instance</a> } <font color="red"><b>;</b></font></pre>
<a name="Program instantiation">
  <h3>4.1.3 Program instantiation
  </h3>
</a>
<pre><a name="program_instantiation">program_instantiation</a> ::=
      <a href="#program_identifier">program_identifier</a> [ <a href="#parameter_value_assignment">parameter_value_assignment</a> ] <a href="#hierarchical_instance">hierarchical_instance</a>
      { <font color="red"><b>,</b></font> <a href="#hierarchical_instance">hierarchical_instance</a> } <font color="red"><b>;</b></font></pre>
<a name="Checker instantiation">
  <h3>4.1.4 Checker instantiation
  </h3>
</a>
<pre><a name="checker_instantiation">checker_instantiation</a> ::=
      <a href="#ps_checker_identifier">ps_checker_identifier</a> <a href="#name_of_instance">name_of_instance</a> <font color="red"><b>(</b></font> [ <a href="#list_of_checker_port_connections">list_of_checker_port_connections</a> ] <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>

<a name="list_of_checker_port_connections">list_of_checker_port_connections</a> ::=
      <a href="#ordered_checker_port_connection">ordered_checker_port_connection</a> { <font color="red"><b>,</b></font> <a href="#ordered_checker_port_connection">ordered_checker_port_connection</a> }
    | <a href="#named_checker_port_connection">named_checker_port_connection</a> { <font color="red"><b>,</b></font> <a href="#named_checker_port_connection">named_checker_port_connection</a> }

<a name="ordered_checker_port_connection">ordered_checker_port_connection</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } [ <a href="#property_actual_arg">property_actual_arg</a> ]

<a name="named_checker_port_connection">named_checker_port_connection</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>.</b></font> <a href="#formal_port_identifier">formal_port_identifier</a> [ <font color="red"><b>(</b></font> [ <a href="#property_actual_arg">property_actual_arg</a> ] <font color="red"><b>)</b></font> ]
    | { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>.*</b></font></pre>
<a name="Generated instantiation">
  <h3>4.2 Generated instantiation
  </h3>
</a>
<pre><a name="generate_region">generate_region</a> ::=
      <font color="red"><b>generate</b></font> { <a href="#generate_item">generate_item</a> } <font color="red"><b>endgenerate</b></font>

<a name="loop_generate_construct">loop_generate_construct</a> ::=
      <font color="red"><b>for</b></font> <font color="red"><b>(</b></font> <a href="#genvar_initialization">genvar_initialization</a> <font color="red"><b>;</b></font> <a href="#genvar_expression">genvar_expression</a> <font color="red"><b>;</b></font> <a href="#genvar_iteration">genvar_iteration</a> <font color="red"><b>)</b></font> <a href="#generate_block">generate_block</a>

<a name="genvar_initialization">genvar_initialization</a> ::=
      [ <font color="red"><b>genvar</b></font> ] <a href="#genvar_identifier">genvar_identifier</a> <font color="red"><b>=</b></font> <a href="#constant_expression">constant_expression</a>

<a name="genvar_iteration">genvar_iteration</a> ::=
      <a href="#genvar_identifier">genvar_identifier</a> <a href="#assignment_operator">assignment_operator</a> <a href="#genvar_expression">genvar_expression</a>
    | <a href="#inc_or_dec_operator">inc_or_dec_operator</a> <a href="#genvar_identifier">genvar_identifier</a>
    | <a href="#genvar_identifier">genvar_identifier</a> <a href="#inc_or_dec_operator">inc_or_dec_operator</a>

<a name="conditional_generate_construct">conditional_generate_construct</a> ::=
      <a href="#if_generate_construct">if_generate_construct</a> | <a href="#case_generate_construct">case_generate_construct</a>

<a name="if_generate_construct">if_generate_construct</a> ::=
      <font color="red"><b>if</b></font> <font color="red"><b>(</b></font> <a href="#constant_expression">constant_expression</a> <font color="red"><b>)</b></font> <a href="#generate_block">generate_block</a> [ <font color="red"><b>else</b></font> <a href="#generate_block">generate_block</a> ]

<a name="case_generate_construct">case_generate_construct</a> ::=
      <font color="red"><b>case</b></font> <font color="red"><b>(</b></font> <a href="#constant_expression">constant_expression</a> <font color="red"><b>)</b></font> <a href="#case_generate_item">case_generate_item</a> { <a href="#case_generate_item">case_generate_item</a> } <font color="red"><b>endcase</b></font>

<a name="case_generate_item">case_generate_item</a> ::=
      <a href="#constant_expression">constant_expression</a> { <font color="red"><b>,</b></font> <a href="#constant_expression">constant_expression</a> } <font color="red"><b>:</b></font> <a href="#generate_block">generate_block</a> | <font color="red"><b>default</b></font> [ <font color="red"><b>:</b></font> ] <a href="#generate_block">generate_block</a>

<a name="generate_block">generate_block</a> ::=
      <a href="#generate_item">generate_item</a>
    | [ <a href="#generate_block_identifier">generate_block_identifier</a> <font color="red"><b>:</b></font> ] <font color="red"><b>begin</b></font> [ <font color="red"><b>:</b></font> <a href="#generate_block_identifier">generate_block_identifier</a> ] { <a href="#generate_item">generate_item</a> } <font color="red"><b>end</b></font>
      [ <font color="red"><b>:</b></font> <a href="#generate_block_identifier">generate_block_identifier</a> ]

<a name="generate_item">generate_item</a> ::=
      <a href="#module_or_generate_item">module_or_generate_item</a> | <a href="#interface_or_generate_item">interface_or_generate_item</a> | <a href="#checker_or_generate_item">checker_or_generate_item</a></pre>
<a name="UDP declaration and instantiation">
  <h3>5 UDP declaration and instantiation
  </h3>
</a>
<a name="UDP declaration">
  <h3>5.1 UDP declaration
  </h3>
</a>
<pre><a name="udp_nonansi_declaration">udp_nonansi_declaration</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>primitive</b></font> <a href="#udp_identifier">udp_identifier</a> <font color="red"><b>(</b></font> <a href="#udp_port_list">udp_port_list</a> <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>

<a name="udp_ansi_declaration">udp_ansi_declaration</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>primitive</b></font> <a href="#udp_identifier">udp_identifier</a> <font color="red"><b>(</b></font> <a href="#udp_declaration_port_list">udp_declaration_port_list</a> <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>

<a name="udp_declaration">udp_declaration</a> ::=
      <a href="#udp_nonansi_declaration">udp_nonansi_declaration</a> <a href="#udp_port_declaration">udp_port_declaration</a> { <a href="#udp_port_declaration">udp_port_declaration</a> } <a href="#udp_body">udp_body</a> <font color="red"><b>endprimitive</b></font>
      [ <font color="red"><b>:</b></font> <a href="#udp_identifier">udp_identifier</a> ]
    | <a href="#udp_ansi_declaration">udp_ansi_declaration</a> <a href="#udp_body">udp_body</a> <font color="red"><b>endprimitive</b></font> [ <font color="red"><b>:</b></font> <a href="#udp_identifier">udp_identifier</a> ]
    | <font color="red"><b>extern</b></font> <a href="#udp_nonansi_declaration">udp_nonansi_declaration</a>
    | <font color="red"><b>extern</b></font> <a href="#udp_ansi_declaration">udp_ansi_declaration</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>primitive</b></font> <a href="#udp_identifier">udp_identifier</a> <font color="red"><b>(</b></font> <font color="red"><b>.*</b></font> <font color="red"><b>)</b></font> <font color="red"><b>;</b></font> { <a href="#udp_port_declaration">udp_port_declaration</a> } <a href="#udp_body">udp_body</a>
      <font color="red"><b>endprimitive</b></font> [ <font color="red"><b>:</b></font> <a href="#udp_identifier">udp_identifier</a> ]</pre>
<a name="UDP ports">
  <h3>5.2 UDP ports
  </h3>
</a>
<pre><a name="udp_port_list">udp_port_list</a> ::=
      <a href="#output_port_identifier">output_port_identifier</a> <font color="red"><b>,</b></font> <a href="#input_port_identifier">input_port_identifier</a> { <font color="red"><b>,</b></font> <a href="#input_port_identifier">input_port_identifier</a> }

<a name="udp_declaration_port_list">udp_declaration_port_list</a> ::=
      <a href="#udp_output_declaration">udp_output_declaration</a> <font color="red"><b>,</b></font> <a href="#udp_input_declaration">udp_input_declaration</a> { <font color="red"><b>,</b></font> <a href="#udp_input_declaration">udp_input_declaration</a> }

<a name="udp_port_declaration">udp_port_declaration</a> ::=
      <a href="#udp_output_declaration">udp_output_declaration</a> <font color="red"><b>;</b></font> | <a href="#udp_input_declaration">udp_input_declaration</a> <font color="red"><b>;</b></font> | <a href="#udp_reg_declaration">udp_reg_declaration</a> <font color="red"><b>;</b></font>

<a name="udp_output_declaration">udp_output_declaration</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>output</b></font> <a href="#port_identifier">port_identifier</a>
    | { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>output</b></font> <font color="red"><b>reg</b></font> <a href="#port_identifier">port_identifier</a> [ <font color="red"><b>=</b></font> <a href="#constant_expression">constant_expression</a> ]

<a name="udp_input_declaration">udp_input_declaration</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>input</b></font> <a href="#list_of_udp_port_identifiers">list_of_udp_port_identifiers</a>

<a name="udp_reg_declaration">udp_reg_declaration</a> ::=
      { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>reg</b></font> <a href="#variable_identifier">variable_identifier</a></pre>
<a name="UDP body">
  <h3>5.3 UDP body
  </h3>
</a>
<pre><a name="udp_body">udp_body</a> ::=
      <a href="#combinational_body">combinational_body</a> | <a href="#sequential_body">sequential_body</a>

<a name="combinational_body">combinational_body</a> ::=
      <font color="red"><b>table</b></font> <a href="#combinational_entry">combinational_entry</a> { <a href="#combinational_entry">combinational_entry</a> } <font color="red"><b>endtable</b></font>

<a name="combinational_entry">combinational_entry</a> ::=
      <a href="#level_input_list">level_input_list</a> <font color="red"><b>:</b></font> <a href="#output_symbol">output_symbol</a> <font color="red"><b>;</b></font>

<a name="sequential_body">sequential_body</a> ::=
      [ <a href="#udp_initial_statement">udp_initial_statement</a> ] <font color="red"><b>table</b></font> <a href="#sequential_entry">sequential_entry</a> { <a href="#sequential_entry">sequential_entry</a> } <font color="red"><b>endtable</b></font>

<a name="udp_initial_statement">udp_initial_statement</a> ::=
      <font color="red"><b>initial</b></font> <a href="#output_port_identifier">output_port_identifier</a> <font color="red"><b>=</b></font> <a href="#init_val">init_val</a> <font color="red"><b>;</b></font>

<a name="init_val">init_val</a> ::=
      <font color="red"><b>1'b0</b></font> | <font color="red"><b>1'b1</b></font> | <font color="red"><b>1'bx</b></font> | <font color="red"><b>1'bX</b></font> | <font color="red"><b>1'B0</b></font> | <font color="red"><b>1'B1</b></font> | <font color="red"><b>1'Bx</b></font> | <font color="red"><b>1'BX</b></font> | <font color="red"><b>1</b></font> | <font color="red"><b>0</b></font>

<a name="sequential_entry">sequential_entry</a> ::=
      <a href="#seq_input_list">seq_input_list</a> <font color="red"><b>:</b></font> <a href="#current_state">current_state</a> <font color="red"><b>:</b></font> <a href="#next_state">next_state</a> <font color="red"><b>;</b></font>

<a name="seq_input_list">seq_input_list</a> ::=
      <a href="#level_input_list">level_input_list</a> <font color="red"><b>|</b></font> <a href="#edge_input_list">edge_input_list</a>

<a name="level_input_list">level_input_list</a> ::=
      <a href="#level_symbol">level_symbol</a> { <a href="#level_symbol">level_symbol</a> }

<a name="edge_input_list">edge_input_list</a> ::=
      { <a href="#level_symbol">level_symbol</a> } <a href="#edge_indicator">edge_indicator</a> { <a href="#level_symbol">level_symbol</a> }

<a name="edge_indicator">edge_indicator</a> ::=
      <font color="red"><b>(</b></font> <a href="#level_symbol">level_symbol</a> <a href="#level_symbol">level_symbol</a> <font color="red"><b>)</b></font> | <a href="#edge_symbol">edge_symbol</a>

<a name="current_state">current_state</a> ::=
      <a href="#level_symbol">level_symbol</a>

<a name="next_state">next_state</a> ::=
      <a href="#output_symbol">output_symbol</a> | <font color="red"><b>-</b></font>

<a name="output_symbol">output_symbol</a> ::=
      <font color="red"><b>0</b></font> | <font color="red"><b>1</b></font> | <font color="red"><b>x</b></font> | <font color="red"><b>X</b></font>

<a name="level_symbol">level_symbol</a> ::=
      <font color="red"><b>0</b></font> | <font color="red"><b>1</b></font> | <font color="red"><b>x</b></font> | <font color="red"><b>X</b></font> | <font color="red"><b>?</b></font> | <font color="red"><b>b</b></font> | <font color="red"><b>B</b></font>

<a name="edge_symbol">edge_symbol</a> ::=
      <font color="red"><b>r</b></font> | <font color="red"><b>R</b></font> | <font color="red"><b>f</b></font> | <font color="red"><b>F</b></font> | <font color="red"><b>p</b></font> | <font color="red"><b>P</b></font> | <font color="red"><b>n</b></font> | <font color="red"><b>N</b></font> | <font color="red"><b>*</b></font></pre>
<a name="UDP instantiation">
  <h3>5.4 UDP instantiation
  </h3>
</a>
<pre><a name="udp_instantiation">udp_instantiation</a> ::=
      <a href="#udp_identifier">udp_identifier</a> [ <a href="#drive_strength">drive_strength</a> ] [ <a href="#delay2">delay2</a> ] <a href="#udp_instance">udp_instance</a> { <font color="red"><b>,</b></font> <a href="#udp_instance">udp_instance</a> } <font color="red"><b>;</b></font>

<a name="udp_instance">udp_instance</a> ::=
      [ <a href="#name_of_instance">name_of_instance</a> ] <font color="red"><b>(</b></font> <a href="#output_terminal">output_terminal</a> <font color="red"><b>,</b></font> <a href="#input_terminal">input_terminal</a> { <font color="red"><b>,</b></font> <a href="#input_terminal">input_terminal</a> } <font color="red"><b>)</b></font></pre>
<a name="Behavioral assignments">
  <h3>6 Behavioral assignments
  </h3>
</a>
<a name="Continuous assignment and net alias statements">
  <h3>6.1 Continuous assignment and net alias statements
  </h3>
</a>
<pre><a name="continuous_assign">continuous_assign</a> ::=
      <font color="red"><b>assign</b></font> [ <a href="#drive_strength">drive_strength</a> ] [ <a href="#delay3">delay3</a> ] <a href="#list_of_net_assignments">list_of_net_assignments</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>assign</b></font> [ <a href="#delay_control">delay_control</a> ] <a href="#list_of_variable_assignments">list_of_variable_assignments</a> <font color="red"><b>;</b></font>

<a name="list_of_net_assignments">list_of_net_assignments</a> ::=
      <a href="#net_assignment">net_assignment</a> { <font color="red"><b>,</b></font> <a href="#net_assignment">net_assignment</a> }

<a name="list_of_variable_assignments">list_of_variable_assignments</a> ::=
      <a href="#variable_assignment">variable_assignment</a> { <font color="red"><b>,</b></font> <a href="#variable_assignment">variable_assignment</a> }

<a name="net_alias">net_alias</a> ::=
      <font color="red"><b>alias</b></font> <a href="#net_lvalue">net_lvalue</a> <font color="red"><b>=</b></font> <a href="#net_lvalue">net_lvalue</a> { <font color="red"><b>=</b></font> <a href="#net_lvalue">net_lvalue</a> } <font color="red"><b>;</b></font>

<a name="net_assignment">net_assignment</a> ::=
      <a href="#net_lvalue">net_lvalue</a> <font color="red"><b>=</b></font> <a href="#expression">expression</a></pre>
<a name="Procedural blocks and assignments">
  <h3>6.2 Procedural blocks and assignments
  </h3>
</a>
<pre><a name="initial_construct">initial_construct</a> ::=
      <font color="red"><b>initial</b></font> <a href="#statement_or_null">statement_or_null</a>

<a name="always_construct">always_construct</a> ::=
      <a href="#always_keyword">always_keyword</a> <a href="#statement">statement</a>

<a name="always_keyword">always_keyword</a> ::=
      <font color="red"><b>always</b></font> | <font color="red"><b>always_comb</b></font> | <font color="red"><b>always_latch</b></font> | <font color="red"><b>always_ff</b></font>

<a name="final_construct">final_construct</a> ::=
      <font color="red"><b>final</b></font> <a href="#function_statement">function_statement</a>

<a name="blocking_assignment">blocking_assignment</a> ::=
      <a href="#variable_lvalue">variable_lvalue</a> <font color="red"><b>=</b></font> <a href="#delay_or_event_control">delay_or_event_control</a> <a href="#expression">expression</a>
    | <a href="#nonrange_variable_lvalue">nonrange_variable_lvalue</a> <font color="red"><b>=</b></font> <a href="#dynamic_array_new">dynamic_array_new</a>
    | [ <a href="#implicit_class_handle">implicit_class_handle</a> <font color="red"><b>.</b></font> | <a href="#class_scope">class_scope</a> | <a href="#package_scope">package_scope</a> ] <a href="#hierarchical_variable_identifier">hierarchical_variable_identifier</a>
      <a href="#select">select</a> <font color="red"><b>!=</b></font> <a href="#class_new">class_new</a>
    | <a href="#operator_assignment">operator_assignment</a>

<a name="operator_assignment">operator_assignment</a> ::=
      <a href="#variable_lvalue">variable_lvalue</a> <a href="#assignment_operator">assignment_operator</a> <a href="#expression">expression</a>

<a name="assignment_operator">assignment_operator</a> ::=
      <font color="red"><b>=</b></font> | <font color="red"><b>+=</b></font> | <font color="red"><b>-=</b></font> | <font color="red"><b>*=</b></font> | <font color="red"><b>/=</b></font> | <font color="red"><b>%=</b></font> | <font color="red"><b>&amp;=</b></font> | <font color="red"><b>|=</b></font> | <font color="red"><b>^=</b></font> | <font color="red"><b>&lt;&lt;=</b></font> | <font color="red"><b>&gt;&gt;=</b></font> | <font color="red"><b>&lt;&lt;&lt;=</b></font> | <font color="red"><b>&gt;&gt;&gt;=</b></font>

<a name="nonblocking_assignment">nonblocking_assignment</a> ::=
      <a href="#variable_lvalue">variable_lvalue</a> <font color="red"><b>&lt;=</b></font> [ <a href="#delay_or_event_control">delay_or_event_control</a> ] <a href="#expression">expression</a>

<a name="procedural_continuous_assignment">procedural_continuous_assignment</a> ::=
      <font color="red"><b>assign</b></font> <a href="#variable_assignment">variable_assignment</a>
    | <font color="red"><b>deassign</b></font> <a href="#variable_lvalue">variable_lvalue</a>
    | <font color="red"><b>force</b></font> <a href="#variable_assignment">variable_assignment</a>
    | <font color="red"><b>force</b></font> <a href="#net_assignment">net_assignment</a>
    | <font color="red"><b>release</b></font> <a href="#variable_lvalue">variable_lvalue</a>
    | <font color="red"><b>release</b></font> <a href="#net_lvalue">net_lvalue</a>

<a name="variable_assignment">variable_assignment</a> ::=
      <a href="#variable_lvalue">variable_lvalue</a> <font color="red"><b>=</b></font> <a href="#expression">expression</a></pre>
<a name="Parallel and sequential blocks">
  <h3>6.3 Parallel and sequential blocks
  </h3>
</a>
<pre><a name="action_block">action_block</a> ::=
      <a href="#statement_or_null">statement_or_null</a> | [ <a href="#statement">statement</a> ] <font color="red"><b>else</b></font> <a href="#statement_or_null">statement_or_null</a>

<a name="seq_block">seq_block</a> ::=
      <font color="red"><b>begin</b></font> [ <font color="red"><b>:</b></font> <a href="#block_identifier">block_identifier</a> ] { <a href="#block_item_declaration">block_item_declaration</a> } { <a href="#statement_or_null">statement_or_null</a> } <font color="red"><b>end</b></font>
      [ <font color="red"><b>:</b></font> <a href="#block_identifier">block_identifier</a> ]

<a name="par_block">par_block</a> ::=
      <font color="red"><b>fork</b></font> [ <font color="red"><b>:</b></font> <a href="#block_identifier">block_identifier</a> ] { <a href="#block_item_declaration">block_item_declaration</a> } { <a href="#statement_or_null">statement_or_null</a> } <a href="#join_keyword">join_keyword</a>
      [ <font color="red"><b>:</b></font> <a href="#block_identifier">block_identifier</a> ]

<a name="join_keyword">join_keyword</a> ::=
      <font color="red"><b>join</b></font> | <font color="red"><b>join_any</b></font> | <font color="red"><b>join_none</b></font></pre>
<a name="Statements">
  <h3>6.4 Statements
  </h3>
</a>
<pre><a name="statement_or_null">statement_or_null</a> ::=
      <a href="#statement">statement</a> | { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>;</b></font>

<a name="statement">statement</a> ::=
      [ <a href="#block_identifier">block_identifier</a> <font color="red"><b>:</b></font> ] { <a href="#attribute_instance">attribute_instance</a> } <a href="#statement_item">statement_item</a>

<a name="statement_item">statement_item</a> ::=
      <a href="#blocking_assignment">blocking_assignment</a> <font color="red"><b>;</b></font>
    | <a href="#nonblocking_assignment">nonblocking_assignment</a> <font color="red"><b>;</b></font>
    | <a href="#procedural_continuous_assignment">procedural_continuous_assignment</a> <font color="red"><b>;</b></font>
    | <a href="#case_statement">case_statement</a>
    | <a href="#conditional_statement">conditional_statement</a>
    | <a href="#inc_or_dec_expression">inc_or_dec_expression</a> <font color="red"><b>;</b></font>
    | <a href="#subroutine_call_statement">subroutine_call_statement</a>
    | <a href="#disable_statement">disable_statement</a>
    | <a href="#event_trigger">event_trigger</a>
    | <a href="#loop_statement">loop_statement</a>
    | <a href="#jump_statement">jump_statement</a>
    | <a href="#par_block">par_block</a>
    | <a href="#procedural_timing_control_statement">procedural_timing_control_statement</a>
    | <a href="#seq_block">seq_block</a>
    | <a href="#wait_statement">wait_statement</a>
    | <a href="#procedural_assertion_statement">procedural_assertion_statement</a>
    | <a href="#clocking_drive">clocking_drive</a> <font color="red"><b>;</b></font>
    | <a href="#randsequence_statement">randsequence_statement</a>
    | <a href="#randcase_statement">randcase_statement</a>
    | <a href="#expect_property_statement">expect_property_statement</a>

<a name="function_statement">function_statement</a> ::=
      <a href="#statement">statement</a>

<a name="function_statement_or_null">function_statement_or_null</a> ::=
      <a href="#function_statement">function_statement</a> | { <a href="#attribute_instance">attribute_instance</a> } <font color="red"><b>;</b></font>

<a name="variable_identifier_list">variable_identifier_list</a> ::=
      <a href="#variable_identifier">variable_identifier</a> { <font color="red"><b>,</b></font> <a href="#variable_identifier">variable_identifier</a> }</pre>
<a name="Timing control statements">
  <h3>6.5 Timing control statements
  </h3>
</a>
<pre><a name="procedural_timing_control_statement">procedural_timing_control_statement</a> ::=
      <a href="#procedural_timing_control">procedural_timing_control</a> <a href="#statement_or_null">statement_or_null</a>

<a name="delay_or_event_control">delay_or_event_control</a> ::=
      <a href="#delay_control">delay_control</a> | <a href="#event_control">event_control</a> | <font color="red"><b>repeat</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> <a href="#event_control">event_control</a>

<a name="delay_control">delay_control</a> ::=
      <font color="red"><b>#</b></font> <a href="#delay_value">delay_value</a> | <font color="red"><b>#</b></font> <font color="red"><b>(</b></font> <a href="#mintypmax_expression">mintypmax_expression</a> <font color="red"><b>)</b></font>

<a name="event_control">event_control</a> ::=
      <font color="red"><b>@</b></font> <a href="#hierarchical_event_identifier">hierarchical_event_identifier</a>
    | <font color="red"><b>@</b></font> <font color="red"><b>(</b></font> <a href="#event_expression">event_expression</a> <font color="red"><b>)</b></font>
    | <font color="red"><b>@*</b></font>
    | <font color="red"><b>@</b></font> <font color="red"><b>(*)</b></font>
    | <font color="red"><b>@</b></font> <a href="#ps_or_hierarchical_sequence_identifier">ps_or_hierarchical_sequence_identifier</a>

<a name="event_expression">event_expression</a> ::=
      [ <a href="#edge_identifier">edge_identifier</a> ] <a href="#expression">expression</a> [ <font color="red"><b>iff</b></font> <a href="#expression">expression</a> ]
    | <a href="#sequence_instance">sequence_instance</a> [ <font color="red"><b>iff</b></font> <a href="#expression">expression</a> ]
    | <a href="#event_expression">event_expression</a> <font color="red"><b>or</b></font> <a href="#event_expression">event_expression</a>
    | <a href="#event_expression">event_expression</a> <font color="red"><b>,</b></font> <a href="#event_expression">event_expression</a>
    | <font color="red"><b>(</b></font> <a href="#event_expression">event_expression</a> <font color="red"><b>)</b></font>

<a name="procedural_timing_control">procedural_timing_control</a> ::=
      <a href="#delay_control">delay_control</a> | <a href="#event_control">event_control</a> | <a href="#cycle_delay">cycle_delay</a>

<a name="jump_statement">jump_statement</a> ::=
      <font color="red"><b>return</b></font> [ <a href="#expression">expression</a> ] <font color="red"><b>;</b></font> | <font color="red"><b>break</b></font> <font color="red"><b>;</b></font> | <font color="red"><b>continue</b></font> <font color="red"><b>;</b></font>

<a name="wait_statement">wait_statement</a> ::=
      <font color="red"><b>wait</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> <a href="#statement_or_null">statement_or_null</a>
    | <font color="red"><b>wait</b></font> <font color="red"><b>fork</b></font> <font color="red"><b>;</b></font>
    | <font color="red"><b>wait_order</b></font> <font color="red"><b>(</b></font> <a href="#hierarchical_identifier">hierarchical_identifier</a> { <font color="red"><b>,</b></font> <a href="#hierarchical_identifier">hierarchical_identifier</a> } <font color="red"><b>)</b></font> <a href="#action_block">action_block</a>

<a name="event_trigger">event_trigger</a> ::=
      <font color="red"><b>-&gt;</b></font> <a href="#hierarchical_event_identifier">hierarchical_event_identifier</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>-&gt;&gt;</b></font> [ <a href="#delay_or_event_control">delay_or_event_control</a> ] <a href="#hierarchical_event_identifier">hierarchical_event_identifier</a> <font color="red"><b>;</b></font>

<a name="disable_statement">disable_statement</a> ::=
      <font color="red"><b>disable</b></font> <a href="#hierarchical_task_identifier">hierarchical_task_identifier</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>disable</b></font> <a href="#hierarchical_block_identifier">hierarchical_block_identifier</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>disable</b></font> <font color="red"><b>fork</b></font> <font color="red"><b>;</b></font></pre>
<a name="Conditional statements">
  <h3>6.6 Conditional statements
  </h3>
</a>
<pre><a name="conditional_statement">conditional_statement</a> ::=
      [ <a href="#unique_priority">unique_priority</a> ] <font color="red"><b>if</b></font> <font color="red"><b>(</b></font> <a href="#cond_predicate">cond_predicate</a> <font color="red"><b>)</b></font> <a href="#statement_or_null">statement_or_null</a>
      { <font color="red"><b>else</b></font> <font color="red"><b>if</b></font> <font color="red"><b>(</b></font> <a href="#cond_predicate">cond_predicate</a> <font color="red"><b>)</b></font> <a href="#statement_or_null">statement_or_null</a> } [ <font color="red"><b>else</b></font> <a href="#statement_or_null">statement_or_null</a> ]

<a name="unique_priority">unique_priority</a> ::=
      <font color="red"><b>unique</b></font> | <font color="red"><b>unique0</b></font> | <font color="red"><b>priority</b></font>

<a name="cond_predicate">cond_predicate</a> ::=
      <a href="#expression_or_cond_pattern">expression_or_cond_pattern</a> { <font color="red"><b>&amp;&amp;&amp;</b></font> <a href="#expression_or_cond_pattern">expression_or_cond_pattern</a> }

<a name="expression_or_cond_pattern">expression_or_cond_pattern</a> ::=
      <a href="#expression">expression</a> | <a href="#cond_pattern">cond_pattern</a>

<a name="cond_pattern">cond_pattern</a> ::=
      <a href="#expression">expression</a> <font color="red"><b>matches</b></font> <a href="#pattern">pattern</a></pre>
<a name="Case statements">
  <h3>6.7 Case statements
  </h3>
</a>
<pre><a name="case_statement">case_statement</a> ::=
      [ <a href="#unique_priority">unique_priority</a> ] <a href="#case_keyword">case_keyword</a> <font color="red"><b>(</b></font> <a href="#case_expression">case_expression</a> <font color="red"><b>)</b></font> <a href="#case_item">case_item</a> { <a href="#case_item">case_item</a> } <font color="red"><b>endcase</b></font>
    | [ <a href="#unique_priority">unique_priority</a> ] <a href="#case_keyword">case_keyword</a> <font color="red"><b>(</b></font> <a href="#case_expression">case_expression</a> <font color="red"><b>)</b></font> <font color="red"><b>matches</b></font> <a href="#case_pattern_item">case_pattern_item</a>
      { <a href="#case_pattern_item">case_pattern_item</a> } <font color="red"><b>endcase</b></font>
    | [ <a href="#unique_priority">unique_priority</a> ] <font color="red"><b>case</b></font> <font color="red"><b>(</b></font> <a href="#case_expression">case_expression</a> <font color="red"><b>)</b></font> <font color="red"><b>inside</b></font> <a href="#case_inside_item">case_inside_item</a> { <a href="#case_inside_item">case_inside_item</a> }
      <font color="red"><b>endcase</b></font>

<a name="case_keyword">case_keyword</a> ::=
      <font color="red"><b>case</b></font> | <font color="red"><b>casez</b></font> | <font color="red"><b>casex</b></font>

<a name="case_expression">case_expression</a> ::=
      <a href="#expression">expression</a>

<a name="case_item">case_item</a> ::=
      <a href="#case_item_expression">case_item_expression</a> { <font color="red"><b>,</b></font> <a href="#case_item_expression">case_item_expression</a> } <font color="red"><b>:</b></font> <a href="#statement_or_null">statement_or_null</a>
    | <font color="red"><b>default</b></font> [ <font color="red"><b>:</b></font> ] <a href="#statement_or_null">statement_or_null</a>

<a name="case_pattern_item">case_pattern_item</a> ::=
      <a href="#pattern">pattern</a> [ <font color="red"><b>&amp;&amp;&amp;</b></font> <a href="#expression">expression</a> ] <font color="red"><b>:</b></font> <a href="#statement_or_null">statement_or_null</a> | <font color="red"><b>default</b></font> [ <font color="red"><b>:</b></font> ] <a href="#statement_or_null">statement_or_null</a>

<a name="case_inside_item">case_inside_item</a> ::=
      <a href="#open_range_list">open_range_list</a> <font color="red"><b>:</b></font> <a href="#statement_or_null">statement_or_null</a> | <font color="red"><b>default</b></font> [ <font color="red"><b>:</b></font> ] <a href="#statement_or_null">statement_or_null</a>

<a name="case_item_expression">case_item_expression</a> ::=
      <a href="#expression">expression</a>

<a name="randcase_statement">randcase_statement</a> ::=
      <font color="red"><b>randcase</b></font> <a href="#randcase_item">randcase_item</a> { <a href="#randcase_item">randcase_item</a> } <font color="red"><b>endcase</b></font>

<a name="randcase_item">randcase_item</a> ::=
      <a href="#expression">expression</a> <font color="red"><b>:</b></font> <a href="#statement_or_null">statement_or_null</a>

<a name="open_range_list">open_range_list</a> ::=
      <a href="#open_value_range">open_value_range</a> { <font color="red"><b>,</b></font> <a href="#open_value_range">open_value_range</a> }

<a name="open_value_range">open_value_range</a> ::=
      <a href="#value_range">value_range</a></pre>
<a name="Patterns">
  <h3>6.7.1 Patterns
  </h3>
</a>
<pre><a name="pattern">pattern</a> ::=
      <font color="red"><b>.</b></font> <a href="#variable_identifier">variable_identifier</a>
    | <font color="red"><b>.*</b></font>
    | <a href="#constant_expression">constant_expression</a>
    | <font color="red"><b>tagged</b></font> <a href="#member_identifier">member_identifier</a> [ <a href="#pattern">pattern</a> ]
    | <font color="red"><b>'{</b></font> <a href="#pattern">pattern</a> { <font color="red"><b>,</b></font> <a href="#pattern">pattern</a> } <font color="red"><b>}</b></font>
    | <font color="red"><b>'{</b></font> <a href="#member_identifier">member_identifier</a> <font color="red"><b>:</b></font> <a href="#pattern">pattern</a> { <font color="red"><b>,</b></font> <a href="#member_identifier">member_identifier</a> <font color="red"><b>:</b></font> <a href="#pattern">pattern</a> } <font color="red"><b>}</b></font>

<a name="assignment_pattern">assignment_pattern</a> ::=
      <font color="red"><b>'{</b></font> <a href="#expression">expression</a> { <font color="red"><b>,</b></font> <a href="#expression">expression</a> } <font color="red"><b>}</b></font>
    | <font color="red"><b>'{</b></font> <a href="#structure_pattern_key">structure_pattern_key</a> <font color="red"><b>:</b></font> <a href="#expression">expression</a> { <font color="red"><b>,</b></font> <a href="#structure_pattern_key">structure_pattern_key</a> <font color="red"><b>:</b></font> <a href="#expression">expression</a> } <font color="red"><b>}</b></font>
    | <font color="red"><b>'{</b></font> <a href="#array_pattern_key">array_pattern_key</a> <font color="red"><b>:</b></font> <a href="#expression">expression</a> { <font color="red"><b>,</b></font> <a href="#array_pattern_key">array_pattern_key</a> <font color="red"><b>:</b></font> <a href="#expression">expression</a> } <font color="red"><b>}</b></font>
    | <font color="red"><b>'{</b></font> <a href="#constant_expression">constant_expression</a> <font color="red"><b>{</b></font> <a href="#expression">expression</a> { <font color="red"><b>,</b></font> <a href="#expression">expression</a> } <font color="red"><b>}</b></font> <font color="red"><b>}</b></font>

<a name="structure_pattern_key">structure_pattern_key</a> ::=
      <a href="#member_identifier">member_identifier</a> | <a href="#assignment_pattern_key">assignment_pattern_key</a>

<a name="array_pattern_key">array_pattern_key</a> ::=
      <a href="#constant_expression">constant_expression</a> | <a href="#assignment_pattern_key">assignment_pattern_key</a>

<a name="assignment_pattern_key">assignment_pattern_key</a> ::=
      <a href="#simple_type">simple_type</a> | <font color="red"><b>default</b></font>

<a name="assignment_pattern_expression">assignment_pattern_expression</a> ::=
      [ <a href="#assignment_pattern_expression_type">assignment_pattern_expression_type</a> ] <a href="#assignment_pattern">assignment_pattern</a>

<a name="assignment_pattern_expression_type">assignment_pattern_expression_type</a> ::=
      <a href="#ps_type_identifier">ps_type_identifier</a> | <a href="#ps_parameter_identifier">ps_parameter_identifier</a> | <a href="#integer_atom_type">integer_atom_type</a> | <a href="#type_reference">type_reference</a>

<a name="constant_assignment_pattern_expression">constant_assignment_pattern_expression</a> ::=
      <a href="#assignment_pattern_expression">assignment_pattern_expression</a>

<a name="assignment_pattern_net_lvalue">assignment_pattern_net_lvalue</a> ::=
      <font color="red"><b>'{</b></font> <a href="#net_lvalue">net_lvalue</a> { <font color="red"><b>,</b></font> <a href="#net_lvalue">net_lvalue</a> } <font color="red"><b>}</b></font>

<a name="assignment_pattern_variable_lvalue">assignment_pattern_variable_lvalue</a> ::=
      <font color="red"><b>'{</b></font> <a href="#variable_lvalue">variable_lvalue</a> { <font color="red"><b>,</b></font> <a href="#variable_lvalue">variable_lvalue</a> } <font color="red"><b>}</b></font></pre>
<a name="Looping statements">
  <h3>6.8 Looping statements
  </h3>
</a>
<pre><a name="loop_statement">loop_statement</a> ::=
      <font color="red"><b>forever</b></font> <a href="#statement_or_null">statement_or_null</a>
    | <font color="red"><b>repeat</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> <a href="#statement_or_null">statement_or_null</a>
    | <font color="red"><b>while</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> <a href="#statement_or_null">statement_or_null</a>
    | <font color="red"><b>for</b></font> <font color="red"><b>(</b></font> [ <a href="#for_initialization">for_initialization</a> ] <font color="red"><b>;</b></font> [ <a href="#expression">expression</a> ] <font color="red"><b>;</b></font> [ <a href="#for_step">for_step</a> ] <font color="red"><b>)</b></font> <a href="#statement_or_null">statement_or_null</a>
    | <font color="red"><b>do</b></font> <a href="#statement_or_null">statement_or_null</a> <font color="red"><b>while</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>
    | <font color="red"><b>foreach</b></font> <font color="red"><b>(</b></font> <a href="#ps_or_hierarchical_array_identifier">ps_or_hierarchical_array_identifier</a> <font color="red"><b>[</b></font> <a href="#loop_variables">loop_variables</a> <font color="red"><b>]</b></font> <font color="red"><b>)</b></font> <a href="#statement">statement</a>

<a name="for_initialization">for_initialization</a> ::=
      <a href="#list_of_variable_assignments">list_of_variable_assignments</a> | <a href="#for_variable_declaration">for_variable_declaration</a> { <font color="red"><b>,</b></font> <a href="#for_variable_declaration">for_variable_declaration</a> }

<a name="for_variable_declaration">for_variable_declaration</a> ::=
      [ <font color="red"><b>var</b></font> ] <a href="#data_type">data_type</a> <a href="#variable_identifier">variable_identifier</a> <font color="red"><b>=</b></font> <a href="#expression">expression</a> { <font color="red"><b>,</b></font> <a href="#variable_identifier">variable_identifier</a> <font color="red"><b>=</b></font> <a href="#expression">expression</a> }

<a name="for_step">for_step</a> ::=
      <a href="#for_step_assignment">for_step_assignment</a> { <font color="red"><b>,</b></font> <a href="#for_step_assignment">for_step_assignment</a> }

<a name="for_step_assignment">for_step_assignment</a> ::=
      <a href="#operator_assignment">operator_assignment</a> | <a href="#inc_or_dec_expression">inc_or_dec_expression</a> | <a href="#function_subroutine_call">function_subroutine_call</a>

<a name="loop_variables">loop_variables</a> ::=
      [ <a href="#index_variable_identifier">index_variable_identifier</a> ] { <font color="red"><b>,</b></font> [ <a href="#index_variable_identifier">index_variable_identifier</a> ] }</pre>
<a name="Subroutine call statements">
  <h3>6.9 Subroutine call statements
  </h3>
</a>
<pre><a name="subroutine_call_statement">subroutine_call_statement</a> ::=
      <a href="#subroutine_call">subroutine_call</a> <font color="red"><b>;</b></font> | <a href="#void">void</a> <font color="red"><b>'</b></font> <font color="red"><b>(</b></font> <a href="#function_subroutine_call">function_subroutine_call</a> <font color="red"><b>)</b></font> <font color="red"><b>;</b></font></pre>
<a name="Assertion statements">
  <h3>6.10 Assertion statements
  </h3>
</a>
<pre><a name="assertion_item">assertion_item</a> ::=
      <a href="#concurrent_assertion_item">concurrent_assertion_item</a> | <a href="#deferred_immediate_assertion_item">deferred_immediate_assertion_item</a>

<a name="deferred_immediate_assertion_item">deferred_immediate_assertion_item</a> ::=
      [ <a href="#block_identifier">block_identifier</a> <font color="red"><b>:</b></font> ] <a href="#deferred_immediate_assertion_statement">deferred_immediate_assertion_statement</a>

<a name="procedural_assertion_statement">procedural_assertion_statement</a> ::=
      <a href="#concurrent_assertion_statement">concurrent_assertion_statement</a> | <a href="#immediate_assertion_statement">immediate_assertion_statement</a> | <a href="#checker_instantiation">checker_instantiation</a>

<a name="immediate_assertion_statement">immediate_assertion_statement</a> ::=
      <a href="#simple_immediate_assertion_statement">simple_immediate_assertion_statement</a> | <a href="#deferred_immediate_assertion_statement">deferred_immediate_assertion_statement</a>

<a name="simple_immediate_assertion_statement">simple_immediate_assertion_statement</a> ::=
      <a href="#simple_immediate_assert_statement">simple_immediate_assert_statement</a>
    | <a href="#simple_immediate_assume_statement">simple_immediate_assume_statement</a>
    | <a href="#simple_immediate_cover_statement">simple_immediate_cover_statement</a>

<a name="simple_immediate_assert_statement">simple_immediate_assert_statement</a> ::=
      <font color="red"><b>assert</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> <a href="#action_block">action_block</a>

<a name="simple_immediate_assume_statement">simple_immediate_assume_statement</a> ::=
      <font color="red"><b>assume</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> <a href="#action_block">action_block</a>

<a name="simple_immediate_cover_statement">simple_immediate_cover_statement</a> ::=
      <font color="red"><b>cover</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> <a href="#statement_or_null">statement_or_null</a>

<a name="deferred_immediate_assertion_statement">deferred_immediate_assertion_statement</a> ::=
      <a href="#deferred_immediate_assert_statement">deferred_immediate_assert_statement</a>
    | <a href="#deferred_immediate_assume_statement">deferred_immediate_assume_statement</a>
    | <a href="#deferred_immediate_cover_statement">deferred_immediate_cover_statement</a>

<a name="deferred_immediate_assert_statement">deferred_immediate_assert_statement</a> ::=
      <font color="red"><b>assert</b></font> <font color="red"><b>#0</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> <a href="#action_block">action_block</a> | <font color="red"><b>assert</b></font> <font color="red"><b>final</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> <a href="#action_block">action_block</a>

<a name="deferred_immediate_assume_statement">deferred_immediate_assume_statement</a> ::=
      <font color="red"><b>assume</b></font> <font color="red"><b>#0</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> <a href="#action_block">action_block</a> | <font color="red"><b>assume</b></font> <font color="red"><b>final</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> <a href="#action_block">action_block</a>

<a name="deferred_immediate_cover_statement">deferred_immediate_cover_statement</a> ::=
      <font color="red"><b>cover</b></font> <font color="red"><b>#0</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> <a href="#statement_or_null">statement_or_null</a> | <font color="red"><b>cover</b></font> <font color="red"><b>final</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> <a href="#statement_or_null">statement_or_null</a></pre>
<a name="Clocking block">
  <h3>6.11 Clocking block
  </h3>
</a>
<pre><a name="clocking_declaration">clocking_declaration</a> ::=
      [ <font color="red"><b>default</b></font> ] <font color="red"><b>clocking</b></font> [ <a href="#clocking_identifier">clocking_identifier</a> ] <a href="#clocking_event">clocking_event</a> <font color="red"><b>;</b></font> { <a href="#clocking_item">clocking_item</a> } <font color="red"><b>endclocking</b></font>
      [ <font color="red"><b>:</b></font> <a href="#clocking_identifier">clocking_identifier</a> ]
    | <font color="red"><b>global</b></font> <font color="red"><b>clocking</b></font> [ <a href="#clocking_identifier">clocking_identifier</a> ] <a href="#clocking_event">clocking_event</a> <font color="red"><b>;</b></font> <font color="red"><b>endclocking</b></font> [ <font color="red"><b>:</b></font> <a href="#clocking_identifier">clocking_identifier</a> ]

<a name="clocking_event">clocking_event</a> ::=
      <font color="red"><b>@</b></font> <a href="#identifier">identifier</a> | <font color="red"><b>@</b></font> <font color="red"><b>(</b></font> <a href="#event_expression">event_expression</a> <font color="red"><b>)</b></font>

<a name="clocking_item">clocking_item</a> ::=
      <font color="red"><b>default</b></font> <a href="#default_skew">default_skew</a> <font color="red"><b>;</b></font>
    | <a href="#clocking_direction">clocking_direction</a> <a href="#list_of_clocking_decl_assign">list_of_clocking_decl_assign</a> <font color="red"><b>;</b></font>
    | { <a href="#attribute_instance">attribute_instance</a> } <a href="#assertion_item_declaration">assertion_item_declaration</a>

<a name="default_skew">default_skew</a> ::=
      <font color="red"><b>input</b></font> <a href="#clocking_skew">clocking_skew</a> | <font color="red"><b>output</b></font> <a href="#clocking_skew">clocking_skew</a> | <font color="red"><b>input</b></font> <a href="#clocking_skew">clocking_skew</a> <a href="#output">output</a> <a href="#clocking_skew">clocking_skew</a>

<a name="clocking_direction">clocking_direction</a> ::=
      <font color="red"><b>input</b></font> [ <a href="#clocking_skew">clocking_skew</a> ]
    | <font color="red"><b>output</b></font> [ <a href="#clocking_skew">clocking_skew</a> ]
    | <font color="red"><b>input</b></font> [ <a href="#clocking_skew">clocking_skew</a> ] <font color="red"><b>output</b></font> [ <a href="#clocking_skew">clocking_skew</a> ]
    | <font color="red"><b>inout</b></font>

<a name="list_of_clocking_decl_assign">list_of_clocking_decl_assign</a> ::=
      <a href="#clocking_decl_assign">clocking_decl_assign</a> { <font color="red"><b>,</b></font> <a href="#clocking_decl_assign">clocking_decl_assign</a> }

<a name="clocking_decl_assign">clocking_decl_assign</a> ::=
      <a href="#signal_identifier">signal_identifier</a> [ <font color="red"><b>=</b></font> <a href="#expression">expression</a> ]

<a name="clocking_skew">clocking_skew</a> ::=
      <a href="#edge_identifier">edge_identifier</a> [ <a href="#delay_control">delay_control</a> ] | <a href="#delay_control">delay_control</a>

<a name="clocking_drive">clocking_drive</a> ::=
      <a href="#clockvar_expression">clockvar_expression</a> <font color="red"><b>&lt;=</b></font> [ <a href="#cycle_delay">cycle_delay</a> ] <a href="#expression">expression</a>

<a name="cycle_delay">cycle_delay</a> ::=
      <font color="red"><b>##</b></font> <a href="#integral_number">integral_number</a> | <font color="red"><b>##</b></font> <a href="#identifier">identifier</a> | <font color="red"><b>##</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font>

<a name="clockvar">clockvar</a> ::=
      <a href="#hierarchical_identifier">hierarchical_identifier</a>

<a name="clockvar_expression">clockvar_expression</a> ::=
      <a href="#clockvar">clockvar</a> <a href="#select">select</a></pre>
<a name="Rand sequence">
  <h3>6.12 Rand sequence
  </h3>
</a>
<pre><a name="randsequence_statement">randsequence_statement</a> ::=
      <font color="red"><b>randsequence</b></font> <font color="red"><b>(</b></font> [ <a href="#production_identifier">production_identifier</a> ] <font color="red"><b>)</b></font> <a href="#production">production</a> { <a href="#production">production</a> } <font color="red"><b>endsequence</b></font>

<a name="production">production</a> ::=
      [ <a href="#data_type_or_void">data_type_or_void</a> ] <a href="#production_identifier">production_identifier</a> [ <font color="red"><b>(</b></font> <a href="#tf_port_list">tf_port_list</a> <font color="red"><b>)</b></font> ] <font color="red"><b>:</b></font> <a href="#rs_rule">rs_rule</a> { <font color="red"><b>|</b></font> <a href="#rs_rule">rs_rule</a> } <font color="red"><b>;</b></font>

<a name="rs_rule">rs_rule</a> ::=
      <a href="#rs_production_list">rs_production_list</a> [ <font color="red"><b>:=</b></font> <a href="#weight_specification">weight_specification</a> [ <a href="#rs_code_block">rs_code_block</a> ] ]

<a name="rs_production_list">rs_production_list</a> ::=
      <a href="#rs_prod">rs_prod</a> { <a href="#rs_prod">rs_prod</a> }
    | <font color="red"><b>rand</b></font> <font color="red"><b>join</b></font> [ <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> ] <a href="#production_item">production_item</a> <a href="#production_item">production_item</a> { <a href="#production_item">production_item</a> }

<a name="weight_specification">weight_specification</a> ::=
      <a href="#integral_number">integral_number</a> | <a href="#ps_identifier">ps_identifier</a> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font>

<a name="rs_code_block">rs_code_block</a> ::=
      <font color="red"><b>{</b></font> { <a href="#data_declaration">data_declaration</a> } { <a href="#statement_or_null">statement_or_null</a> } <font color="red"><b>}</b></font>

<a name="rs_prod">rs_prod</a> ::=
      <a href="#production_item">production_item</a> | <a href="#rs_code_block">rs_code_block</a> | <a href="#rs_if_else">rs_if_else</a> | <a href="#rs_repeat">rs_repeat</a> | <a href="#rs_case">rs_case</a>

<a name="production_item">production_item</a> ::=
      <a href="#production_identifier">production_identifier</a> [ <font color="red"><b>(</b></font> <a href="#list_of_arguments">list_of_arguments</a> <font color="red"><b>)</b></font> ]

<a name="rs_if_else">rs_if_else</a> ::=
      <font color="red"><b>if</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> <a href="#production_item">production_item</a> [ <font color="red"><b>else</b></font> <a href="#production_item">production_item</a> ]

<a name="rs_repeat">rs_repeat</a> ::=
      <font color="red"><b>repeat</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> <a href="#production_item">production_item</a>

<a name="rs_case">rs_case</a> ::=
      <font color="red"><b>case</b></font> <font color="red"><b>(</b></font> <a href="#case_expression">case_expression</a> <font color="red"><b>)</b></font> <a href="#rs_case_item">rs_case_item</a> { <a href="#rs_case_item">rs_case_item</a> } <font color="red"><b>endcase</b></font>

<a name="rs_case_item">rs_case_item</a> ::=
      <a href="#case_item_expression">case_item_expression</a> { <font color="red"><b>,</b></font> <a href="#case_item_expression">case_item_expression</a> } <font color="red"><b>:</b></font> <a href="#production_item">production_item</a> <font color="red"><b>;</b></font>
    | <font color="red"><b>default</b></font> [ <font color="red"><b>:</b></font> ] <a href="#production_item">production_item</a> <font color="red"><b>;</b></font></pre>
<a name="Specify section">
  <h3>7 Specify section
  </h3>
</a>
<a name="Specify block declaration">
  <h3>7.1 Specify block declaration
  </h3>
</a>
<pre><a name="specify_block">specify_block</a> ::=
      <font color="red"><b>specify</b></font> { <a href="#specify_item">specify_item</a> } <font color="red"><b>endspecify</b></font>

<a name="specify_item">specify_item</a> ::=
      <a href="#specparam_declaration">specparam_declaration</a>
    | <a href="#pulsestyle_declaration">pulsestyle_declaration</a>
    | <a href="#showcancelled_declaration">showcancelled_declaration</a>
    | <a href="#path_declaration">path_declaration</a>
    | <a href="#system_timing_check">system_timing_check</a>

<a name="pulsestyle_declaration">pulsestyle_declaration</a> ::=
      <font color="red"><b>pulsestyle_onevent</b></font> <a href="#list_of_path_outputs">list_of_path_outputs</a> <font color="red"><b>;</b></font> | <font color="red"><b>pulsestyle_ondetect</b></font> <a href="#list_of_path_outputs">list_of_path_outputs</a> <font color="red"><b>;</b></font>

<a name="showcancelled_declaration">showcancelled_declaration</a> ::=
      <font color="red"><b>showcancelled</b></font> <a href="#list_of_path_outputs">list_of_path_outputs</a> <font color="red"><b>;</b></font> | <font color="red"><b>noshowcancelled</b></font> <a href="#list_of_path_outputs">list_of_path_outputs</a> <font color="red"><b>;</b></font></pre>
<a name="Specify path declarations">
  <h3>7.2 Specify path declarations
  </h3>
</a>
<pre><a name="path_declaration">path_declaration</a> ::=
      <a href="#simple_path_declaration">simple_path_declaration</a> <font color="red"><b>;</b></font>
    | <a href="#edge_sensitive_path_declaration">edge_sensitive_path_declaration</a> <font color="red"><b>;</b></font>
    | <a href="#state_dependent_path_declaration">state_dependent_path_declaration</a> <font color="red"><b>;</b></font>

<a name="simple_path_declaration">simple_path_declaration</a> ::=
      <a href="#parallel_path_description">parallel_path_description</a> <font color="red"><b>=</b></font> <a href="#path_delay_value">path_delay_value</a> | <a href="#full_path_description">full_path_description</a> <font color="red"><b>=</b></font> <a href="#path_delay_value">path_delay_value</a>

<a name="parallel_path_description">parallel_path_description</a> ::=
      <font color="red"><b>(</b></font> <a href="#specify_input_terminal_descriptor">specify_input_terminal_descriptor</a> [ <a href="#polarity_operator">polarity_operator</a> ] <font color="red"><b>=&gt;</b></font>
      <a href="#specify_output_terminal_descriptor">specify_output_terminal_descriptor</a> <font color="red"><b>)</b></font>

<a name="full_path_description">full_path_description</a> ::=
      <font color="red"><b>(</b></font> <a href="#list_of_path_inputs">list_of_path_inputs</a> [ <a href="#polarity_operator">polarity_operator</a> ] <font color="red"><b>*&gt;</b></font> <a href="#list_of_path_outputs">list_of_path_outputs</a> <font color="red"><b>)</b></font>

<a name="list_of_path_inputs">list_of_path_inputs</a> ::=
      <a href="#specify_input_terminal_descriptor">specify_input_terminal_descriptor</a> { <font color="red"><b>,</b></font> <a href="#specify_input_terminal_descriptor">specify_input_terminal_descriptor</a> }

<a name="list_of_path_outputs">list_of_path_outputs</a> ::=
      <a href="#specify_output_terminal_descriptor">specify_output_terminal_descriptor</a> { <font color="red"><b>,</b></font> <a href="#specify_output_terminal_descriptor">specify_output_terminal_descriptor</a> }</pre>
<a name="Specify block terminals">
  <h3>7.3 Specify block terminals
  </h3>
</a>
<pre><a name="specify_input_terminal_descriptor">specify_input_terminal_descriptor</a> ::=
      <a href="#input_identifier">input_identifier</a> [ <font color="red"><b>[</b></font> <a href="#constant_range_expression">constant_range_expression</a> <font color="red"><b>]</b></font> ]

<a name="specify_output_terminal_descriptor">specify_output_terminal_descriptor</a> ::=
      <a href="#output_identifier">output_identifier</a> [ <font color="red"><b>[</b></font> <a href="#constant_range_expression">constant_range_expression</a> <font color="red"><b>]</b></font> ]

<a name="input_identifier">input_identifier</a> ::=
      <a href="#input_port_identifier">input_port_identifier</a> | <a href="#inout_port_identifier">inout_port_identifier</a> | <a href="#interface_identifier">interface_identifier</a> <font color="red"><b>.</b></font> <a href="#port_identifier">port_identifier</a>

<a name="output_identifier">output_identifier</a> ::=
      <a href="#output_port_identifier">output_port_identifier</a> | <a href="#inout_port_identifier">inout_port_identifier</a> | <a href="#interface_identifier">interface_identifier</a> <font color="red"><b>.</b></font> <a href="#port_identifier">port_identifier</a></pre>
<a name="Specify path delays">
  <h3>7.4 Specify path delays
  </h3>
</a>
<pre><a name="path_delay_value">path_delay_value</a> ::=
      <a href="#list_of_path_delay_expressions">list_of_path_delay_expressions</a> | <font color="red"><b>(</b></font> <a href="#list_of_path_delay_expressions">list_of_path_delay_expressions</a> <font color="red"><b>)</b></font>

<a name="list_of_path_delay_expressions">list_of_path_delay_expressions</a> ::=
      <a href="#t_path_delay_expression">t_path_delay_expression</a>
    | <a href="#trise_path_delay_expression">trise_path_delay_expression</a> <font color="red"><b>,</b></font> <a href="#tfall_path_delay_expression">tfall_path_delay_expression</a>
    | <a href="#trise_path_delay_expression">trise_path_delay_expression</a> <font color="red"><b>,</b></font> <a href="#tfall_path_delay_expression">tfall_path_delay_expression</a> <font color="red"><b>,</b></font> <a href="#tz_path_delay_expression">tz_path_delay_expression</a>
    | <a href="#t01_path_delay_expression">t01_path_delay_expression</a> <font color="red"><b>,</b></font> <a href="#t10_path_delay_expression">t10_path_delay_expression</a> <font color="red"><b>,</b></font> <a href="#t0z_path_delay_expression">t0z_path_delay_expression</a> <font color="red"><b>,</b></font>
      <a href="#tz1_path_delay_expression">tz1_path_delay_expression</a> <font color="red"><b>,</b></font> <a href="#t1z_path_delay_expression">t1z_path_delay_expression</a> <font color="red"><b>,</b></font> <a href="#tz0_path_delay_expression">tz0_path_delay_expression</a>
    | <a href="#t01_path_delay_expression">t01_path_delay_expression</a> <font color="red"><b>,</b></font> <a href="#t10_path_delay_expression">t10_path_delay_expression</a> <font color="red"><b>,</b></font> <a href="#t0z_path_delay_expression">t0z_path_delay_expression</a> <font color="red"><b>,</b></font>
      <a href="#tz1_path_delay_expression">tz1_path_delay_expression</a> <font color="red"><b>,</b></font> <a href="#t1z_path_delay_expression">t1z_path_delay_expression</a> <font color="red"><b>,</b></font> <a href="#tz0_path_delay_expression">tz0_path_delay_expression</a> <font color="red"><b>,</b></font>
      <a href="#t0x_path_delay_expression">t0x_path_delay_expression</a> <font color="red"><b>,</b></font> <a href="#tx1_path_delay_expression">tx1_path_delay_expression</a> <font color="red"><b>,</b></font> <a href="#t1x_path_delay_expression">t1x_path_delay_expression</a> <font color="red"><b>,</b></font>
      <a href="#tx0_path_delay_expression">tx0_path_delay_expression</a> <font color="red"><b>,</b></font> <a href="#txz_path_delay_expression">txz_path_delay_expression</a> <font color="red"><b>,</b></font> <a href="#tzx_path_delay_expression">tzx_path_delay_expression</a>

<a name="t_path_delay_expression">t_path_delay_expression</a> ::=
      <a href="#path_delay_expression">path_delay_expression</a>

<a name="trise_path_delay_expression">trise_path_delay_expression</a> ::=
      <a href="#path_delay_expression">path_delay_expression</a>

<a name="tfall_path_delay_expression">tfall_path_delay_expression</a> ::=
      <a href="#path_delay_expression">path_delay_expression</a>

<a name="tz_path_delay_expression">tz_path_delay_expression</a> ::=
      <a href="#path_delay_expression">path_delay_expression</a>

<a name="t01_path_delay_expression">t01_path_delay_expression</a> ::=
      <a href="#path_delay_expression">path_delay_expression</a>

<a name="t10_path_delay_expression">t10_path_delay_expression</a> ::=
      <a href="#path_delay_expression">path_delay_expression</a>

<a name="t0z_path_delay_expression">t0z_path_delay_expression</a> ::=
      <a href="#path_delay_expression">path_delay_expression</a>

<a name="tz1_path_delay_expression">tz1_path_delay_expression</a> ::=
      <a href="#path_delay_expression">path_delay_expression</a>

<a name="t1z_path_delay_expression">t1z_path_delay_expression</a> ::=
      <a href="#path_delay_expression">path_delay_expression</a>

<a name="tz0_path_delay_expression">tz0_path_delay_expression</a> ::=
      <a href="#path_delay_expression">path_delay_expression</a>

<a name="t0x_path_delay_expression">t0x_path_delay_expression</a> ::=
      <a href="#path_delay_expression">path_delay_expression</a>

<a name="tx1_path_delay_expression">tx1_path_delay_expression</a> ::=
      <a href="#path_delay_expression">path_delay_expression</a>

<a name="t1x_path_delay_expression">t1x_path_delay_expression</a> ::=
      <a href="#path_delay_expression">path_delay_expression</a>

<a name="tx0_path_delay_expression">tx0_path_delay_expression</a> ::=
      <a href="#path_delay_expression">path_delay_expression</a>

<a name="txz_path_delay_expression">txz_path_delay_expression</a> ::=
      <a href="#path_delay_expression">path_delay_expression</a>

<a name="tzx_path_delay_expression">tzx_path_delay_expression</a> ::=
      <a href="#path_delay_expression">path_delay_expression</a>

<a name="path_delay_expression">path_delay_expression</a> ::=
      <a href="#constant_mintypmax_expression">constant_mintypmax_expression</a>

<a name="edge_sensitive_path_declaration">edge_sensitive_path_declaration</a> ::=
      <a href="#parallel_edge_sensitive_path_description">parallel_edge_sensitive_path_description</a> <font color="red"><b>=</b></font> <a href="#path_delay_value">path_delay_value</a>
    | <a href="#full_edge_sensitive_path_description">full_edge_sensitive_path_description</a> <font color="red"><b>=</b></font> <a href="#path_delay_value">path_delay_value</a>

<a name="parallel_edge_sensitive_path_description">parallel_edge_sensitive_path_description</a> ::=
      <font color="red"><b>(</b></font> [ <a href="#edge_identifier">edge_identifier</a> ] <a href="#specify_input_terminal_descriptor">specify_input_terminal_descriptor</a> [ <a href="#polarity_operator">polarity_operator</a> ] <font color="red"><b>=&gt;</b></font> <font color="red"><b>(</b></font>
      <a href="#specify_output_terminal_descriptor">specify_output_terminal_descriptor</a> [ <a href="#polarity_operator">polarity_operator</a> ] <font color="red"><b>:</b></font> <a href="#data_source_expression">data_source_expression</a> <font color="red"><b>)</b></font> <font color="red"><b>)</b></font>

<a name="full_edge_sensitive_path_description">full_edge_sensitive_path_description</a> ::=
      <font color="red"><b>(</b></font> [ <a href="#edge_identifier">edge_identifier</a> ] <a href="#list_of_path_inputs">list_of_path_inputs</a> [ <a href="#polarity_operator">polarity_operator</a> ] <font color="red"><b>*&gt;</b></font> <font color="red"><b>(</b></font> <a href="#list_of_path_outputs">list_of_path_outputs</a>
      [ <a href="#polarity_operator">polarity_operator</a> ] <font color="red"><b>:</b></font> <a href="#data_source_expression">data_source_expression</a> <font color="red"><b>)</b></font> <font color="red"><b>)</b></font>

<a name="data_source_expression">data_source_expression</a> ::=
      <a href="#expression">expression</a>

<a name="edge_identifier">edge_identifier</a> ::=
      <font color="red"><b>posedge</b></font> | <font color="red"><b>negedge</b></font> | <font color="red"><b>edge</b></font>

<a name="state_dependent_path_declaration">state_dependent_path_declaration</a> ::=
      <font color="red"><b>if</b></font> <font color="red"><b>(</b></font> <a href="#module_path_expression">module_path_expression</a> <font color="red"><b>)</b></font> <a href="#simple_path_declaration">simple_path_declaration</a>
    | <font color="red"><b>if</b></font> <font color="red"><b>(</b></font> <a href="#module_path_expression">module_path_expression</a> <font color="red"><b>)</b></font> <a href="#edge_sensitive_path_declaration">edge_sensitive_path_declaration</a>
    | <font color="red"><b>ifnone</b></font> <a href="#simple_path_declaration">simple_path_declaration</a>

<a name="polarity_operator">polarity_operator</a> ::=
      <font color="red"><b>+</b></font> | <font color="red"><b>-</b></font></pre>
<a name="System timing checks">
  <h3>7.5 System timing checks
  </h3>
</a>
<a name="System timing check commands">
  <h3>7.5.1 System timing check commands
  </h3>
</a>
<pre><a name="system_timing_check">system_timing_check</a> ::=
      <a href="#setup_timing_check">setup_timing_check</a>
    | <a href="#hold_timing_check">hold_timing_check</a>
    | <a href="#setuphold_timing_check">setuphold_timing_check</a>
    | <a href="#recovery_timing_check">recovery_timing_check</a>
    | <a href="#removal_timing_check">removal_timing_check</a>
    | <a href="#recrem_timing_check">recrem_timing_check</a>
    | <a href="#skew_timing_check">skew_timing_check</a>
    | <a href="#timeskew_timing_check">timeskew_timing_check</a>
    | <a href="#fullskew_timing_check">fullskew_timing_check</a>
    | <a href="#period_timing_check">period_timing_check</a>
    | <a href="#width_timing_check">width_timing_check</a>
    | <a href="#nochange_timing_check">nochange_timing_check</a>

<a name="setup_timing_check">setup_timing_check</a> ::=
      <font color="red"><b>$setup</b></font> <font color="red"><b>(</b></font> <a href="#data_event">data_event</a> <font color="red"><b>,</b></font> <a href="#reference_event">reference_event</a> <font color="red"><b>,</b></font> <a href="#timing_check_limit">timing_check_limit</a> [ <font color="red"><b>,</b></font> [ <a href="#notifier">notifier</a> ] ] <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>

<a name="hold_timing_check">hold_timing_check</a> ::=
      <font color="red"><b>$hold</b></font> <font color="red"><b>(</b></font> <a href="#reference_event">reference_event</a> <font color="red"><b>,</b></font> <a href="#data_event">data_event</a> <font color="red"><b>,</b></font> <a href="#timing_check_limit">timing_check_limit</a> [ <font color="red"><b>,</b></font> [ <a href="#notifier">notifier</a> ] ] <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>

<a name="setuphold_timing_check">setuphold_timing_check</a> ::=
      <font color="red"><b>$setuphold</b></font> <font color="red"><b>(</b></font> <a href="#reference_event">reference_event</a> <font color="red"><b>,</b></font> <a href="#data_event">data_event</a> <font color="red"><b>,</b></font> <a href="#timing_check_limit">timing_check_limit</a> <font color="red"><b>,</b></font> <a href="#timing_check_limit">timing_check_limit</a>
      [ <font color="red"><b>,</b></font> [ <a href="#notifier">notifier</a> ]
        [ <font color="red"><b>,</b></font> [ <a href="#timestamp_condition">timestamp_condition</a> ]
          [ <font color="red"><b>,</b></font> [ <a href="#timecheck_condition">timecheck_condition</a> ] [ <font color="red"><b>,</b></font> [ <a href="#delayed_reference">delayed_reference</a> ] [ <font color="red"><b>,</b></font> [ <a href="#delayed_data">delayed_data</a> ] ] ] ] ] ]
      <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>

<a name="recovery_timing_check">recovery_timing_check</a> ::=
      <font color="red"><b>$recovery</b></font> <font color="red"><b>(</b></font> <a href="#reference_event">reference_event</a> <font color="red"><b>,</b></font> <a href="#data_event">data_event</a> <font color="red"><b>,</b></font> <a href="#timing_check_limit">timing_check_limit</a> [ <font color="red"><b>,</b></font> [ <a href="#notifier">notifier</a> ] ] <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>

<a name="removal_timing_check">removal_timing_check</a> ::=
      <font color="red"><b>$removal</b></font> <font color="red"><b>(</b></font> <a href="#reference_event">reference_event</a> <font color="red"><b>,</b></font> <a href="#data_event">data_event</a> <font color="red"><b>,</b></font> <a href="#timing_check_limit">timing_check_limit</a> [ <font color="red"><b>,</b></font> [ <a href="#notifier">notifier</a> ] ] <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>

<a name="recrem_timing_check">recrem_timing_check</a> ::=
      <font color="red"><b>$recrem</b></font> <font color="red"><b>(</b></font> <a href="#reference_event">reference_event</a> <font color="red"><b>,</b></font> <a href="#data_event">data_event</a> <font color="red"><b>,</b></font> <a href="#timing_check_limit">timing_check_limit</a> <font color="red"><b>,</b></font> <a href="#timing_check_limit">timing_check_limit</a>
      [ <font color="red"><b>,</b></font> [ <a href="#notifier">notifier</a> ]
        [ <font color="red"><b>,</b></font> [ <a href="#timestamp_condition">timestamp_condition</a> ]
          [ <font color="red"><b>,</b></font> [ <a href="#timecheck_condition">timecheck_condition</a> ] [ <font color="red"><b>,</b></font> [ <a href="#delayed_reference">delayed_reference</a> ] [ <font color="red"><b>,</b></font> [ <a href="#delayed_data">delayed_data</a> ] ] ] ] ] ]
      <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>

<a name="skew_timing_check">skew_timing_check</a> ::=
      <font color="red"><b>$skew</b></font> <font color="red"><b>(</b></font> <a href="#reference_event">reference_event</a> <font color="red"><b>,</b></font> <a href="#data_event">data_event</a> <font color="red"><b>,</b></font> <a href="#timing_check_limit">timing_check_limit</a> [ <font color="red"><b>,</b></font> [ <a href="#notifier">notifier</a> ] ] <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>

<a name="timeskew_timing_check">timeskew_timing_check</a> ::=
      <font color="red"><b>$timeskew</b></font> <font color="red"><b>(</b></font> <a href="#reference_event">reference_event</a> <font color="red"><b>,</b></font> <a href="#data_event">data_event</a> <font color="red"><b>,</b></font> <a href="#timing_check_limit">timing_check_limit</a>
      [ <font color="red"><b>,</b></font> [ <a href="#notifier">notifier</a> ] [ <font color="red"><b>,</b></font> [ <a href="#event_based_flag">event_based_flag</a> ] [ <font color="red"><b>,</b></font> [ <a href="#remain_active_flag">remain_active_flag</a> ] ] ] ] <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>

<a name="fullskew_timing_check">fullskew_timing_check</a> ::=
      <font color="red"><b>$fullskew</b></font> <font color="red"><b>(</b></font> <a href="#reference_event">reference_event</a> <font color="red"><b>,</b></font> <a href="#data_event">data_event</a> <font color="red"><b>,</b></font> <a href="#timing_check_limit">timing_check_limit</a> <font color="red"><b>,</b></font> <a href="#timing_check_limit">timing_check_limit</a>
      [ <font color="red"><b>,</b></font> [ <a href="#notifier">notifier</a> ] [ <font color="red"><b>,</b></font> [ <a href="#event_based_flag">event_based_flag</a> ] [ <font color="red"><b>,</b></font> [ <a href="#remain_active_flag">remain_active_flag</a> ] ] ] ] <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>

<a name="period_timing_check">period_timing_check</a> ::=
      <font color="red"><b>$period</b></font> <font color="red"><b>(</b></font> <a href="#controlled_reference_event">controlled_reference_event</a> <font color="red"><b>,</b></font> <a href="#timing_check_limit">timing_check_limit</a> [ <font color="red"><b>,</b></font> [ <a href="#notifier">notifier</a> ] ] <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>

<a name="width_timing_check">width_timing_check</a> ::=
      <font color="red"><b>$width</b></font> <font color="red"><b>(</b></font> <a href="#controlled_reference_event">controlled_reference_event</a> <font color="red"><b>,</b></font> <a href="#timing_check_limit">timing_check_limit</a> <font color="red"><b>,</b></font> <a href="#threshold">threshold</a> [ <font color="red"><b>,</b></font> [ <a href="#notifier">notifier</a> ] ] <font color="red"><b>)</b></font> <font color="red"><b>;</b></font>

<a name="nochange_timing_check">nochange_timing_check</a> ::=
      <font color="red"><b>$nochange</b></font> <font color="red"><b>(</b></font> <a href="#reference_event">reference_event</a> <font color="red"><b>,</b></font> <a href="#data_event">data_event</a> <font color="red"><b>,</b></font> <a href="#start_edge_offset">start_edge_offset</a> <font color="red"><b>,</b></font> <a href="#end_edge_offset">end_edge_offset</a>
      [ <font color="red"><b>,</b></font> [ <a href="#notifier">notifier</a> ] ] <font color="red"><b>)</b></font> <font color="red"><b>;</b></font></pre>
<a name="System timing check command arguments">
  <h3>7.5.2 System timing check command arguments
  </h3>
</a>
<pre><a name="timecheck_condition">timecheck_condition</a> ::=
      <a href="#mintypmax_expression">mintypmax_expression</a>

<a name="controlled_reference_event">controlled_reference_event</a> ::=
      <a href="#controlled_timing_check_event">controlled_timing_check_event</a>

<a name="data_event">data_event</a> ::=
      <a href="#timing_check_event">timing_check_event</a>

<a name="delayed_data">delayed_data</a> ::=
      <a href="#terminal_identifier">terminal_identifier</a> | <a href="#terminal_identifier">terminal_identifier</a> <font color="red"><b>[</b></font> <a href="#constant_mintypmax_expression">constant_mintypmax_expression</a> <font color="red"><b>]</b></font>

<a name="delayed_reference">delayed_reference</a> ::=
      <a href="#terminal_identifier">terminal_identifier</a> | <a href="#terminal_identifier">terminal_identifier</a> <font color="red"><b>[</b></font> <a href="#constant_mintypmax_expression">constant_mintypmax_expression</a> <font color="red"><b>]</b></font>

<a name="end_edge_offset">end_edge_offset</a> ::=
      <a href="#mintypmax_expression">mintypmax_expression</a>

<a name="event_based_flag">event_based_flag</a> ::=
      <a href="#constant_expression">constant_expression</a>

<a name="notifier">notifier</a> ::=
      <a href="#variable_identifier">variable_identifier</a>

<a name="reference_event">reference_event</a> ::=
      <a href="#timing_check_event">timing_check_event</a>

<a name="remain_active_flag">remain_active_flag</a> ::=
      <a href="#constant_mintypmax_expression">constant_mintypmax_expression</a>

<a name="timestamp_condition">timestamp_condition</a> ::=
      <a href="#mintypmax_expression">mintypmax_expression</a>

<a name="start_edge_offset">start_edge_offset</a> ::=
      <a href="#mintypmax_expression">mintypmax_expression</a>

<a name="threshold">threshold</a> ::=
      <a href="#constant_expression">constant_expression</a>

<a name="timing_check_limit">timing_check_limit</a> ::=
      <a href="#expression">expression</a></pre>
<a name="System timing check event definitions">
  <h3>7.5.3 System timing check event definitions
  </h3>
</a>
<pre><a name="timing_check_event">timing_check_event</a> ::=
      [ <a href="#timing_check_event_control">timing_check_event_control</a> ] <a href="#specify_terminal_descriptor">specify_terminal_descriptor</a> [ <font color="red"><b>&amp;&amp;&amp;</b></font> <a href="#timing_check_condition">timing_check_condition</a> ]

<a name="controlled_timing_check_event">controlled_timing_check_event</a> ::=
      <a href="#timing_check_event_control">timing_check_event_control</a> <a href="#specify_terminal_descriptor">specify_terminal_descriptor</a> [ <font color="red"><b>&amp;&amp;&amp;</b></font> <a href="#timing_check_condition">timing_check_condition</a> ]

<a name="timing_check_event_control">timing_check_event_control</a> ::=
      <font color="red"><b>posedge</b></font> | <font color="red"><b>negedge</b></font> | <font color="red"><b>edge</b></font> | <a href="#edge_control_specifier">edge_control_specifier</a>

<a name="specify_terminal_descriptor">specify_terminal_descriptor</a> ::=
      <a href="#specify_input_terminal_descriptor">specify_input_terminal_descriptor</a> | <a href="#specify_output_terminal_descriptor">specify_output_terminal_descriptor</a>

<a name="edge_control_specifier">edge_control_specifier</a> ::=
      <font color="red"><b>edge</b></font> <font color="red"><b>[</b></font> <a href="#edge_descriptor">edge_descriptor</a> { <font color="red"><b>,</b></font> <a href="#edge_descriptor">edge_descriptor</a> } <font color="red"><b>]</b></font>

<a name="edge_descriptor">edge_descriptor</a> ::=!
      <font color="red"><b>01</b></font> | <font color="red"><b>10</b></font> | <a href="#z_or_x">z_or_x</a> <a href="#zero_or_one">zero_or_one</a> | <a href="#zero_or_one">zero_or_one</a> <a href="#z_or_x">z_or_x</a>

<a name="zero_or_one">zero_or_one</a> ::=
      <font color="red"><b>0</b></font> | <font color="red"><b>1</b></font>

<a name="z_or_x">z_or_x</a> ::=
      <font color="red"><b>x</b></font> | <font color="red"><b>X</b></font> | <font color="red"><b>z</b></font> | <font color="red"><b>Z</b></font>

<a name="timing_check_condition">timing_check_condition</a> ::=
      <a href="#scalar_timing_check_condition">scalar_timing_check_condition</a> | <font color="red"><b>(</b></font> <a href="#scalar_timing_check_condition">scalar_timing_check_condition</a> <font color="red"><b>)</b></font>

<a name="scalar_timing_check_condition">scalar_timing_check_condition</a> ::=
      <a href="#expression">expression</a>
    | <font color="red"><b>~</b></font> <a href="#expression">expression</a>
    | <a href="#expression">expression</a> <font color="red"><b>==</b></font> <a href="#scalar_constant">scalar_constant</a>
    | <a href="#expression">expression</a> <font color="red"><b>===</b></font> <a href="#scalar_constant">scalar_constant</a>
    | <a href="#expression">expression</a> <font color="red"><b>!=</b></font> <a href="#scalar_constant">scalar_constant</a>
    | <a href="#expression">expression</a> <font color="red"><b>!==</b></font> <a href="#scalar_constant">scalar_constant</a>

<a name="scalar_constant">scalar_constant</a> ::=
      <font color="red"><b>1'b0</b></font> | <font color="red"><b>1'b1</b></font> | <font color="red"><b>1'B0</b></font> | <font color="red"><b>1'B1</b></font> | <font color="red"><b>'b0</b></font> | <font color="red"><b>'b1</b></font> | <font color="red"><b>'B0</b></font> | <font color="red"><b>'B1</b></font> | <font color="red"><b>1</b></font> | <font color="red"><b>0</b></font></pre>
<a name="Expressions">
  <h3>8 Expressions
  </h3>
</a>
<a name="Concatenations">
  <h3>8.1 Concatenations
  </h3>
</a>
<pre><a name="concatenation">concatenation</a> ::=
      <font color="red"><b>{</b></font> <a href="#expression">expression</a> { <font color="red"><b>,</b></font> <a href="#expression">expression</a> } <font color="red"><b>}</b></font>

<a name="constant_concatenation">constant_concatenation</a> ::=
      <font color="red"><b>{</b></font> <a href="#constant_expression">constant_expression</a> { <font color="red"><b>,</b></font> <a href="#constant_expression">constant_expression</a> } <font color="red"><b>}</b></font>

<a name="constant_multiple_concatenation">constant_multiple_concatenation</a> ::=
      <font color="red"><b>{</b></font> <a href="#constant_expression">constant_expression</a> <a href="#constant_concatenation">constant_concatenation</a> <font color="red"><b>}</b></font>

<a name="module_path_concatenation">module_path_concatenation</a> ::=
      <font color="red"><b>{</b></font> <a href="#module_path_expression">module_path_expression</a> { <font color="red"><b>,</b></font> <a href="#module_path_expression">module_path_expression</a> } <font color="red"><b>}</b></font>

<a name="module_path_multiple_concatenation">module_path_multiple_concatenation</a> ::=
      <font color="red"><b>{</b></font> <a href="#constant_expression">constant_expression</a> <a href="#module_path_concatenation">module_path_concatenation</a> <font color="red"><b>}</b></font>

<a name="multiple_concatenation">multiple_concatenation</a> ::=
      <font color="red"><b>{</b></font> <a href="#expression">expression</a> <a href="#concatenation">concatenation</a> <font color="red"><b>}</b></font>

<a name="streaming_concatenation">streaming_concatenation</a> ::=
      <font color="red"><b>{</b></font> <a href="#stream_operator">stream_operator</a> [ <a href="#slice_size">slice_size</a> ] <a href="#stream_concatenation">stream_concatenation</a> <font color="red"><b>}</b></font>

<a name="stream_operator">stream_operator</a> ::=
      <font color="red"><b>&gt;&gt;</b></font> | <font color="red"><b>&lt;&lt;</b></font>

<a name="slice_size">slice_size</a> ::=
      <a href="#simple_type">simple_type</a> | <a href="#constant_expression">constant_expression</a>

<a name="stream_concatenation">stream_concatenation</a> ::=
      <font color="red"><b>{</b></font> <a href="#stream_expression">stream_expression</a> { <font color="red"><b>,</b></font> <a href="#stream_expression">stream_expression</a> } <font color="red"><b>}</b></font>

<a name="stream_expression">stream_expression</a> ::=
      <a href="#expression">expression</a> [ <font color="red"><b>with</b></font> <font color="red"><b>[</b></font> <a href="#array_range_expression">array_range_expression</a> <font color="red"><b>]</b></font> ]

<a name="array_range_expression">array_range_expression</a> ::=
      <a href="#expression">expression</a> | <a href="#expression">expression</a> <font color="red"><b>:</b></font> <a href="#expression">expression</a> | <a href="#expression">expression</a> <font color="red"><b>+:</b></font> <a href="#expression">expression</a> | <a href="#expression">expression</a> <font color="red"><b>-:</b></font> <a href="#expression">expression</a>

<a name="empty_queue">empty_queue</a> ::=
      <font color="red"><b>{</b></font> <font color="red"><b>}</b></font></pre>
<a name="Subroutine calls">
  <h3>8.2 Subroutine calls
  </h3>
</a>
<pre><a name="constant_function_call">constant_function_call</a> ::=
      <a href="#function_subroutine_call">function_subroutine_call</a>

<a name="tf_call">tf_call</a> ::=
      <a href="#ps_or_hierarchical_tf_identifier">ps_or_hierarchical_tf_identifier</a> { <a href="#attribute_instance">attribute_instance</a> } [ <font color="red"><b>(</b></font> <a href="#list_of_arguments">list_of_arguments</a> <font color="red"><b>)</b></font> ]

<a name="system_tf_call">system_tf_call</a> ::=
      <a href="#system_tf_identifier">system_tf_identifier</a> [ <font color="red"><b>(</b></font> <a href="#list_of_arguments">list_of_arguments</a> <font color="red"><b>)</b></font> ]
    | <a href="#system_tf_identifier">system_tf_identifier</a> <font color="red"><b>(</b></font> <a href="#data_type">data_type</a> [ <font color="red"><b>,</b></font> <a href="#expression">expression</a> ] <font color="red"><b>)</b></font>

<a name="subroutine_call">subroutine_call</a> ::=
      <a href="#tf_call">tf_call</a> | <a href="#system_tf_call">system_tf_call</a> | <a href="#method_call">method_call</a> | [ <font color="red"><b>std::</b></font> ] <a href="#randomize_call">randomize_call</a>

<a name="function_subroutine_call">function_subroutine_call</a> ::=
      <a href="#subroutine_call">subroutine_call</a>

<a name="list_of_arguments">list_of_arguments</a> ::=
      [ <a href="#expression">expression</a> ] { <font color="red"><b>,</b></font> [ <a href="#expression">expression</a> ] } { <font color="red"><b>,</b></font> <font color="red"><b>.</b></font> <a href="#identifier">identifier</a> <font color="red"><b>(</b></font> [ <a href="#expression">expression</a> ] <font color="red"><b>)</b></font> }
    | <font color="red"><b>.</b></font> <a href="#identifier">identifier</a> <font color="red"><b>(</b></font> [ <a href="#expression">expression</a> ] <font color="red"><b>)</b></font> { <font color="red"><b>,</b></font> <font color="red"><b>.</b></font> <a href="#identifier">identifier</a> <font color="red"><b>(</b></font> [ <a href="#expression">expression</a> ] <font color="red"><b>)</b></font> }

<a name="method_call">method_call</a> ::=
      <a href="#method_call_root">method_call_root</a> <font color="red"><b>.</b></font> <a href="#method_call_body">method_call_body</a>

<a name="method_call_body">method_call_body</a> ::=
      <a href="#method_identifier">method_identifier</a> { <a href="#attribute_instance">attribute_instance</a> } [ <font color="red"><b>(</b></font> <a href="#list_of_arguments">list_of_arguments</a> <font color="red"><b>)</b></font> ] | <a href="#built_in_method_call">built_in_method_call</a>

<a name="built_in_method_call">built_in_method_call</a> ::=
      <a href="#array_manipulation_call">array_manipulation_call</a> | <a href="#randomize_call">randomize_call</a>

<a name="array_manipulation_call">array_manipulation_call</a> ::=
      <a href="#array_method_name">array_method_name</a> { <a href="#attribute_instance">attribute_instance</a> } [ <font color="red"><b>(</b></font> <a href="#list_of_arguments">list_of_arguments</a> <font color="red"><b>)</b></font> ] [ <font color="red"><b>with</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font> ]

<a name="randomize_call">randomize_call</a> ::=
      <font color="red"><b>randomize</b></font> { <a href="#attribute_instance">attribute_instance</a> } [ <font color="red"><b>(</b></font> [ <a href="#variable_identifier_list">variable_identifier_list</a> | <font color="red"><b>null</b></font> ] <font color="red"><b>)</b></font> ]
      [ <font color="red"><b>with</b></font> [ <font color="red"><b>(</b></font> [ <a href="#identifier_list">identifier_list</a> ] <font color="red"><b>)</b></font> ] <a href="#constraint_block">constraint_block</a> ]

<a name="method_call_root">method_call_root</a> ::=
      <a href="#primary">primary</a> | <a href="#implicit_class_handle">implicit_class_handle</a>

<a name="array_method_name">array_method_name</a> ::=
      <a href="#method_identifier">method_identifier</a> | <font color="red"><b>unique</b></font> | <font color="red"><b>and</b></font> | <font color="red"><b>or</b></font> | <font color="red"><b>xor</b></font></pre>
<a name="Expressions">
  <h3>8.3 Expressions
  </h3>
</a>
<pre><a name="inc_or_dec_expression">inc_or_dec_expression</a> ::=
      <a href="#inc_or_dec_operator">inc_or_dec_operator</a> { <a href="#attribute_instance">attribute_instance</a> } <a href="#variable_lvalue">variable_lvalue</a>
    | <a href="#variable_lvalue">variable_lvalue</a> { <a href="#attribute_instance">attribute_instance</a> } <a href="#inc_or_dec_operator">inc_or_dec_operator</a>

<a name="conditional_expression">conditional_expression</a> ::=
      <a href="#cond_predicate">cond_predicate</a> <font color="red"><b>?</b></font> { <a href="#attribute_instance">attribute_instance</a> } <a href="#expression">expression</a> <font color="red"><b>:</b></font> <a href="#expression">expression</a>

<a name="constant_expression">constant_expression</a> ::=
      <a href="#constant_primary">constant_primary</a>
    | <a href="#unary_operator">unary_operator</a> { <a href="#attribute_instance">attribute_instance</a> } <a href="#constant_primary">constant_primary</a>
    | <a href="#constant_expression">constant_expression</a> <a href="#binary_operator">binary_operator</a> { <a href="#attribute_instance">attribute_instance</a> } <a href="#constant_expression">constant_expression</a>
    | <a href="#constant_expression">constant_expression</a> <font color="red"><b>?</b></font> { <a href="#attribute_instance">attribute_instance</a> } <a href="#constant_expression">constant_expression</a> <font color="red"><b>:</b></font> <a href="#constant_expression">constant_expression</a>

<a name="constant_mintypmax_expression">constant_mintypmax_expression</a> ::=
      <a href="#constant_expression">constant_expression</a> | <a href="#constant_expression">constant_expression</a> <font color="red"><b>:</b></font> <a href="#constant_expression">constant_expression</a> <font color="red"><b>:</b></font> <a href="#constant_expression">constant_expression</a>

<a name="constant_param_expression">constant_param_expression</a> ::=
      <a href="#constant_mintypmax_expression">constant_mintypmax_expression</a> | <a href="#data_type">data_type</a> | <font color="red"><b>$</b></font>

<a name="param_expression">param_expression</a> ::=
      <a href="#mintypmax_expression">mintypmax_expression</a> | <a href="#data_type">data_type</a> | <font color="red"><b>$</b></font>

<a name="constant_range_expression">constant_range_expression</a> ::=
      <a href="#constant_expression">constant_expression</a> | <a href="#constant_part_select_range">constant_part_select_range</a>

<a name="constant_part_select_range">constant_part_select_range</a> ::=
      <a href="#constant_range">constant_range</a> | <a href="#constant_indexed_range">constant_indexed_range</a>

<a name="constant_range">constant_range</a> ::=
      <a href="#constant_expression">constant_expression</a> <font color="red"><b>:</b></font> <a href="#constant_expression">constant_expression</a>

<a name="constant_indexed_range">constant_indexed_range</a> ::=
      <a href="#constant_expression">constant_expression</a> <font color="red"><b>+:</b></font> <a href="#constant_expression">constant_expression</a> | <a href="#constant_expression">constant_expression</a> <font color="red"><b>-:</b></font> <a href="#constant_expression">constant_expression</a>

<a name="expression">expression</a> ::=
      <a href="#primary">primary</a>
    | <a href="#unary_operator">unary_operator</a> { <a href="#attribute_instance">attribute_instance</a> } <a href="#primary">primary</a>
    | <a href="#inc_or_dec_expression">inc_or_dec_expression</a>
    | <font color="red"><b>(</b></font> <a href="#operator_assignment">operator_assignment</a> <font color="red"><b>)</b></font>
    | <a href="#expression">expression</a> <a href="#binary_operator">binary_operator</a> { <a href="#attribute_instance">attribute_instance</a> } <a href="#expression">expression</a>
    | <a href="#conditional_expression">conditional_expression</a>
    | <a href="#inside_expression">inside_expression</a>
    | <a href="#tagged_union_expression">tagged_union_expression</a>

<a name="tagged_union_expression">tagged_union_expression</a> ::=
      <font color="red"><b>tagged</b></font> <a href="#member_identifier">member_identifier</a> [ <a href="#expression">expression</a> ]

<a name="inside_expression">inside_expression</a> ::=
      <a href="#expression">expression</a> <font color="red"><b>inside</b></font> <font color="red"><b>{</b></font> <a href="#open_range_list">open_range_list</a> <font color="red"><b>}</b></font>

<a name="value_range">value_range</a> ::=
      <a href="#expression">expression</a> | <font color="red"><b>[</b></font> <a href="#expression">expression</a> <font color="red"><b>:</b></font> <a href="#expression">expression</a> <font color="red"><b>]</b></font>

<a name="mintypmax_expression">mintypmax_expression</a> ::=
      <a href="#expression">expression</a> | <a href="#expression">expression</a> <font color="red"><b>:</b></font> <a href="#expression">expression</a> <font color="red"><b>:</b></font> <a href="#expression">expression</a>

<a name="module_path_conditional_expression">module_path_conditional_expression</a> ::=
      <a href="#module_path_expression">module_path_expression</a> <font color="red"><b>?</b></font> { <a href="#attribute_instance">attribute_instance</a> } <a href="#module_path_expression">module_path_expression</a> <font color="red"><b>:</b></font>
      <a href="#module_path_expression">module_path_expression</a>

<a name="module_path_expression">module_path_expression</a> ::=
      <a href="#module_path_primary">module_path_primary</a>
    | <a href="#unary_module_path_operator">unary_module_path_operator</a> { <a href="#attribute_instance">attribute_instance</a> } <a href="#module_path_primary">module_path_primary</a>
    | <a href="#module_path_expression">module_path_expression</a> <a href="#binary_module_path_operator">binary_module_path_operator</a> { <a href="#attribute_instance">attribute_instance</a> }
      <a href="#module_path_expression">module_path_expression</a>
    | <a href="#module_path_conditional_expression">module_path_conditional_expression</a>

<a name="module_path_mintypmax_expression">module_path_mintypmax_expression</a> ::=
      <a href="#module_path_expression">module_path_expression</a>
    | <a href="#module_path_expression">module_path_expression</a> <font color="red"><b>:</b></font> <a href="#module_path_expression">module_path_expression</a> <font color="red"><b>:</b></font> <a href="#module_path_expression">module_path_expression</a>

<a name="part_select_range">part_select_range</a> ::=
      <a href="#constant_range">constant_range</a> | <a href="#indexed_range">indexed_range</a>

<a name="indexed_range">indexed_range</a> ::=
      <a href="#expression">expression</a> <font color="red"><b>+:</b></font> <a href="#constant_expression">constant_expression</a> | <a href="#expression">expression</a> <font color="red"><b>-:</b></font> <a href="#constant_expression">constant_expression</a>

<a name="genvar_expression">genvar_expression</a> ::=
      <a href="#constant_expression">constant_expression</a></pre>
<a name="Primaries">
  <h3>8.4 Primaries
  </h3>
</a>
<pre><a name="constant_primary">constant_primary</a> ::=
      <a href="#primary_literal">primary_literal</a>
    | <a href="#ps_parameter_identifier">ps_parameter_identifier</a> <a href="#constant_select">constant_select</a>
    | <a href="#specparam_identifier">specparam_identifier</a> [ <font color="red"><b>[</b></font> <a href="#constant_range_expression">constant_range_expression</a> <font color="red"><b>]</b></font> ]
    | <a href="#genvar_identifier">genvar_identifier</a>
    | <a href="#formal_port_identifier">formal_port_identifier</a> <a href="#constant_select">constant_select</a>
    | [ <a href="#package_scope">package_scope</a> | <a href="#class_scope">class_scope</a> ] <a href="#enum_identifier">enum_identifier</a>
    | <a href="#constant_concatenation">constant_concatenation</a> [ <font color="red"><b>[</b></font> <a href="#constant_range_expression">constant_range_expression</a> <font color="red"><b>]</b></font> ]
    | <a href="#constant_multiple_concatenation">constant_multiple_concatenation</a> [ <font color="red"><b>[</b></font> <a href="#constant_range_expression">constant_range_expression</a> <font color="red"><b>]</b></font> ]
    | <a href="#constant_function_call">constant_function_call</a>
    | <a href="#constant_let_expression">constant_let_expression</a>
    | <font color="red"><b>(</b></font> <a href="#constant_mintypmax_expression">constant_mintypmax_expression</a> <font color="red"><b>)</b></font>
    | <a href="#constant_cast">constant_cast</a>
    | <a href="#constant_assignment_pattern_expression">constant_assignment_pattern_expression</a>
    | <a href="#type_reference">type_reference</a>

<a name="module_path_primary">module_path_primary</a> ::=
      <a href="#number">number</a>
    | <a href="#identifier">identifier</a>
    | <a href="#module_path_concatenation">module_path_concatenation</a>
    | <a href="#module_path_multiple_concatenation">module_path_multiple_concatenation</a>
    | <a href="#function_subroutine_call">function_subroutine_call</a>
    | <font color="red"><b>(</b></font> <a href="#module_path_mintypmax_expression">module_path_mintypmax_expression</a> <font color="red"><b>)</b></font>

<a name="primary">primary</a> ::=
      <a href="#primary_literal">primary_literal</a>
    | [ <a href="#class_qualifier">class_qualifier</a> | <a href="#package_scope">package_scope</a> ] <a href="#hierarchical_identifier">hierarchical_identifier</a> <a href="#select">select</a>
    | <a href="#empty_queue">empty_queue</a>
    | <a href="#concatenation">concatenation</a> [ <font color="red"><b>[</b></font> <a href="#range_expression">range_expression</a> <font color="red"><b>]</b></font> ]
    | <a href="#multiple_concatenation">multiple_concatenation</a> [ <font color="red"><b>[</b></font> <a href="#range_expression">range_expression</a> <font color="red"><b>]</b></font> ]
    | <a href="#function_subroutine_call">function_subroutine_call</a>
    | <a href="#let_expression">let_expression</a>
    | <font color="red"><b>(</b></font> <a href="#mintypmax_expression">mintypmax_expression</a> <font color="red"><b>)</b></font>
    | <a href="#cast">cast</a>
    | <a href="#assignment_pattern_expression">assignment_pattern_expression</a>
    | <a href="#streaming_concatenation">streaming_concatenation</a>
    | <a href="#sequence_method_call">sequence_method_call</a>
    | <font color="red"><b>this</b></font>
    | <font color="red"><b>$</b></font>
    | <font color="red"><b>null</b></font>

<a name="class_qualifier">class_qualifier</a> ::=
      [ <font color="red"><b>local::</b></font> ] [ <a href="#implicit_class_handle">implicit_class_handle</a> <font color="red"><b>.</b></font> | <a href="#class_scope">class_scope</a> ]

<a name="range_expression">range_expression</a> ::=
      <a href="#expression">expression</a> | <a href="#part_select_range">part_select_range</a>

<a name="primary_literal">primary_literal</a> ::=
      <a href="#number">number</a> | <a href="#time_literal">time_literal</a> | <a href="#unbased_unsized_literal">unbased_unsized_literal</a> | <a href="#string_literal">string_literal</a>

<a name="time_literal">time_literal</a> ::=
      <a href="#unsigned_number">unsigned_number</a> <a href="#time_unit">time_unit</a> | <a href="#fixed_point_number">fixed_point_number</a> <a href="#time_unit">time_unit</a>

<a name="time_unit">time_unit</a> ::=
      <font color="red"><b>s</b></font> | <font color="red"><b>ms</b></font> | <font color="red"><b>us</b></font> | <font color="red"><b>ns</b></font> | <font color="red"><b>ps</b></font> | <font color="red"><b>fs</b></font>

<a name="implicit_class_handle">implicit_class_handle</a> ::=
      <font color="red"><b>this</b></font> | <font color="red"><b>super</b></font> | <font color="red"><b>this</b></font> <font color="red"><b>.</b></font> <font color="red"><b>super</b></font>

<a name="bit_select">bit_select</a> ::=
      { <font color="red"><b>[</b></font> <a href="#expression">expression</a> <font color="red"><b>]</b></font> }

<a name="select">select</a> ::=
      [ { <font color="red"><b>.</b></font> <a href="#member_identifier">member_identifier</a> <a href="#bit_select">bit_select</a> } <font color="red"><b>.</b></font> <a href="#member_identifier">member_identifier</a> ] <a href="#bit_select">bit_select</a>
      [ <font color="red"><b>[</b></font> <a href="#part_select_range">part_select_range</a> <font color="red"><b>]</b></font> ]

<a name="nonrange_select">nonrange_select</a> ::=
      [ { <font color="red"><b>.</b></font> <a href="#member_identifier">member_identifier</a> <a href="#bit_select">bit_select</a> } <font color="red"><b>.</b></font> <a href="#member_identifier">member_identifier</a> ] <a href="#bit_select">bit_select</a>

<a name="constant_bit_select">constant_bit_select</a> ::=
      { <font color="red"><b>[</b></font> <a href="#constant_expression">constant_expression</a> <font color="red"><b>]</b></font> }

<a name="constant_select">constant_select</a> ::=
      [ { <font color="red"><b>.</b></font> <a href="#member_identifier">member_identifier</a> <a href="#constant_bit_select">constant_bit_select</a> } <font color="red"><b>.</b></font> <a href="#member_identifier">member_identifier</a> ] <a href="#constant_bit_select">constant_bit_select</a>
      [ <font color="red"><b>[</b></font> <a href="#constant_part_select_range">constant_part_select_range</a> <font color="red"><b>]</b></font> ]

<a name="constant_cast">constant_cast</a> ::=
      <a href="#casting_type">casting_type</a> <font color="red"><b>'</b></font> <font color="red"><b>(</b></font> <a href="#constant_expression">constant_expression</a> <font color="red"><b>)</b></font>

<a name="constant_let_expression">constant_let_expression</a> ::=
      <a href="#let_expression">let_expression</a>

<a name="cast">cast</a> ::=
      <a href="#casting_type">casting_type</a> <font color="red"><b>'</b></font> <font color="red"><b>(</b></font> <a href="#expression">expression</a> <font color="red"><b>)</b></font></pre>
<a name="Expression left-side values">
  <h3>8.5 Expression left-side values
  </h3>
</a>
<pre><a name="net_lvalue">net_lvalue</a> ::=
      <a href="#ps_or_hierarchical_net_identifier">ps_or_hierarchical_net_identifier</a> <a href="#constant_select">constant_select</a>
    | <font color="red"><b>{</b></font> <a href="#net_lvalue">net_lvalue</a> { <font color="red"><b>,</b></font> <a href="#net_lvalue">net_lvalue</a> } <font color="red"><b>}</b></font>
    | [ <a href="#assignment_pattern_expression_type">assignment_pattern_expression_type</a> ] <a href="#assignment_pattern_net_lvalue">assignment_pattern_net_lvalue</a>

<a name="variable_lvalue">variable_lvalue</a> ::=
      [ <a href="#implicit_class_handle">implicit_class_handle</a> <font color="red"><b>.</b></font> | <a href="#package_scope">package_scope</a> ] <a href="#hierarchical_variable_identifier">hierarchical_variable_identifier</a> <a href="#select">select</a>
    | <font color="red"><b>{</b></font> <a href="#variable_lvalue">variable_lvalue</a> { <font color="red"><b>,</b></font> <a href="#variable_lvalue">variable_lvalue</a> } <font color="red"><b>}</b></font>
    | [ <a href="#assignment_pattern_expression_type">assignment_pattern_expression_type</a> ] <a href="#assignment_pattern_variable_lvalue">assignment_pattern_variable_lvalue</a>
    | <a href="#streaming_concatenation">streaming_concatenation</a>

<a name="nonrange_variable_lvalue">nonrange_variable_lvalue</a> ::=
      [ <a href="#implicit_class_handle">implicit_class_handle</a> <font color="red"><b>.</b></font> | <a href="#package_scope">package_scope</a> ] <a href="#hierarchical_variable_identifier">hierarchical_variable_identifier</a> <a href="#nonrange_select">nonrange_select</a></pre>
<a name="Operators">
  <h3>8.6 Operators
  </h3>
</a>
<pre><a name="unary_operator">unary_operator</a> ::=
      <font color="red"><b>+</b></font> | <font color="red"><b>-</b></font> | <font color="red"><b>!</b></font> | <font color="red"><b>~</b></font> | <font color="red"><b>&amp;</b></font> | <font color="red"><b>~&amp;</b></font> | <font color="red"><b>|</b></font> | <font color="red"><b>~|</b></font> | <font color="red"><b>^</b></font> | <font color="red"><b>~^</b></font> | <font color="red"><b>^~</b></font>

<a name="binary_operator">binary_operator</a> ::=
      <font color="red"><b>+</b></font>
    | <font color="red"><b>-</b></font>
    | <font color="red"><b>*</b></font>
    | <font color="red"><b>/</b></font>
    | <font color="red"><b>%</b></font>
    | <font color="red"><b>==</b></font>
    | <font color="red"><b>!=</b></font>
    | <font color="red"><b>===</b></font>
    | <font color="red"><b>!==</b></font>
    | <font color="red"><b>==?</b></font>
    | <font color="red"><b>!=?</b></font>
    | <font color="red"><b>&amp;&amp;</b></font>
    | <font color="red"><b>||</b></font>
    | <font color="red"><b>**</b></font>
    | <font color="red"><b>&lt;</b></font>
    | <font color="red"><b>&lt;=</b></font>
    | <font color="red"><b>&gt;</b></font>
    | <font color="red"><b>&gt;=</b></font>
    | <font color="red"><b>&amp;</b></font>
    | <font color="red"><b>|</b></font>
    | <font color="red"><b>^</b></font>
    | <font color="red"><b>^~</b></font>
    | <font color="red"><b>~^</b></font>
    | <font color="red"><b>&gt;&gt;</b></font>
    | <font color="red"><b>&lt;&lt;</b></font>
    | <font color="red"><b>&gt;&gt;&gt;</b></font>
    | <font color="red"><b>&lt;&lt;&lt;</b></font>
    | <font color="red"><b>-&gt;</b></font>
    | <font color="red"><b>&lt;-&gt;</b></font>

<a name="inc_or_dec_operator">inc_or_dec_operator</a> ::=
      <font color="red"><b>++</b></font> | <font color="red"><b>--</b></font>

<a name="unary_module_path_operator">unary_module_path_operator</a> ::=
      <font color="red"><b>!</b></font> | <font color="red"><b>~</b></font> | <font color="red"><b>&amp;</b></font> | <font color="red"><b>~&amp;</b></font> | <font color="red"><b>|</b></font> | <font color="red"><b>~|</b></font> | <font color="red"><b>^</b></font> | <font color="red"><b>~^</b></font> | <font color="red"><b>^~</b></font>

<a name="binary_module_path_operator">binary_module_path_operator</a> ::=
      <font color="red"><b>==</b></font> | <font color="red"><b>!=</b></font> | <font color="red"><b>&amp;&amp;</b></font> | <font color="red"><b>||</b></font> | <font color="red"><b>&amp;</b></font> | <font color="red"><b>|</b></font> | <font color="red"><b>^</b></font> | <font color="red"><b>^~</b></font> | <font color="red"><b>~^</b></font></pre>
<a name="Numbers">
  <h3>8.7 Numbers
  </h3>
</a>
<pre><a name="number">number</a> ::=
      <a href="#integral_number">integral_number</a> | <a href="#real_number">real_number</a>

<a name="integral_number">integral_number</a> ::=
      <a href="#decimal_number">decimal_number</a> | <a href="#octal_number">octal_number</a> | <a href="#binary_number">binary_number</a> | <a href="#hex_number">hex_number</a>

<a name="decimal_number">decimal_number</a> ::=
      <a href="#unsigned_number">unsigned_number</a>
    | [ <a href="#size">size</a> ] <a href="#decimal_base">decimal_base</a> <a href="#unsigned_number">unsigned_number</a>
    | [ <a href="#size">size</a> ] <a href="#decimal_base">decimal_base</a> <a href="#x_digit">x_digit</a> { <font color="red"><b>_</b></font> }
    | [ <a href="#size">size</a> ] <a href="#decimal_base">decimal_base</a> <a href="#z_digit">z_digit</a> { <font color="red"><b>_</b></font> }

<a name="binary_number">binary_number</a> ::=
      [ <a href="#size">size</a> ] <a href="#binary_base">binary_base</a> <a href="#binary_value">binary_value</a>

<a name="octal_number">octal_number</a> ::=
      [ <a href="#size">size</a> ] <a href="#octal_base">octal_base</a> <a href="#octal_value">octal_value</a>

<a name="hex_number">hex_number</a> ::=
      [ <a href="#size">size</a> ] <a href="#hex_base">hex_base</a> <a href="#hex_value">hex_value</a>

<a name="sign">sign</a> ::=
      <font color="red"><b>+</b></font> | <font color="red"><b>-</b></font>

<a name="size">size</a> ::=
      <a href="#non_zero_unsigned_number">non_zero_unsigned_number</a>

<a name="non_zero_unsigned_number">non_zero_unsigned_number</a> ::=!
      <a href="#non_zero_decimal_digit">non_zero_decimal_digit</a> { <font color="red"><b>_</b></font> | <a href="#decimal_digit">decimal_digit</a> }

<a name="real_number">real_number</a> ::=!
      <a href="#fixed_point_number">fixed_point_number</a> | <a href="#unsigned_number">unsigned_number</a> [ <font color="red"><b>.</b></font> <a href="#unsigned_number">unsigned_number</a> ] <a href="#exp">exp</a> [ <a href="#sign">sign</a> ] <a href="#unsigned_number">unsigned_number</a>

<a name="fixed_point_number">fixed_point_number</a> ::=!
      <a href="#unsigned_number">unsigned_number</a> <font color="red"><b>.</b></font> <a href="#unsigned_number">unsigned_number</a>

<a name="exp">exp</a> ::=
      <font color="red"><b>e</b></font> | <font color="red"><b>E</b></font>

<a name="unsigned_number">unsigned_number</a> ::=!
      <a href="#decimal_digit">decimal_digit</a> { <font color="red"><b>_</b></font> | <a href="#decimal_digit">decimal_digit</a> }

<a name="binary_value">binary_value</a> ::=!
      <a href="#binary_digit">binary_digit</a> { <font color="red"><b>_</b></font> | <a href="#binary_digit">binary_digit</a> }

<a name="octal_value">octal_value</a> ::=!
      <a href="#octal_digit">octal_digit</a> { <font color="red"><b>_</b></font> | <a href="#octal_digit">octal_digit</a> }

<a name="hex_value">hex_value</a> ::=!
      <a href="#hex_digit">hex_digit</a> { <font color="red"><b>_</b></font> | <a href="#hex_digit">hex_digit</a> }

<a name="decimal_base">decimal_base</a> ::=!
      <font color="red"><b>'</b></font> [ <font color="red"><b>s</b></font> | <font color="red"><b>S</b></font> ] <font color="red"><b>d</b></font> | <font color="red"><b>'</b></font> [ <font color="red"><b>s</b></font> | <font color="red"><b>S</b></font> ] <font color="red"><b>D</b></font>

<a name="binary_base">binary_base</a> ::=!
      <font color="red"><b>'</b></font> [ <font color="red"><b>s</b></font> | <font color="red"><b>S</b></font> ] <font color="red"><b>b</b></font> | <font color="red"><b>'</b></font> [ <font color="red"><b>s</b></font> | <font color="red"><b>S</b></font> ] <font color="red"><b>B</b></font>

<a name="octal_base">octal_base</a> ::=!
      <font color="red"><b>'</b></font> [ <font color="red"><b>s</b></font> | <font color="red"><b>S</b></font> ] <font color="red"><b>o</b></font> | <font color="red"><b>'</b></font> [ <font color="red"><b>s</b></font> | <font color="red"><b>S</b></font> ] <font color="red"><b>O</b></font>

<a name="hex_base">hex_base</a> ::=!
      <font color="red"><b>'</b></font> [ <font color="red"><b>s</b></font> | <font color="red"><b>S</b></font> ] <font color="red"><b>h</b></font> | <font color="red"><b>'</b></font> [ <font color="red"><b>s</b></font> | <font color="red"><b>S</b></font> ] <font color="red"><b>H</b></font>

<a name="non_zero_decimal_digit">non_zero_decimal_digit</a> ::=
      <font color="red"><b>1</b></font> | <font color="red"><b>2</b></font> | <font color="red"><b>3</b></font> | <font color="red"><b>4</b></font> | <font color="red"><b>5</b></font> | <font color="red"><b>6</b></font> | <font color="red"><b>7</b></font> | <font color="red"><b>8</b></font> | <font color="red"><b>9</b></font>

<a name="decimal_digit">decimal_digit</a> ::=
      <font color="red"><b>0</b></font> | <font color="red"><b>1</b></font> | <font color="red"><b>2</b></font> | <font color="red"><b>3</b></font> | <font color="red"><b>4</b></font> | <font color="red"><b>5</b></font> | <font color="red"><b>6</b></font> | <font color="red"><b>7</b></font> | <font color="red"><b>8</b></font> | <font color="red"><b>9</b></font>

<a name="binary_digit">binary_digit</a> ::=
      <a href="#x_digit">x_digit</a> | <a href="#z_digit">z_digit</a> | <font color="red"><b>0</b></font> | <font color="red"><b>1</b></font>

<a name="octal_digit">octal_digit</a> ::=
      <a href="#x_digit">x_digit</a> | <a href="#z_digit">z_digit</a> | <font color="red"><b>0</b></font> | <font color="red"><b>1</b></font> | <font color="red"><b>2</b></font> | <font color="red"><b>3</b></font> | <font color="red"><b>4</b></font> | <font color="red"><b>5</b></font> | <font color="red"><b>6</b></font> | <font color="red"><b>7</b></font>

<a name="hex_digit">hex_digit</a> ::=
      <a href="#x_digit">x_digit</a>
    | <a href="#z_digit">z_digit</a>
    | <font color="red"><b>0</b></font>
    | <font color="red"><b>1</b></font>
    | <font color="red"><b>2</b></font>
    | <font color="red"><b>3</b></font>
    | <font color="red"><b>4</b></font>
    | <font color="red"><b>5</b></font>
    | <font color="red"><b>6</b></font>
    | <font color="red"><b>7</b></font>
    | <font color="red"><b>8</b></font>
    | <font color="red"><b>9</b></font>
    | <font color="red"><b>a</b></font>
    | <font color="red"><b>b</b></font>
    | <font color="red"><b>c</b></font>
    | <font color="red"><b>d</b></font>
    | <font color="red"><b>e</b></font>
    | <font color="red"><b>f</b></font>
    | <font color="red"><b>A</b></font>
    | <font color="red"><b>B</b></font>
    | <font color="red"><b>C</b></font>
    | <font color="red"><b>D</b></font>
    | <font color="red"><b>E</b></font>
    | <font color="red"><b>F</b></font>

<a name="x_digit">x_digit</a> ::=
      <font color="red"><b>x</b></font> | <font color="red"><b>X</b></font>

<a name="z_digit">z_digit</a> ::=
      <font color="red"><b>z</b></font> | <font color="red"><b>Z</b></font> | <font color="red"><b>?</b></font>

<a name="unbased_unsized_literal">unbased_unsized_literal</a> ::=
      <font color="red"><b>'0</b></font> | <font color="red"><b>'1</b></font> | <font color="red"><b>'z_or_x</b></font></pre>
<a name="Strings">
  <h3>8.8 Strings
  </h3>
</a>
<pre><a name="string_literal">string_literal</a> ::=
      <font color="red"><b>"</b></font> { <a href="#Any_ASCII_Characters">Any_ASCII_Characters</a> } <font color="red"><b>"</b></font></pre>
<a name="General">
  <h3>9 General
  </h3>
</a>
<a name="Attributes">
  <h3>9.1 Attributes
  </h3>
</a>
<pre><a name="attribute_instance">attribute_instance</a> ::=
      <font color="red"><b>(*</b></font> <a href="#attr_spec">attr_spec</a> { <font color="red"><b>,</b></font> <a href="#attr_spec">attr_spec</a> } <font color="red"><b>*)</b></font>

<a name="attr_spec">attr_spec</a> ::=
      <a href="#attr_name">attr_name</a> [ <font color="red"><b>=</b></font> <a href="#constant_expression">constant_expression</a> ]

<a name="attr_name">attr_name</a> ::=
      <a href="#identifier">identifier</a></pre>
<a name="Comments">
  <h3>9.2 Comments
  </h3>
</a>
<pre><a name="comment">comment</a> ::=
      <a href="#one_line_comment">one_line_comment</a> | <a href="#block_comment">block_comment</a>

<a name="one_line_comment">one_line_comment</a> ::=
      <font color="red"><b>//</b></font> <a href="#comment_text">comment_text</a> <a href="#new_line_char">new_line_char</a>

<a name="block_comment">block_comment</a> ::=
      <font color="red"><b>/*</b></font> <a href="#comment_text">comment_text</a> <font color="red"><b>*/</b></font>

<a name="comment_text">comment_text</a> ::=
      { <a href="#Any_ASCII_character">Any_ASCII_character</a> }</pre>
<a name="Identifiers">
  <h3>9.3 Identifiers
  </h3>
</a>
<pre><a name="array_identifier">array_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="block_identifier">block_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="bin_identifier">bin_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="c_identifier">c_identifier</a> ::=
      [ <font color="red"><b>a-zA-Z_</b></font> ] { [ <font color="red"><b>a-zA-Z0-9_</b></font> ] }

<a name="cell_identifier">cell_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="checker_identifier">checker_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="class_identifier">class_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="class_variable_identifier">class_variable_identifier</a> ::=
      <a href="#variable_identifier">variable_identifier</a>

<a name="clocking_identifier">clocking_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="config_identifier">config_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="const_identifier">const_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="constraint_identifier">constraint_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="covergroup_identifier">covergroup_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="covergroup_variable_identifier">covergroup_variable_identifier</a> ::=
      <a href="#variable_identifier">variable_identifier</a>

<a name="cover_point_identifier">cover_point_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="cross_identifier">cross_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="dynamic_array_variable_identifier">dynamic_array_variable_identifier</a> ::=
      <a href="#variable_identifier">variable_identifier</a>

<a name="enum_identifier">enum_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="escaped_identifier">escaped_identifier</a> ::=
      <font color="red"><b>\</b></font> { <a href="#any_printable_ASCII_character_except_white_space">any_printable_ASCII_character_except_white_space</a> } <a href="#white_space">white_space</a>

<a name="formal_identifier">formal_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="formal_port_identifier">formal_port_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="function_identifier">function_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="generate_block_identifier">generate_block_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="genvar_identifier">genvar_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="hierarchical_array_identifier">hierarchical_array_identifier</a> ::=
      <a href="#hierarchical_identifier">hierarchical_identifier</a>

<a name="hierarchical_block_identifier">hierarchical_block_identifier</a> ::=
      <a href="#hierarchical_identifier">hierarchical_identifier</a>

<a name="hierarchical_event_identifier">hierarchical_event_identifier</a> ::=
      <a href="#hierarchical_identifier">hierarchical_identifier</a>

<a name="hierarchical_identifier">hierarchical_identifier</a> ::=
      [ <font color="red"><b>$root</b></font> <font color="red"><b>.</b></font> ] { <a href="#identifier">identifier</a> <a href="#constant_bit_select">constant_bit_select</a> <font color="red"><b>.</b></font> } <a href="#identifier">identifier</a>

<a name="hierarchical_net_identifier">hierarchical_net_identifier</a> ::=
      <a href="#hierarchical_identifier">hierarchical_identifier</a>

<a name="hierarchical_parameter_identifier">hierarchical_parameter_identifier</a> ::=
      <a href="#hierarchical_identifier">hierarchical_identifier</a>

<a name="hierarchical_property_identifier">hierarchical_property_identifier</a> ::=
      <a href="#hierarchical_identifier">hierarchical_identifier</a>

<a name="hierarchical_sequence_identifier">hierarchical_sequence_identifier</a> ::=
      <a href="#hierarchical_identifier">hierarchical_identifier</a>

<a name="hierarchical_task_identifier">hierarchical_task_identifier</a> ::=
      <a href="#hierarchical_identifier">hierarchical_identifier</a>

<a name="hierarchical_tf_identifier">hierarchical_tf_identifier</a> ::=
      <a href="#hierarchical_identifier">hierarchical_identifier</a>

<a name="hierarchical_variable_identifier">hierarchical_variable_identifier</a> ::=
      <a href="#hierarchical_identifier">hierarchical_identifier</a>

<a name="identifier">identifier</a> ::=
      <a href="#simple_identifier">simple_identifier</a> | <a href="#escaped_identifier">escaped_identifier</a>

<a name="index_variable_identifier">index_variable_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="interface_identifier">interface_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="interface_instance_identifier">interface_instance_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="inout_port_identifier">inout_port_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="input_port_identifier">input_port_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="instance_identifier">instance_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="library_identifier">library_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="member_identifier">member_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="method_identifier">method_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="modport_identifier">modport_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="module_identifier">module_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="net_identifier">net_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="net_type_identifier">net_type_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="output_port_identifier">output_port_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="package_identifier">package_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="package_scope">package_scope</a> ::=
      <a href="#package_identifier">package_identifier</a> <font color="red"><b>::</b></font> | <font color="red"><b>$unit</b></font> <font color="red"><b>::</b></font>

<a name="parameter_identifier">parameter_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="port_identifier">port_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="production_identifier">production_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="program_identifier">program_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="property_identifier">property_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="ps_class_identifier">ps_class_identifier</a> ::=
      [ <a href="#package_scope">package_scope</a> ] <a href="#class_identifier">class_identifier</a>

<a name="ps_covergroup_identifier">ps_covergroup_identifier</a> ::=
      [ <a href="#package_scope">package_scope</a> ] <a href="#covergroup_identifier">covergroup_identifier</a>

<a name="ps_checker_identifier">ps_checker_identifier</a> ::=
      [ <a href="#package_scope">package_scope</a> ] <a href="#checker_identifier">checker_identifier</a>

<a name="ps_identifier">ps_identifier</a> ::=
      [ <a href="#package_scope">package_scope</a> ] <a href="#identifier">identifier</a>

<a name="ps_or_hierarchical_array_identifier">ps_or_hierarchical_array_identifier</a> ::=
      [ <a href="#implicit_class_handle">implicit_class_handle</a> <font color="red"><b>.</b></font> | <a href="#class_scope">class_scope</a> | <a href="#package_scope">package_scope</a> ] <a href="#hierarchical_array_identifier">hierarchical_array_identifier</a>

<a name="ps_or_hierarchical_net_identifier">ps_or_hierarchical_net_identifier</a> ::=
      [ <a href="#package_scope">package_scope</a> ] <a href="#net_identifier">net_identifier</a> | <a href="#hierarchical_net_identifier">hierarchical_net_identifier</a>

<a name="ps_or_hierarchical_property_identifier">ps_or_hierarchical_property_identifier</a> ::=
      [ <a href="#package_scope">package_scope</a> ] <a href="#property_identifier">property_identifier</a> | <a href="#hierarchical_property_identifier">hierarchical_property_identifier</a>

<a name="ps_or_hierarchical_sequence_identifier">ps_or_hierarchical_sequence_identifier</a> ::=
      [ <a href="#package_scope">package_scope</a> ] <a href="#sequence_identifier">sequence_identifier</a> | <a href="#hierarchical_sequence_identifier">hierarchical_sequence_identifier</a>

<a name="ps_or_hierarchical_tf_identifier">ps_or_hierarchical_tf_identifier</a> ::=
      [ <a href="#package_scope">package_scope</a> ] <a href="#tf_identifier">tf_identifier</a> | <a href="#hierarchical_tf_identifier">hierarchical_tf_identifier</a>

<a name="ps_parameter_identifier">ps_parameter_identifier</a> ::=
      [ <a href="#package_scope">package_scope</a> | <a href="#class_scope">class_scope</a> ] <a href="#parameter_identifier">parameter_identifier</a>
    | { <a href="#generate_block_identifier">generate_block_identifier</a> [ <font color="red"><b>[</b></font> <a href="#constant_expression">constant_expression</a> <font color="red"><b>]</b></font> ] <font color="red"><b>.</b></font> } <a href="#parameter_identifier">parameter_identifier</a>

<a name="ps_type_identifier">ps_type_identifier</a> ::=
      [ <font color="red"><b>local::</b></font> | <a href="#package_scope">package_scope</a> ] <a href="#type_identifier">type_identifier</a>

<a name="sequence_identifier">sequence_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="signal_identifier">signal_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="simple_identifier">simple_identifier</a> ::=
      [ <font color="red"><b>a-zA-Z_</b></font> ] { [ <font color="red"><b>a-zA-Z0-9_$</b></font> ] }

<a name="specparam_identifier">specparam_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="system_tf_identifier">system_tf_identifier</a> ::=
      <font color="red"><b>$</b></font> [ <font color="red"><b>a-zA-Z0-9_$</b></font> ] { [ <font color="red"><b>a-zA-Z0-9_$</b></font> ] }

<a name="task_identifier">task_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="tf_identifier">tf_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="terminal_identifier">terminal_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="topmodule_identifier">topmodule_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="type_identifier">type_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="udp_identifier">udp_identifier</a> ::=
      <a href="#identifier">identifier</a>

<a name="variable_identifier">variable_identifier</a> ::=
      <a href="#identifier">identifier</a></pre>
    </div>
